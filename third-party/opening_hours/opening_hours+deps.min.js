(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):(global=global||self,global.opening_hours=factory())})(this,(function(){"use strict";var data={PH:[{name:"Neujahrstag",fixed_date:[1,1]},{name:"Heilige Drei KÃ¶nige",fixed_date:[1,6]},{name:"Ostermontag",variable_date:"easter",offset:1},{name:"Staatsfeiertag",fixed_date:[5,1]},{name:"Christi Himmelfahrt",variable_date:"easter",offset:39},{name:"Pfingstmontag",variable_date:"easter",offset:50},{name:"Fronleichnam",variable_date:"easter",offset:60},{name:"MariÃ¤ Himmelfahrt",fixed_date:[8,15]},{name:"Nationalfeiertag",fixed_date:[10,26]},{name:"Allerheiligen",fixed_date:[11,1]},{name:"MariÃ¤ EmpfÃ¤ngnis",fixed_date:[12,8]},{name:"Christtag",fixed_date:[12,25]},{name:"Stefanitag",fixed_date:[12,26]}],SH:[{2017:[4,8,4,18],2018:[3,24,4,3],2019:[4,13,4,23],2020:[4,4,4,14],2021:[3,27,4,6],2022:[4,9,4,19],2023:[4,1,4,11],2024:[3,23,4,2],name:"Osterferien"},{2017:[6,3,6,6],2018:[5,19,5,22],2019:[6,8,6,11],2020:[5,30,6,2],2021:[5,22,5,25],2022:[6,4,6,7],2023:[5,57,5,30],2024:[5,18,5,21],name:"Pfingstferien"},{2016:[11,2],2017:[11,2],2018:[11,2],2019:[11,2],2020:[11,2],2021:[11,2],2022:[11,2],2023:[11,2],name:"Allerseelen"},{2016:[12,24,1,7],2017:[12,24,1,6],2018:[12,24,1,6],2019:[12,23,1,6],2020:[12,24,1,6],2021:[12,24,1,6],2022:[12,24,1,6],2023:[12,24,1,6],name:"Weihnachtsferien"}],Burgenland:{_state_code:1,SH:[{2016:[2,8,2,13],2017:[2,13,2,18],2018:[2,12,2,17],2019:[2,11,2,16],2020:[2,10,2,15],2021:[2,8,2,13],name:"Semesterferien"},{2016:[7,2,9,3],2017:[7,1,9,3],2018:[6,30,9,2],2019:[6,29,9,1],2020:[7,4,9,6],2021:[7,3,9,4],name:"Sommerferien"}]},"KÃ¤rnten":{_state_code:2,SH:[{2016:[2,8,2,13],2017:[2,13,2,18],2018:[2,12,2,17],2019:[2,11,2,16],2020:[2,10,2,15],2021:[2,8,2,13],name:"Semesterferien"},{2016:[7,9,9,10],2017:[7,8,9,10],2018:[7,7,9,9],2019:[7,6,9,8],2020:[7,11,9,13],2021:[7,10,9,11],name:"Sommerferien"}]},"NiederÃ¶sterreich":{_state_code:3,SH:[{2016:[2,1,2,6],2017:[2,6,2,11],2018:[2,5,2,10],2019:[2,4,2,9],2020:[2,3,2,8],2021:[2,1,2,6],name:"Semesterferien"},{2016:[7,2,9,3],2017:[7,1,9,3],2018:[6,30,9,2],2019:[6,29,9,1],2020:[7,4,9,6],2021:[7,3,9,4],name:"Sommerferien"}]},"OberÃ¶sterreich":{_state_code:4,SH:[{2016:[2,15,2,20],2017:[2,20,2,25],2018:[2,19,2,24],2019:[2,18,2,23],2020:[2,17,2,22],2021:[2,15,2,20],name:"Semesterferien"},{2016:[7,9,9,10],2017:[7,8,9,10],2018:[7,7,9,9],2019:[7,6,9,8],2020:[7,11,9,13],2021:[7,10,9,11],name:"Sommerferien"}]},Salzburg:{_state_code:5,SH:[{2016:[2,8,2,13],2017:[2,13,2,18],2018:[2,12,2,17],2019:[2,11,2,16],2020:[2,10,2,15],2021:[2,8,2,13],name:"Semesterferien"},{2016:[7,9,9,10],2017:[7,8,9,10],2018:[7,7,9,9],2019:[7,6,9,8],2020:[7,11,9,13],2021:[7,10,9,11],name:"Sommerferien"}]},Steiermark:{_state_code:6,SH:[{2016:[2,15,2,20],2017:[2,20,2,25],2018:[2,19,2,24],2019:[2,18,2,23],2020:[2,17,2,22],2021:[2,15,2,20],name:"Semesterferien"},{2016:[7,9,9,10],2017:[7,8,9,10],2018:[7,7,9,9],2019:[7,6,9,8],2020:[7,11,9,13],2021:[7,10,9,12],name:"Sommerferien"}]},Tirol:{_state_code:7,SH:[{2016:[2,8,2,13],2017:[2,13,2,18],2018:[2,12,2,17],2019:[2,11,2,16],2020:[2,10,2,15],2021:[2,8,2,13],name:"Semesterferien"},{2016:[7,9,9,10],2017:[7,8,9,10],2018:[7,7,9,9],2019:[7,6,9,8],2020:[7,11,9,13],2021:[7,10,9,11],name:"Sommerferien"}]},Vorarlberg:{_state_code:8,SH:[{2016:[2,15,2,20],2017:[2,13,2,18],2018:[2,5,2,10],2019:[2,11,2,16],2020:[2,10,2,15],2021:[2,8,2,13],name:"Semesterferien"},{2016:[7,9,9,10],2017:[7,8,9,10],2018:[7,7,9,9],2019:[7,6,9,8],2020:[7,11,9,13],2021:[7,10,9,11],name:"Sommerferien"}]},Wien:{_state_code:9,SH:[{2016:[2,1,2,6],2017:[2,6,2,11],2018:[2,5,2,10],2019:[2,4,2,9],2020:[2,3,2,8],2021:[2,1,2,6],name:"Semesterferien"},{2016:[7,2,9,3],2017:[7,1,9,3],2018:[6,30,9,2],2019:[6,29,9,1],2020:[7,4,9,6],2021:[7,3,9,4],name:"Sommerferien"}]}};var data$1={PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}],"Australian Capital Territory":{_state_code:"act",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Canberra Day",variable_date:"firstMarchMonday",offset:7},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Saturday",variable_date:"easter",offset:-1},{name:"Easter Sunday",variable_date:"easter"},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Reconciliation Day",variable_date:"lastMayMonday"},{name:"Queens Birthday",variable_date:"firstJuneMonday",offset:7},{name:"Family and Community Day",variable_date:"lastSeptemberMonday"},{name:"Labour Day",variable_date:"firstOctoberMonday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"New South Wales":{_state_code:"nsw",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Saturday",variable_date:"easter",offset:-1},{name:"Easter Sunday",variable_date:"easter"},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Queens Birthday",variable_date:"firstJuneMonday",offset:7},{name:"Labour Day",variable_date:"firstOctoberMonday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"Northern Territory":{_state_code:"nt",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Saturday",variable_date:"easter",offset:-1},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"May Day",variable_date:"firstMayMonday"},{name:"Queens Birthday",variable_date:"firstJuneMonday",offset:7},{name:"Picnic Day",variable_date:"firstAugustMonday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},Queensland:{_state_code:"qld",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Saturday",variable_date:"easter",offset:-1},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Labour Day",variable_date:"firstMayMonday"},{name:"Queens Birthday",variable_date:"firstOctoberMonday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"South Australia":{_state_code:"sa",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Adelaide Cup",variable_date:"firstMarchMonday",offset:7},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Saturday",variable_date:"easter",offset:-1},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Queens Birthday",variable_date:"firstJuneMonday",offset:7},{name:"Labour Day",variable_date:"firstOctoberMonday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},Tasmania:{_state_code:"tas",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Eight Hours Day",variable_date:"firstMarchMonday",offset:7},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Queens Birthday",variable_date:"firstJuneMonday",offset:7},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},Victoria:{_state_code:"vic",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Labour Day",variable_date:"firstMarchMonday",offset:7},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Saturday",variable_date:"easter",offset:-1},{name:"Easter Sunday",variable_date:"easter"},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Queens Birthday",variable_date:"firstJuneMonday",offset:7},{name:"AFL Grand Final",variable_date:"lastSeptemberFriday"},{name:"Melbourne Cup",variable_date:"firstNovemberTuesday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"Western Australia":{_state_code:"wa",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Labour Day",variable_date:"firstMarchMonday"},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Western Australia Day",variable_date:"firstJuneMonday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]}};var data$2={PH:[{name:"Nieuwjaar - Jour de l'an",fixed_date:[1,1]},{name:"Paasmaandag - Lundi de PÃ¢ques",variable_date:"easter",offset:1},{name:"Dag van de Arbeid - FÃªte du Travail",fixed_date:[5,1]},{name:"Onze-Lieve-Heer-Hemelvaart - Jeudi de l'Ascensionn",variable_date:"easter",offset:39},{name:"Pinkstermaandag - Lundi de PentecÃ´te",variable_date:"easter",offset:50},{name:"Nationale feestdag van BelgiÃ« - FÃªte nationale",fixed_date:[7,21]},{name:"Onze-Lieve-Vrouw-Hemelvaart - Assomption",fixed_date:[8,15]},{name:"Allerheiligen - Toussaint",fixed_date:[11,1]},{name:"Wapenstilstand - Armistice",fixed_date:[11,11]},{name:"Kerstmis - NoÃ«l",fixed_date:[12,25]}],SH:[{2020:[2,24,3,1],2021:[2,15,2,21],2022:[2,28,3,6],2023:[2,20,2,26],name:"Krokusvakantie - Vacances de carnaval"},{2020:[4,6,4,19],2021:[4,5,4,18],2022:[4,4,4,18],2023:[4,3,4,16],name:"Paasvakantie - Vacances de pÃ¢ques"},{2020:[7,1,8,31],2021:[7,1,8,31],2022:[7,1,8,31],2023:[7,1,8,31],name:"Zomervakantie - Vacances d'Ã©tÃ©"},{2019:[10,28,11,3],2020:[11,2,11,15],2021:[11,1,11,7],2022:[10,31,11,6],name:"Herfstvakantie - Vacances automne"},{2019:[12,23,1,5],2020:[12,21,1,3],2021:[12,27,1,9],2022:[12,26,1,8],name:"Kerstvakantie - Vacances de NoÃ«l"}]};var data$3={PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}],Acre:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Dia do evangÃ©lico",fixed_date:[1,23]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Alusivo ao Dia Internacional da Mulher",fixed_date:[3,8]},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"AniversÃ¡rio do estado",fixed_date:[6,15]},{name:"Dia da AmazÃ´nia",fixed_date:[9,5]},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Assinatura do Tratado de PetrÃ³polis",fixed_date:[11,17]},{name:"Natal",fixed_date:[12,25]}]},Alagoas:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"SÃ£o JoÃ£o",fixed_date:[6,24]},{name:"SÃ£o Pedro",fixed_date:[6,29]},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"EmancipaÃ§Ã£o polÃ­tica",fixed_date:[9,16]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Morte de Zumbi dos Palmares",fixed_date:[11,20]},{name:"Natal",fixed_date:[12,25]}]},"AmapÃ¡":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Dia de SÃ£o JosÃ©",fixed_date:[3,19]},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Data Magna do estado",fixed_date:[9,13]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},Amazonas:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Data Magna do estado",fixed_date:[9,5]},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Dia da ConsciÃªncia Negra",fixed_date:[11,20]},{name:"Natal",fixed_date:[12,25]}]},Bahia:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Data magna do estado",fixed_date:[2,7]},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"CearÃ¡":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Data magna do estado",fixed_date:[3,25]},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Distrito Federal":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Dia do evangÃ©lico",fixed_date:[11,30]},{name:"Natal",fixed_date:[12,25]}]},"EspÃ­rito Santo":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Data magna do estado",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"GoiÃ¡s":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"MaranhÃ£o":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Data magna do estado",fixed_date:[7,28]},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Mato Grosso":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Dia da ConsciÃªncia Negra",fixed_date:[11,20]},{name:"Natal",fixed_date:[12,25]}]},"Mato Grosso do Sul":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"CriaÃ§Ã£o do estado",fixed_date:[10,11]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Minas Gerais":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Data magna do estado",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"ParÃ¡":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Data magna do estado",fixed_date:[8,15]},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"ParaÃ­ba":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Homenagem a JoÃ£o Pessoa",fixed_date:[7,26]},{name:"Data magna do estado",fixed_date:[8,5]},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"ParanÃ¡":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Data magna do estado",fixed_date:[12,19]},{name:"Natal",fixed_date:[12,25]}]},Pernambuco:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Data magna do estado",variable_date:"firstMarchSunday"},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"PiauÃ­":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Data magna do estado",fixed_date:[10,19]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Rio de Janeiro":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Dia da ConsciÃªncia Negra",fixed_date:[11,20]},{name:"Natal",fixed_date:[12,25]}]},"Rio Grande do Norte":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"SÃ£o Jorge",fixed_date:[4,23]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"MÃ¡rtires de CunhaÃº e UruaÃ§u",fixed_date:[10,3]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Rio Grande do Sul":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"ProclamaÃ§Ã£o da RepÃºblica Rio-Grandense",fixed_date:[9,20]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"RondÃ´nia":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Data magna do estado",fixed_date:[1,4]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Dia do evangÃ©lico",fixed_date:[6,18]},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},Roraima:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Data magna do estado",fixed_date:[10,5]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Santa Catarina":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Data magna do estado",fixed_date:[8,11]},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Santa Catarina de Alexandria",fixed_date:[11,25]},{name:"Natal",fixed_date:[12,25]}]},"SÃ£o Paulo":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Data magna do estado",fixed_date:[7,9]},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},Sergipe:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"AniversÃ¡rio de Aracaju",fixed_date:[3,17]},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"SÃ£o JoÃ£o",fixed_date:[6,24]},{name:"Data magna do estado",fixed_date:[7,8]},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Nossa Senhora da ConceiÃ§Ã£o",fixed_date:[12,8]},{name:"Natal",fixed_date:[12,25]}]},Tocantins:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Autonomia do estado",fixed_date:[3,18]},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"IndependÃªncia",fixed_date:[9,7]},{name:"Nossa Senhora da Natividade",fixed_date:[9,8]},{name:"CriaÃ§Ã£o do estado",fixed_date:[10,5]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"ProclamaÃ§Ã£o da RepÃºblica",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]}};var data$4={PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Canada Day",variable_date:"canadaDay"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Christmas Day",fixed_date:[12,25]}],Alberta:{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Alberta Family Day",variable_date:"firstFebruaryMonday",offset:14},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Heritage Day",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"British Columbia":{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Family Day",variable_date:"firstFebruaryMonday",offset:7},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"British Columbia Day",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]}]},Manitoba:{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Louis Riel Day",variable_date:"firstFebruaryMonday",offset:14},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Civic Holiday",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]}]},"New Brunswick":{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"New Brunswick Day",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"Newfoundland and Labrador":{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Saint Patrick's Day",fixed_date:[3,17]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Saint George's Day",fixed_date:[4,23]},{name:"Discovery Day",fixed_date:[6,24]},{name:"Memorial Day",fixed_date:[7,1]},{name:"Orangemen's Day",fixed_date:[7,12]},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Armistice Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]}]},"Northwest Territories":{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"National Aboriginal Day",fixed_date:[6,21]},{name:"Canada Day",variable_date:"canadaDay"},{name:"Civic Holiday",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]}]},"Nova Scotia":{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Natal Day",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},Nunavut:{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Nunavut Day",fixed_date:[7,9]},{name:"Civic Holiday",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]}]},Ontario:{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Family Day",variable_date:"firstFebruaryMonday",offset:14},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"August Civic Public Holiday",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"Prince Edward Island":{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Islander Day",variable_date:"firstFebruaryMonday",offset:14},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Civic Holiday",variable_date:"firstAugustMonday"},{name:"Gold Cup Parade Day",variable_date:"firstAugustMonday",offset:18},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},Quebec:{PH:[{name:"Jour de l'an",fixed_date:[1,1]},{name:"Vendredi saint",variable_date:"easter",offset:-2},{name:"Lundi de PÃ¢ques",variable_date:"easter",offset:1},{name:"JournÃ©e nationale des patriotes",variable_date:"victoriaDay"},{name:"FÃªte nationale du QuÃ©bec",fixed_date:[6,24]},{name:"FÃªte du Canada",variable_date:"canadaDay"},{name:"FÃªte du Travail",variable_date:"firstSeptemberMonday"},{name:"Jour de l'Action de grÃ¢ce",variable_date:"firstOctoberMonday",offset:7},{name:"NoÃ«l",fixed_date:[12,25]}]},Saskatchewan:{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Family Day",variable_date:"firstFebruaryMonday",offset:14},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Saskatchewan Day",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]}]},Yukon:{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Heritage Day",variable_date:"lastFebruarySunday",offset:-2},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Discovery Day",variable_date:"firstAugustMonday",offset:14},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]}};var data$5={PH:[{name:"Neujahrstag/Nouvel an/Capo d'anno",fixed_date:[1,1]},{name:"Berchtoldstag/2 janvier",fixed_date:[1,2],only_states:["ZÃ¼rich","Bern","Luzern","Obwalden","Nidwalden","Glarus","Zug","Freiburg","Solothurn","Schaffhausen","GraubÃ¼nden","Aargau","Thurgau","Waadt","Neuenburg","Genf","Jura","Sankt Gallen","Wallis"]},{name:"Heilige Drei KÃ¶nige/Epifania",fixed_date:[1,6],only_states:["Uri","Schwyz","GraubÃ¼nden","Tessin"]},{name:"Instauration de la RÃ©publique",fixed_date:[3,1],only_states:["Neuenburg"]},{name:"Josefstag/Saint-Joseph/San Giuseppe",fixed_date:[3,19],only_states:["Luzern","Uri","Schwyz","Nidwalden","Zug","GraubÃ¼nden","Tessin","Wallis"]},{name:"Karfreitag/Vendredi saint",variable_date:"easter",offset:-2,only_states:["ZÃ¼rich","Bern","Luzern","Uri","Schwyz","Obwalden","Nidwalden","Glarus","Zug","Freiburg","Solothurn","Basel-Stadt","Basel-Landschaft","Schaffhausen","Appenzell Ausserrhoden","Appenzell Innerrhoden","Sankt Gallen","GraubÃ¼nden","Aargau","Thurgau","Waadt","Neuenburg","Genf","Jura"]},{name:"Ostermontag/Lundi de PÃ¢ques/Lunedi di Pasqua",variable_date:"easter",offset:1,only_states:["ZÃ¼rich","Bern","Luzern","Uri","Schwyz","Obwalden","Nidwalden","Glarus","Zug","Freiburg","Solothurn","Basel-Stadt","Basel-Landschaft","Schaffhausen","Appenzell Ausserrhoden","Appenzell Innerrhoden","Sankt Gallen","GraubÃ¼nden","Aargau","Thurgau","Tessin","Waadt","Neuenburg","Genf","Jura","Wallis"]},{name:"Tag der Arbeit/Festa dei lavoratori",fixed_date:[5,1],only_states:["ZÃ¼rich","Freiburg","Solothurn","Basel-Stadt","Basel-Landschaft","Schaffhausen","Aargau","Thurgau","Tessin","Neuenburg","Jura"]},{name:"Auffahrt/Ascension/Ascensione",variable_date:"easter",offset:39},{name:"Pfingstmontag/Lundi de PentecÃ´te/Lunedi di Pentecoste",variable_date:"easter",offset:50,only_states:["ZÃ¼rich","Bern","Luzern","Uri","Schwyz","Obwalden","Nidwalden","Glarus","Zug","Freiburg","Solothurn","Basel-Stadt","Basel-Landschaft","Schaffhausen","Appenzell Ausserrhoden","Appenzell Innerrhoden","Sankt Gallen","GraubÃ¼nden","Aargau","Thurgau","Tessin","Waadt","Neuenburg","Genf","Jura","Wallis"]},{name:"Fronleichnam/FÃªte-Dieu/Corpus domini",variable_date:"easter",offset:60,only_states:["Luzern","Uri","Schwyz","Obwalden","Nidwalden","Zug","Freiburg","Solothurn","Basel-Landschaft","Appenzell Innerrhoden","GraubÃ¼nden","Aargau","Tessin","Wallis","Neuenburg","Jura"]},{name:"CommÃ©moration du plÃ©biscite jurassien",fixed_date:[6,23],only_states:["Jura"]},{name:"San Pietro e Paolo",fixed_date:[6,29],only_states:["Tessin"]},{name:"Bundesfeiertag/Jour de la fÃªte nationale/Giorno festivo federale",fixed_date:[8,1]},{name:"MariÃ¤ Himmelfahrt/Assomption/Assunzione",fixed_date:[8,15],only_states:["Luzern","Uri","Schwyz","Obwalden","Nidwalden","Zug","Freiburg","Solothurn","Basel-Landschaft","Appenzell Innerrhoden","GraubÃ¼nden","Aargau","Tessin","Wallis","Jura"]},{name:"Mauritiustag",fixed_date:[9,22],only_states:["Appenzell Innerrhoden"]},{name:"Bruderklausenfest",fixed_date:[9,25],only_states:["Obwalden"]},{name:"Allerheiligen/Toussaint/Ognissanti",fixed_date:[11,1],only_states:["Luzern","Uri","Schwyz","Obwalden","Nidwalden","Glarus","Zug","Freiburg","Solothurn","Appenzell Innerrhoden","Sankt Gallen","GraubÃ¼nden","Aargau","Tessin","Wallis","Jura"]},{name:"MariÃ¤ EmpfÃ¤ngnis/ImmaculÃ©e Conception/Ognissanti",fixed_date:[12,8],only_states:["Luzern","Uri","Schwyz","Obwalden","Nidwalden","Zug","Freiburg","Solothurn","Appenzell Innerrhoden","GraubÃ¼nden","Aargau","Tessin","Wallis"]},{name:"Weihnachtstag/NoÃ«l/Natale",fixed_date:[12,25]},{name:"Stephanstag/Saint-Etienne/Santo Stefano",fixed_date:[12,26],only_states:["ZÃ¼rich","Bern","Luzern","Uri","Schwyz","Obwalden","Nidwalden","Glarus","Zug","Freiburg","Solothurn","Basel-Stadt","Basel-Landschaft","Schaffhausen","Appenzell Ausserrhoden","Appenzell Innerrhoden","Sankt Gallen","GraubÃ¼nden","Aargau","Thurgau","Tessin","Wallis"]},{name:"Restauration de la RÃ©publique",fixed_date:[12,31],only_states:["Genf"]}],Aargau:{_state_code:"ag"},"Appenzell Ausserrhoden":{_state_code:"ar"},"Appenzell Innerrhoden":{_state_code:"ai"},"Basel-Landschaft":{_state_code:"bl"},"Basel-Stadt":{_state_code:"bs"},Bern:{_state_code:"be"},Freiburg:{_state_code:"fr"},Genf:{_state_code:"ge"},Glarus:{_state_code:"gl"},"GraubÃ¼nden":{_state_code:"gr"},Jura:{_state_code:"ju"},Luzern:{_state_code:"lu"},Neuenburg:{_state_code:"ne"},Nidwalden:{_state_code:"nw"},Obwalden:{_state_code:"ow"},Schaffhausen:{_state_code:"sh"},Schwyz:{_state_code:"sz"},Solothurn:{_state_code:"so"},"Sankt Gallen":{_state_code:"sg"},Tessin:{_state_code:"ti"},Thurgau:{_state_code:"tg"},Uri:{_state_code:"ur"},Waadt:{_state_code:"vd"},Wallis:{_state_code:"vs"},Zug:{_state_code:"zg"},"ZÃ¼rich":{_state_code:"zh"}};var data$6={PH:[{name:"FÃªte du 1áµ‰Ê³ janvier",fixed_date:[1,1]},{name:"Lundi de PÃ¢ques",variable_date:"easter",offset:1},{name:"FÃªte du travail",fixed_date:[5,1]},{name:"Lendemain de la FÃªte du travail",variable_date:"nextMo-Sa01May"},{name:"Jour de lâ€™Ascension",variable_date:"easter",offset:39},{name:"Lundi de la PentecÃ´te",variable_date:"easter",offset:50},{name:"FÃªte nationale",fixed_date:[8,7]},{name:"Lendemain de la FÃªte nationale",variable_date:"nextMo-Sa07August"},{name:"FÃªte de lâ€™Assomption",fixed_date:[8,15]},{name:"FÃªte de la Toussaint",fixed_date:[11,1]},{name:"JournÃ©e Nationale de la Paix",fixed_date:[11,15]},{name:"FÃªte de NoÃ«l",fixed_date:[12,25]},{name:"Lendemain de la FÃªte de NoÃ«l",variable_date:"nextMo-Sa25December"}]};var data$7={PH:[{name:"Den obnovy samostatnÃ©ho ÄeskÃ©ho stÃ¡tu",fixed_date:[1,1]},{name:"VelkÃ½ pÃ¡tek",variable_date:"easter",offset:-2},{name:"VelikonoÄnÃ­ pondÄ›lÃ­",variable_date:"easter",offset:1},{name:"SvÃ¡tek prÃ¡ce",fixed_date:[5,1]},{name:"Den vÃ­tÄ›zstvÃ­",fixed_date:[5,8]},{name:"Den slovanskÃ½ch vÄ›rozvÄ›stÅ¯ Cyrila a MetodÄ›je",fixed_date:[7,5]},{name:"Den upÃ¡lenÃ­ mistra Jana Husa",fixed_date:[7,6]},{name:"Den ÄeskÃ© stÃ¡tnosti",fixed_date:[9,28]},{name:"Den vzniku samostatnÃ©ho ÄeskoslovenskÃ©ho stÃ¡tu",fixed_date:[10,28]},{name:"Den boje za svobodu a demokracii",fixed_date:[11,17]},{name:"Å tÄ›drÃ½ den",fixed_date:[12,24]},{name:"1. svÃ¡tek vÃ¡noÄnÃ­",fixed_date:[12,25]},{name:"2. svÃ¡tek vÃ¡noÄnÃ­",fixed_date:[12,26]}]};var data$8={PH:[{name:"Neujahrstag",fixed_date:[1,1]},{name:"Heilige Drei KÃ¶nige",fixed_date:[1,6],only_states:["Baden-WÃ¼rttemberg","Bayern","Sachsen-Anhalt"]},{name:"Frauentag",fixed_date:[3,8],only_states:["Berlin"]},{name:"Tag der Arbeit",fixed_date:[5,1]},{name:"Karfreitag",variable_date:"easter",offset:-2},{name:"Ostersonntag",variable_date:"easter",only_states:["Brandenburg"]},{name:"Ostermontag",variable_date:"easter",offset:1},{name:"Christi Himmelfahrt",variable_date:"easter",offset:39},{name:"Pfingstsonntag",variable_date:"easter",offset:49,only_states:["Brandenburg"]},{name:"Pfingstmontag",variable_date:"easter",offset:50},{name:"Fronleichnam",variable_date:"easter",offset:60,only_states:["Baden-WÃ¼rttemberg","Bayern","Hessen","Nordrhein-Westfalen","Rheinland-Pfalz","Saarland"]},{name:"MariÃ¤ Himmelfahrt",fixed_date:[8,15],only_states:["Saarland"]},{name:"Weltkindertag",fixed_date:[9,20],only_states:["ThÃ¼ringen"]},{name:"Tag der Deutschen Einheit",fixed_date:[10,3]},{name:"Reformationstag",fixed_date:[10,31],only_states:["Brandenburg","Bremen","Hamburg","Mecklenburg-Vorpommern","Niedersachsen","Sachsen","Sachsen-Anhalt","Schleswig-Holstein","ThÃ¼ringen"]},{name:"Allerheiligen",fixed_date:[11,1],only_states:["Baden-WÃ¼rttemberg","Bayern","Nordrhein-Westfalen","Rheinland-Pfalz","Saarland"]},{name:"BuÃŸ- und Bettag",variable_date:"nextWednesday16Nov",only_states:["Sachsen"]},{name:"1. Weihnachtstag",fixed_date:[12,25]},{name:"2. Weihnachtstag",fixed_date:[12,26]}],"Baden-WÃ¼rttemberg":{_state_code:"bw",SH:[{2012:[4,2,4,13],2013:[3,25,4,5],2014:[4,14,4,25],2015:[3,30,4,10],2016:[3,24,3,24,3,29,4,2],2017:[4,10,4,21],2018:[3,26,4,6],2019:[4,15,4,27],2020:[4,6,4,18],name:"Osterferien"},{2012:[5,29,6,9],2013:[5,21,6,1],2014:[6,10,6,21],2015:[5,26,6,6],2016:[5,17,5,28],2017:[6,6,6,16],2018:[5,22,6,2],2019:[6,11,6,21],2020:[6,2,6,13],name:"Pfingstferien"},{2012:[7,26,9,8],2013:[7,25,9,7],2014:[7,31,9,13],2015:[7,30,9,12],2016:[7,28,9,10],2017:[7,27,9,9],2018:[7,26,9,8],2019:[7,29,9,10],2020:[7,30,9,12],2021:[7,29,9,11],2022:[7,28,9,10],2023:[7,27,9,9],2024:[7,25,9,7],name:"Sommerferien"},{2012:[10,29,11,2],2013:[10,28,10,30],2014:[10,27,10,30],2015:[10,31,10,31,11,2,11,6],2016:[10,31,10,31,11,2,11,4],2017:[10,30,11,3],2018:[10,29,11,2],2019:[10,28,10,30],name:"Herbstferien"},{2011:[12,23,1,5],2012:[12,24,1,5],2013:[12,23,1,4],2014:[12,22,1,5],2015:[12,23,1,9],2016:[12,23,1,7],2017:[12,22,1,5],2018:[12,24,1,5],2019:[12,23,1,4],name:"Weihnachtsferien"}]},Bayern:{_state_code:"by",SH:[{2012:[2,20,2,24],2013:[2,11,2,15],2014:[3,3,3,7],2015:[2,16,2,20],2016:[2,8,2,12],2017:[2,27,3,3],2018:[2,12,2,16],2019:[3,4,3,8],2020:[2,24,2,28],2021:[2,15,2,19],2022:[2,28,3,4],2023:[2,20,2,24],2024:[2,12,2,16],name:"Winterferien"},{2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,21,4,1],2017:[4,10,4,22],2018:[3,26,4,7],2019:[4,15,4,27],2020:[4,6,4,18],2021:[3,29,4,10],2022:[4,11,4,23],2023:[4,3,4,15],2024:[3,25,4,6],name:"Osterferien"},{2012:[5,29,6,9],2013:[5,21,5,31],2014:[6,10,6,21],2015:[5,26,6,5],2016:[5,17,5,28],2017:[6,6,6,16],2018:[5,22,6,2],2019:[6,11,6,21],2020:[6,2,6,13],2021:[5,25,6,4],2022:[6,7,6,18],2023:[5,30,6,9],2024:[5,21,6,1],name:"Pfingstferien"},{2012:[8,1,9,12],2013:[7,31,9,11],2014:[7,30,9,15],2015:[8,1,9,14],2016:[7,30,9,12],2017:[7,29,9,11],2018:[7,30,9,10],2019:[7,29,9,9],2020:[7,27,9,7],2021:[7,30,9,13],2022:[8,1,9,12],2023:[7,31,9,11],2024:[7,29,9,9],name:"Sommerferien"},{2012:[10,29,11,3],2013:[10,28,10,31],2014:[10,27,10,31,11,19,11,19],2015:[11,2,11,7,11,18,11,18],2016:[10,31,11,4,11,16,11,16],2017:[10,30,11,3,11,22,11,22],2018:[10,29,11,2,11,21,11,21],2019:[10,28,10,31,11,20,11,20],2020:[10,31,11,6,11,18,11,18],2021:[11,2,11,5,11,17,11,17],2022:[10,31,11,4,11,16,11,16],2023:[10,30,11,3,11,22,11,22],name:"Herbstferien"},{2011:[12,27,1,5],2012:[12,24,1,5],2013:[12,23,1,4],2014:[12,24,1,5],2015:[12,24,1,5],2016:[12,24,1,5],2017:[12,23,1,5],2018:[12,22,1,5],2019:[12,23,1,4],2020:[12,23,1,9],2021:[12,24,1,8],2022:[12,24,1,7],2023:[12,23,1,5],name:"Weihnachtsferien"}]},Berlin:{_state_code:"be",SH:[{2012:[1,30,2,4],2013:[2,4,2,9],2014:[2,3,2,8],2015:[2,2,2,7],2016:[2,1,2,6],2017:[1,30,2,3],2018:[2,5,2,10],2019:[2,4,2,9],2020:[2,3,2,8],2021:[2,1,2,6],2022:[1,29,2,5],2023:[1,30,2,4],2024:[2,5,2,10],name:"Winterferien"},{2012:[4,2,4,14,4,30,4,30],2013:[3,25,4,6],2014:[4,14,4,26,5,2,5,2],2015:[3,30,4,11],2016:[3,21,4,2],2017:[4,10,4,18],2018:[3,26,4,6],2019:[4,15,4,26],2020:[4,6,4,17],2021:[3,29,4,10],2022:[4,11,4,23],2023:[4,3,4,14],2024:[3,25,4,5],name:"Osterferien"},{2012:[5,18,5,18],2013:[5,10,5,10,5,21,5,21],2014:[5,30,5,30],2015:[5,15,5,15,5,26,5,26],2016:[5,6,5,6,5,17,5,18],2017:[5,24,5,24,5,26,5,26,6,6,6,9],2018:[4,30,4,30,5,11,5,11,5,22,5,22],2019:[5,31,5,31,6,11,6,11],2020:[5,22,5,22],2021:[5,14,5,14],2022:[5,27,5,27,6,7,6,7],2023:[5,19,5,19,5,30,5,30],2024:[5,10,5,10],name:"Pfingstferien"},{2012:[6,20,8,3],2013:[6,19,8,2],2014:[7,9,8,22],2015:[7,16,8,28],2016:[7,21,9,2],2017:[7,20,9,1],2018:[7,5,8,17],2019:[6,20,8,2],2020:[6,25,8,7],2021:[6,24,8,6],2022:[7,7,8,19],2023:[7,13,8,25],2024:[7,18,8,30],name:"Sommerferien"},{2012:[10,1,10,13],2013:[9,30,10,12],2014:[10,20,11,1],2015:[10,19,10,31],2016:[10,17,10,28],2017:[10,2,10,2,10,23,11,4],2018:[10,22,11,2],2019:[10,4,10,4,10,7,10,19],2020:[10,12,10,24],2021:[10,11,10,23],2022:[10,24,11,5],2023:[10,2,10,2,10,23,11,4],name:"Herbstferien"},{2011:[12,23,1,3],2012:[12,24,1,4],2013:[12,23,1,3],2014:[12,22,1,2],2015:[12,23,1,2],2016:[12,23,1,3],2017:[12,21,1,2],2018:[12,22,1,5],2019:[12,23,1,4],2020:[12,21,1,2],2021:[12,23,12,31],2022:[12,22,1,2],2023:[12,23,1,5],name:"Weihnachtsferien"}]},Brandenburg:{_state_code:"bb",SH:[{2012:[1,30,2,4],2013:[2,4,2,9],2014:[2,3,2,8],2015:[2,2,2,7],2016:[2,1,2,6],2017:[1,30,2,4],2018:[2,5,2,10],2019:[2,4,2,9],2020:[2,3,2,8],2021:[2,1,2,6],2022:[1,31,2,5],2023:[1,30,2,3],2024:[2,5,2,9],name:"Winterferien"},{2012:[4,4,4,14,4,30,4,30],2013:[3,27,4,6],2014:[4,16,4,26,5,2,5,2],2015:[4,1,4,11],2016:[3,23,4,2],2017:[4,10,4,22],2018:[3,26,4,6],2019:[4,15,4,26],2020:[4,6,4,17],2021:[3,29,4,9],2022:[4,11,4,23],2023:[4,3,4,14],2024:[3,25,4,5],name:"Osterferien"},{2012:[5,18,5,18],2013:[5,10,5,10],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26],2018:[4,30,4,30,5,11,5,11],2019:[5,31,5,31],2020:[5,22,5,22],2021:[5,14,5,14],2022:[5,27,5,27],2023:[5,19,5,19],2024:[5,10,5,10],name:"Pfingstferien"},{2012:[6,21,8,3],2013:[6,20,8,2],2014:[7,10,8,22],2015:[7,16,8,28],2016:[7,21,9,3],2017:[7,20,9,1],2018:[7,5,8,18],2019:[6,20,8,3],2020:[6,25,8,8],2021:[6,24,8,7],2022:[7,7,8,20],2023:[7,13,8,26],2024:[7,18,8,31],name:"Sommerferien"},{2012:[10,1,10,13],2013:[9,30,10,12,11,1,11,1],2014:[10,20,11,1],2015:[10,19,10,30],2016:[10,17,10,28],2017:[10,2,10,2,10,23,11,4],2018:[10,22,11,2],2019:[10,4,10,18,11,1,11,1],2020:[10,12,10,24],2021:[10,11,10,23],2022:[10,24,11,5],2023:[10,2,10,2,10,23,11,4],name:"Herbstferien"},{2011:[12,23,1,3],2012:[12,24,1,4],2013:[12,23,1,3],2014:[12,22,1,2],2015:[12,23,1,2],2016:[12,23,1,3],2017:[12,21,1,2],2018:[12,21,1,5],2019:[12,23,1,3],2020:[12,21,1,2],2021:[12,23,12,31],2022:[12,22,1,3],2023:[12,23,1,5],name:"Weihnachtsferien"}]},Bremen:{_state_code:"hb",SH:[{2012:[1,30,1,31],2013:[1,31,2,1],2014:[1,30,1,31],2015:[2,2,2,3],2016:[1,28,1,29],2017:[1,30,1,31],2018:[2,1,2,2],2019:[1,31,2,1],2020:[2,3,2,4],2021:[2,1,2,2],2022:[1,31,2,1],2023:[1,30,1,31],2024:[2,1,2,2],name:"Winterferien"},{2012:[3,26,4,11,4,30,4,30],2013:[3,16,4,2],2014:[4,3,4,22,5,2,5,2],2015:[3,25,4,10],2016:[3,18,4,2],2017:[4,10,4,22],2018:[3,19,4,3],2019:[4,6,4,23],2020:[3,28,4,14],2021:[3,27,4,10],2022:[4,4,4,19],2023:[3,27,4,11],2024:[3,18,4,2],name:"Osterferien"},{2012:[5,18,5,18,5,29,5,29],2013:[5,10,5,10,5,21,5,21],2014:[5,30,5,30,6,10,6,10],2015:[5,15,5,15,5,26,5,26],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26,6,6,6,6],2018:[4,30,4,30,5,11,5,11,5,22,5,22],2019:[5,31,5,31,6,11,6,11],2020:[5,22,5,22,6,2,6,2],2021:[5,14,5,14,5,25,5,25],2022:[5,27,5,27,6,7,6,7],2023:[5,19,5,19,5,30,5,30],2024:[5,10,5,10,5,21,5,21],name:"Pfingstferien"},{2012:[7,23,8,31],2013:[6,27,8,7],2014:[7,31,9,10],2015:[7,23,9,2],2016:[6,23,8,3],2017:[6,22,8,2],2018:[6,28,8,8],2019:[7,4,8,14],2020:[7,16,8,26],2021:[7,22,9,1],2022:[7,14,8,24],2023:[7,6,8,16],2024:[6,24,8,2],name:"Sommerferien"},{2012:[10,22,11,3],2013:[10,4,10,18],2014:[10,27,11,8],2015:[10,19,10,31],2016:[10,4,10,15],2017:[10,2,10,14,10,30,10,30],2018:[10,1,10,13],2019:[10,4,10,18],2020:[10,12,10,24],2021:[10,18,10,30],2022:[10,17,10,29],2023:[10,2,10,2,10,16,10,28],name:"Herbstferien"},{2011:[12,23,1,4],2012:[12,24,1,5],2013:[12,23,1,3],2014:[12,22,1,5],2015:[12,23,1,6],2016:[12,21,1,6],2017:[12,22,1,6],2018:[12,24,1,4],2019:[12,21,1,6],2020:[12,23,1,8],2021:[12,23,1,8],2022:[12,23,1,6],2023:[12,23,1,5],name:"Weihnachtsferien"}]},Hamburg:{_state_code:"hh",SH:[{2012:[1,30,1,30],2013:[2,1,2,1],2014:[1,31,1,31],2015:[1,30,1,30],2016:[1,29,1,29],2017:[1,30,1,30],2018:[2,2,2,2],2019:[2,1,2,1],2020:[1,31,1,31],2021:[1,29,1,29],2022:[1,28,1,28],2023:[1,27,1,27],2024:[2,2,2,2],name:"Winterferien"},{2012:[3,5,3,16],2013:[3,4,3,15],2014:[3,3,3,14],2015:[3,2,3,13],2016:[3,7,3,18],2017:[3,6,3,17],2018:[3,5,3,16,4,30,4,30],2019:[3,4,3,15],2020:[3,2,3,13],2021:[3,1,3,12],2022:[3,7,3,18],2023:[3,6,3,17],2024:[3,18,3,28],name:"Osterferien"},{2012:[4,30,5,4,5,18,5,18],2013:[5,2,5,10],2014:[4,28,5,2,5,30,5,30],2015:[5,11,5,15],2016:[5,6,5,6,5,17,5,20],2017:[5,22,5,26],2018:[5,7,5,11],2019:[5,13,5,17,5,31,5,31],2020:[5,4,5,8],2021:[5,10,5,14],2022:[5,23,5,27],2023:[5,15,5,19],2024:[5,21,5,24],name:"Pfingstferien"},{2012:[6,21,8,1],2013:[6,20,7,31],2014:[7,10,8,20],2015:[7,16,8,26],2016:[7,21,8,31],2017:[7,20,8,30],2018:[7,5,8,15],2019:[6,27,8,7],2020:[6,25,8,5],2021:[6,24,8,4],2022:[7,7,8,17],2023:[7,13,8,23],2024:[7,18,8,28],name:"Sommerferien"},{2012:[10,1,10,12],2013:[9,30,10,11],2014:[10,13,10,24],2015:[10,19,10,30],2016:[10,17,10,28],2017:[10,2,10,2,10,16,10,27],2018:[10,1,10,12],2019:[10,4,10,18],2020:[10,5,10,16],2021:[10,4,10,15],2022:[10,10,10,21],2023:[10,2,10,2,10,16,10,27],name:"Herbstferien"},{2011:[12,27,1,6],2012:[12,21,1,4],2013:[12,19,1,3],2014:[12,22,1,6],2015:[12,21,1,1],2016:[12,27,1,6],2017:[12,22,1,5],2018:[12,20,1,4],2019:[12,23,1,3],2020:[12,21,1,4],2021:[12,23,1,4],2022:[12,23,1,6],2023:[12,22,1,5],name:"Weihnachtsferien"}]},Hessen:{_state_code:"he",SH:[{2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,29,4,9],2017:[4,3,4,15],2018:[3,26,4,7],2019:[4,14,4,27],2020:[4,6,4,18],2021:[4,6,4,16],2022:[4,11,4,23],2023:[4,3,4,22],2024:[3,25,4,13],name:"Osterferien"},{2012:[7,2,8,10],2013:[7,8,8,16],2014:[7,28,9,5],2015:[7,27,9,4],2016:[7,18,8,26],2017:[7,3,8,11],2018:[6,25,8,3],2019:[7,1,8,9],2020:[7,6,8,14],2021:[7,19,8,27],2022:[7,25,9,2],2023:[7,24,9,1],2024:[7,15,8,23],name:"Sommerferien"},{2012:[10,15,10,27],2013:[10,14,10,26],2014:[10,20,11,1],2015:[10,19,10,31],2016:[10,17,10,29],2017:[10,9,10,21],2018:[10,1,10,13],2019:[9,30,10,12],2020:[10,5,10,17],2021:[10,11,10,23],2022:[10,24,10,29],2023:[10,23,10,28],name:"Herbstferien"},{2011:[12,21,1,6],2012:[12,24,1,12],2013:[12,23,1,11],2014:[12,22,1,10],2015:[12,23,1,9],2016:[12,22,1,7],2017:[12,24,1,13],2018:[12,24,1,12],2019:[12,23,1,11],2020:[12,21,1,9],2021:[12,23,1,8],2022:[12,22,1,7],2023:[12,27,1,13],name:"Weihnachtsferien"}]},"Mecklenburg-Vorpommern":{_state_code:"mv",SH:[{2012:[2,6,2,17],2013:[2,4,2,15],2014:[2,3,2,15],2015:[2,2,2,14],2016:[2,1,2,13],2017:[2,6,2,18],2018:[2,5,2,16],2019:[2,4,2,15],2020:[2,10,2,21],2021:[2,6,2,19],2022:[2,5,2,17],2023:[2,6,2,18],2024:[2,5,2,16],name:"Winterferien"},{2012:[4,2,4,11],2013:[3,25,4,3],2014:[4,14,4,23],2015:[3,30,4,8],2016:[3,21,3,30],2017:[4,10,4,19],2018:[3,26,4,4],2019:[4,15,4,24],2020:[4,6,4,15],2021:[3,29,4,7],2022:[4,11,4,20],2023:[4,3,4,12],2024:[3,25,4,3],name:"Osterferien"},{2012:[5,25,5,29],2013:[5,17,5,21],2014:[6,6,6,10],2015:[5,22,5,26],2016:[5,14,5,17],2017:[6,2,6,6],2018:[5,11,5,11,5,18,5,22],2019:[5,22,5,22,6,7,6,11],2020:[5,22,5,22,5,29,6,2],2021:[5,14,5,14,5,21,5,25],2022:[5,27,5,27,6,3,6,7],2023:[5,19,5,19,5,26,5,30],2024:[5,10,5,10,5,17,5,21],name:"Pfingstferien"},{2012:[6,23,8,4],2013:[6,22,8,3],2014:[7,14,8,23],2015:[7,20,8,29],2016:[7,25,9,3],2017:[7,24,9,2],2018:[7,9,8,18],2019:[7,1,8,10],2020:[6,22,8,1],2021:[6,21,7,31],2022:[7,4,8,13],2023:[7,17,8,26],2024:[7,22,8,31],name:"Sommerferien"},{2012:[10,1,10,5],2013:[10,14,10,19],2014:[10,20,10,25],2015:[10,24,10,30],2016:[10,24,10,28],2017:[10,2,10,2,10,23,10,30],2018:[10,8,10,13,11,1,11,2],2019:[10,4,10,4,10,7,10,12,11,1,11,1],2020:[10,5,10,10,11,2,11,3],2021:[10,2,10,9,11,1,11,2],2022:[10,10,10,14,11,1,11,2],2023:[10,9,10,14,10,30,10,30,11,1,11,1],name:"Herbstferien"},{2011:[12,23,1,3],2012:[12,21,1,4],2013:[12,23,1,3],2014:[12,22,1,2],2015:[12,21,1,2],2016:[12,22,1,2],2017:[12,21,1,3],2018:[12,24,1,5],2019:[12,23,1,4],2020:[12,21,1,2],2021:[12,22,12,31],2022:[12,22,1,2],2023:[12,21,1,3],name:"Weihnachtsferien"}]},Niedersachsen:{_state_code:"ni",SH:[{2012:[1,30,1,31],2013:[1,31,2,1],2014:[1,30,1,31],2015:[2,2,2,3],2016:[1,28,1,29],2017:[1,30,1,31],2018:[2,1,2,2],2019:[1,31,2,1],2020:[2,3,2,4],2021:[2,1,2,2],2022:[1,31,2,1],2023:[1,30,1,31],2024:[2,1,2,2],name:"Winterferien"},{2012:[3,26,4,11,4,30,4,30],2013:[3,16,4,2],2014:[4,3,4,22,5,2,5,2],2015:[3,25,4,10],2016:[3,18,4,2],2017:[4,10,4,22],2018:[3,19,4,3],2019:[4,8,4,23],2020:[3,30,4,14],2021:[3,29,4,9],2022:[4,4,4,19],2023:[3,27,4,11],2024:[3,18,4,2],name:"Osterferien"},{2012:[5,18,5,18,5,29,5,29],2013:[5,10,5,10,5,21,5,21],2014:[5,30,5,30,6,10,6,10],2015:[5,15,5,15,5,26,5,26],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26,6,6,6,6],2018:[4,30,4,30,5,11,5,11,5,22,5,22],2019:[5,31,5,31,6,11,6,11],2020:[5,22,5,22,6,2,6,2],2021:[5,14,5,14,5,25,5,25],2022:[5,27,5,27,6,7,6,7],2023:[5,19,5,19,5,30,5,30],2024:[5,10,5,10,5,21,5,21],name:"Pfingstferien"},{2012:[7,23,8,31],2013:[6,27,8,7],2014:[7,31,9,10],2015:[7,23,9,2],2016:[6,23,8,3],2017:[6,22,8,2],2018:[6,28,8,8],2019:[7,4,8,14],2020:[7,16,8,26],2021:[7,22,9,1],2022:[7,14,8,24],2023:[7,6,8,16],2024:[6,24,8,2],name:"Sommerferien"},{2012:[10,22,11,3],2013:[10,4,10,18],2014:[10,27,11,8],2015:[10,19,10,31],2016:[10,4,10,15],2017:[10,2,10,13,10,30,10,30],2018:[10,1,10,12],2019:[10,4,10,18],2020:[10,12,10,23],2021:[10,18,10,29],2022:[10,17,10,28],2023:[10,2,10,2,10,16,10,27],name:"Herbstferien"},{2011:[12,23,1,4],2012:[12,24,1,5],2013:[12,23,1,3],2014:[12,22,1,5],2015:[12,23,1,6],2016:[12,21,1,6],2017:[12,22,1,5],2018:[12,24,1,4],2019:[12,23,1,6],2020:[12,23,1,8],2021:[12,23,1,7],2022:[12,23,1,6],2023:[12,27,1,5],name:"Weihnachtsferien"}]},"Nordrhein-Westfalen":{_state_code:"nw",SH:[{2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,21,4,2],2017:[4,10,4,22],2018:[3,26,4,7],2019:[4,15,4,27],2020:[4,6,4,18],2021:[3,29,4,10],2022:[4,11,4,23],2023:[4,3,4,15],2024:[3,25,4,6],name:"Osterferien"},{2012:[5,29,5,29],2013:[5,21,5,21],2014:[6,10,6,10],2015:[5,26,5,26],2016:[5,17,5,17],2017:[6,6,6,6],2018:[5,22,5,25],2019:[6,11,6,11],2020:[6,2,6,2],2021:[5,25,5,25],2023:[5,30,5,30],2024:[5,21,5,21],name:"Pfingstferien"},{2012:[7,9,8,21],2013:[7,22,9,3],2014:[7,7,8,19],2015:[6,29,8,11],2016:[7,11,8,23],2017:[7,17,8,29],2018:[7,16,8,28],2019:[7,15,8,27],2020:[6,29,8,11],2021:[7,5,8,17],2022:[6,27,8,9],2023:[6,22,8,4],2024:[7,8,8,20],name:"Sommerferien"},{2012:[10,8,10,20],2013:[10,21,11,2],2014:[10,6,10,18],2015:[10,5,10,17],2016:[10,10,10,21],2017:[10,23,11,4],2018:[10,15,10,27],2019:[10,14,10,26],2020:[10,12,10,24],2021:[10,11,10,23],2022:[10,4,10,15],2023:[10,2,10,14],name:"Herbstferien"},{2011:[12,23,1,6],2012:[12,21,1,4],2013:[12,23,1,7],2014:[12,22,1,6],2015:[12,23,1,6],2016:[12,23,1,6],2017:[12,27,1,6],2018:[12,21,1,4],2019:[12,23,1,6],2020:[12,23,1,6],2021:[12,24,1,8],2022:[12,23,1,6],2023:[12,21,1,5],name:"Weihnachtsferien"}]},"Rheinland-Pfalz":{_state_code:"rp",SH:[{2019:[2,25,3,1],2020:[2,17,2,21],2022:[2,21,2,25],name:"Winterferien"},{2012:[3,29,4,13],2013:[3,20,4,5],2014:[4,11,4,25],2015:[3,26,4,10],2016:[3,18,4,1],2017:[4,10,4,21],2018:[3,26,4,6],2019:[4,23,4,30],2020:[4,9,4,17],2021:[3,29,4,6],2022:[4,13,4,22],2023:[4,3,4,6],2024:[3,25,4,2],name:"Osterferien"},{2021:[5,25,6,2],2023:[5,30,6,7],2024:[5,21,5,29],name:"Pfingstferien"},{2012:[7,2,8,10],2013:[7,8,8,16],2014:[7,28,9,5],2015:[7,27,9,4],2016:[7,18,8,26],2017:[7,3,8,11],2018:[6,25,8,3],2019:[7,1,8,9],2020:[7,6,8,14],2021:[7,19,8,27],2022:[7,25,9,2],2023:[7,24,9,1],2024:[7,15,8,23],name:"Sommerferien"},{2012:[10,1,10,12],2013:[10,4,10,18],2014:[10,20,10,31],2015:[10,19,10,30],2016:[10,10,10,21],2017:[10,2,10,13],2018:[10,1,10,12],2019:[9,30,10,11],2020:[10,12,10,23],2021:[10,11,10,22],2022:[10,17,10,31],2023:[10,16,10,27],name:"Herbstferien"},{2011:[12,22,1,6],2012:[12,20,1,4],2013:[12,23,1,7],2014:[12,22,1,7],2015:[12,23,1,8],2016:[12,22,1,6],2017:[12,22,1,9],2018:[12,20,1,4],2019:[12,23,1,6],2020:[12,21,12,31],2021:[12,23,12,31],2022:[12,23,1,2],2023:[12,27,1,5],name:"Weihnachtsferien"}]},Saarland:{_state_code:"sl",SH:[{2012:[2,20,2,25],2013:[2,11,2,16],2014:[3,3,3,8],2015:[2,16,2,21],2016:[2,8,2,13],2017:[2,27,3,4],2018:[2,12,2,17],2019:[2,25,3,5],2020:[2,17,2,25],2021:[2,15,2,19],2022:[2,21,3,1],2023:[2,20,2,24],2024:[2,12,2,16],name:"Winterferien"},{2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,29,4,9],2017:[4,10,4,22],2018:[3,26,4,6],2019:[4,17,4,26],2020:[4,14,4,24],2021:[3,29,4,7],2022:[4,14,4,22],2023:[4,3,4,12],2024:[2,25,4,5],name:"Osterferien"},{2021:[5,25,5,28],2022:[6,7,6,10],2023:[5,30,6,2],2024:[5,21,5,24],name:"Pfingstferien"},{2012:[7,2,8,14],2013:[7,8,8,17],2014:[7,28,9,6],2015:[7,27,9,5],2016:[7,18,8,27],2017:[7,3,8,14],2018:[6,25,8,3],2019:[7,1,8,9],2020:[7,6,8,14],2021:[7,19,8,27],2022:[7,25,9,2],2023:[7,24,9,1],2024:[7,15,8,23],name:"Sommerferien"},{2012:[10,22,11,3],2013:[10,21,11,2],2014:[10,20,10,31],2015:[10,19,10,31],2016:[10,10,10,22],2017:[10,2,10,14],2018:[10,1,10,12],2019:[10,7,10,18],2020:[10,12,10,23],2021:[10,18,10,29],2022:[10,24,11,4],2023:[10,23,11,3],name:"Herbstferien"},{2011:[12,23,1,4],2012:[12,24,1,5],2013:[12,20,1,4],2014:[12,22,1,7],2015:[12,21,1,2],2016:[12,19,12,31],2017:[12,21,1,5],2018:[12,20,1,4],2019:[12,23,1,3],2020:[12,21,12,31],2021:[12,23,1,3],2022:[12,22,1,4],2023:[12,21,1,2],name:"Weihnachtsferien"}]},Sachsen:{_state_code:"sn",SH:[{2012:[2,13,2,25],2013:[2,4,2,15],2014:[2,17,3,1],2015:[2,9,2,21],2016:[2,8,2,20],2017:[2,13,2,24],2018:[2,12,2,23],2019:[2,18,3,2],2020:[2,10,2,22],2021:[2,8,2,20],2022:[2,12,2,26],2023:[2,13,2,24],2024:[2,12,2,23],name:"Winterferien"},{2012:[4,6,4,14],2013:[3,29,4,6],2014:[4,18,4,26],2015:[4,2,4,11],2016:[3,25,4,2],2017:[4,13,4,22],2018:[3,29,4,6],2019:[4,19,4,26],2020:[4,10,4,18],2021:[4,2,4,10],2022:[4,15,4,23],2023:[4,7,4,15],2024:[3,28,4,5],name:"Osterferien"},{2012:[5,18,5,18],2013:[5,10,5,10,5,18,5,22],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6],2017:[5,26,5,26],2018:[5,11,5,11,5,19,5,22],2019:[5,31,5,31],2020:[5,22,5,22],2021:[5,14,5,14],2022:[5,27,5,27],2023:[5,19,5,19],2024:[5,10,5,10,5,18,5,21],name:"Pfingstferien"},{2012:[7,23,8,31],2013:[7,15,8,23],2014:[7,21,8,29],2015:[7,13,8,21],2016:[6,27,8,5],2017:[6,26,8,4],2018:[7,2,8,10],2019:[7,8,8,16],2020:[7,20,8,28],2021:[7,26,9,3],2022:[7,18,8,26],2023:[7,10,8,18],2024:[6,20,7,31],name:"Sommerferien"},{2012:[10,22,11,2],2013:[10,21,11,1],2014:[10,20,10,31],2015:[10,12,10,24],2016:[10,3,10,15],2017:[10,2,10,14,10,30,10,30],2018:[10,8,10,20],2019:[10,14,10,25],2020:[10,19,10,31],2021:[10,18,10,30],2022:[10,17,10,29],2023:[10,2,10,14,10,30,10,30],name:"Herbstferien"},{2011:[12,23,1,2],2012:[12,22,1,2],2013:[12,21,1,3],2014:[12,22,1,3],2015:[12,21,1,2],2016:[12,23,1,2],2017:[12,23,1,2],2018:[12,22,1,4],2019:[12,21,1,3],2020:[12,23,1,2],2021:[12,23,1,1],2022:[12,22,1,2],2023:[12,23,1,2],name:"Weihnachtsferien"}]},"Sachsen-Anhalt":{_state_code:"st",SH:[{2012:[2,4,2,11],2013:[2,1,2,8],2014:[2,1,2,12],2015:[2,2,2,14],2016:[2,1,2,10],2017:[2,4,2,11],2018:[2,5,2,9],2019:[2,11,2,15],2020:[2,10,2,14],2021:[2,8,2,13],2022:[2,12,2,19],2023:[2,6,2,11],2024:[2,5,2,10],name:"Winterferien"},{2012:[4,2,4,7],2013:[3,25,3,30],2014:[4,14,4,17],2015:[4,2,4,2],2016:[3,24,3,24],2017:[4,10,4,13],2018:[3,26,3,31,4,30,4,30],2019:[4,18,4,30],2020:[4,6,4,11],2021:[3,29,4,3],2022:[4,11,4,16],2023:[4,3,4,8],2024:[3,25,3,30],name:"Osterferien"},{2012:[5,18,5,25],2013:[5,10,5,18],2014:[5,30,6,7],2015:[5,15,5,23],2016:[5,6,5,14],2017:[5,26,5,26],2018:[5,11,5,19],2019:[5,31,6,1],2020:[5,18,5,30],2021:[5,10,5,22],2022:[5,23,5,28],2023:[5,15,5,19],2024:[5,21,5,24],name:"Pfingstferien"},{2012:[7,23,9,5],2013:[7,15,8,28],2014:[7,21,9,3],2015:[7,13,8,26],2016:[6,27,8,10],2017:[6,26,8,9],2018:[6,28,8,8],2019:[7,4,8,14],2020:[7,16,8,26],2021:[7,22,9,1],2022:[7,14,8,24],2023:[7,6,8,16],2024:[6,24,8,3],name:"Sommerferien"},{2012:[10,29,11,2],2013:[10,21,10,25],2014:[10,27,10,30],2015:[10,17,10,24],2016:[10,4,10,15],2017:[10,2,10,13,10,30,10,30],2018:[10,1,10,12],2019:[10,4,10,11,11,1,11,1],2020:[10,19,10,24],2021:[10,25,10,30],2022:[10,24,11,4],2023:[10,2,10,2,10,16,10,30],name:"Herbstferien"},{2011:[12,22,1,7],2012:[12,19,1,4],2013:[12,21,1,3],2014:[12,22,1,5],2015:[12,21,1,5],2016:[12,19,1,2],2017:[12,21,1,3],2018:[12,19,1,4],2019:[12,23,1,4],2020:[12,19,1,5],2021:[12,22,1,8],2022:[12,21,1,5],2023:[12,21,1,3],name:"Weihnachtsferien"}]},"Schleswig-Holstein":{_state_code:"sh",SH:[{2012:[3,30,4,13],2013:[3,25,4,9],2014:[4,16,5,2],2015:[4,1,4,17],2016:[3,24,4,9],2017:[4,7,4,21],2018:[3,29,4,13],2019:[4,4,4,18],2020:[3,30,4,17],2021:[4,1,4,16],2022:[4,4,4,16],2023:[4,6,4,22],2024:[4,2,4,19],name:"Osterferien"},{2012:[5,18,5,18],2013:[5,10,5,10],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6],2017:[5,26,5,26],2018:[5,11,5,11],2019:[5,31,5,31],2020:[5,22,5,22],2021:[5,14,5,14],2022:[5,27,5,27],2023:[5,19,5,20],2024:[5,10,5,11],name:"Pfingstferien"},{2012:[6,25,8,4],2013:[6,24,8,3],2014:[7,14,8,23],2015:[7,20,8,29],2016:[7,25,9,3],2017:[7,24,9,2],2018:[7,9,8,18],2019:[7,1,8,10],2020:[6,29,8,8],2021:[6,21,7,31],2022:[7,4,8,13],2023:[7,17,8,26],2024:[7,22,8,31],name:"Sommerferien"},{2012:[10,4,10,19],2013:[10,4,10,18],2014:[10,13,10,25],2015:[10,19,10,31],2016:[10,17,10,29],2017:[10,16,10,27],2018:[10,1,10,19],2019:[10,4,10,18],2020:[10,5,10,17],2021:[10,4,10,16],2022:[10,10,10,21],2023:[10,16,10,27],name:"Herbstferien"},{2011:[12,23,1,6],2012:[12,24,1,5],2013:[12,23,1,6],2014:[12,22,1,6],2015:[12,21,1,6],2016:[12,23,1,6],2017:[12,21,1,6],2018:[12,21,1,4],2019:[12,23,1,6],2020:[12,21,1,6],2021:[12,23,1,8],2022:[12,23,1,7],2023:[12,27,1,6],name:"Weihnachtsferien"}]},"ThÃ¼ringen":{_state_code:"th",SH:[{2012:[2,6,2,11],2013:[2,18,2,23],2014:[2,17,2,22],2015:[2,2,2,7],2016:[2,1,2,6],2017:[2,6,2,11],2018:[2,5,2,9],2019:[2,11,2,15],2020:[2,10,2,14],2021:[2,8,2,13],2022:[2,12,2,19],2023:[2,13,2,17],2024:[2,12,2,16],name:"Winterferien"},{2012:[4,2,4,13],2013:[3,25,4,6],2014:[4,19,5,2],2015:[3,30,4,11],2016:[3,24,4,2],2017:[4,10,4,21],2018:[3,26,4,7],2019:[4,15,4,27],2020:[4,6,4,18],2021:[3,29,4,10],2022:[4,11,4,23],2023:[4,3,4,15],2024:[3,25,4,6],name:"Osterferien"},{2012:[5,25,5,29],2013:[5,10,5,10],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6],2017:[5,26,5,26],2018:[5,11,5,11],2019:[5,31,5,31],2020:[5,22,5,22],2021:[5,14,5,14],2022:[5,27,5,27],2023:[5,19,5,19],2024:[5,10,5,10],name:"Pfingstferien"},{2012:[7,23,8,31],2013:[7,15,8,23],2014:[7,21,8,29],2015:[7,13,8,21],2016:[6,27,8,10],2017:[6,26,8,9],2018:[7,2,8,11],2019:[7,8,8,17],2020:[7,20,8,29],2021:[7,26,9,4],2022:[7,18,8,27],2023:[7,10,8,19],2024:[6,20,7,31],name:"Sommerferien"},{2012:[10,22,11,3],2013:[10,21,11,2],2014:[10,6,10,18],2015:[10,5,10,17],2016:[10,10,10,22],2017:[10,2,10,14],2018:[10,1,10,13],2019:[10,7,10,19],2020:[10,17,10,30],2021:[10,25,11,6],2022:[10,17,10,29],2023:[10,2,10,14],name:"Herbstferien"},{2011:[12,23,1,1],2012:[12,24,1,5],2013:[12,23,1,4],2014:[12,22,1,3],2015:[12,23,1,2],2016:[12,23,12,31],2017:[12,22,1,5],2018:[12,21,1,4],2019:[12,21,1,3],2020:[12,23,1,2],2021:[12,23,12,31],2022:[12,22,1,3],2023:[12,22,1,5],name:"Weihnachtsferien"}]}};var data$9={PH:[{name:"NytÃ¥rsdag",fixed_date:[1,1]},{name:"SkÃ¦rtorsdag",variable_date:"easter",offset:-3},{name:"Langfredag",variable_date:"easter",offset:-2},{name:"PÃ¥skedag",variable_date:"easter"},{name:"2. PÃ¥skedag",variable_date:"easter",offset:1},{name:"Store Bededag",variable_date:"easter",offset:26},{name:"Kristi Himmelfartsdag",variable_date:"easter",offset:39},{name:"Pinsedag",variable_date:"easter",offset:49},{name:"2. Pinsedag",variable_date:"easter",offset:50},{name:"Grundlovsdag",fixed_date:[6,5]},{name:"Juleaftensdag",fixed_date:[12,24]},{name:"Juledag",fixed_date:[12,25]},{name:"2. Juledag",fixed_date:[12,26]}]};var data$a={PH:[{name:"Cap d'Any",fixed_date:[1,1],only_states:["CataluÃ±a"]},{name:"AÃ±o Nuevo",fixed_date:[1,1]},{name:"Reis",fixed_date:[1,6],only_states:["CataluÃ±a"]},{name:"EpifanÃ­a del SeÃ±or",fixed_date:[1,6]},{name:"DÃ­a de AndalucÃ­a",fixed_date:[2,28],only_states:["AndalucÃ­a"]},{name:"Dia de les Illes Balears",fixed_date:[3,1],only_states:["Islas Baleares"]},{name:"Sant Josep",fixed_date:[3,19],only_states:["Comunidad Valenciana"]},{name:"San JosÃ©",fixed_date:[3,19],only_states:["Murcia"]},{name:"Jueve Santo",variable_date:"easter",offset:-3,only_states:["AndalucÃ­a","AragÃ³n","Castilla y LeÃ³n","Castilla-La Mancha","Canarias","Extremadura","Galicia","Islas Baleares","La Rioja","Comunidad de Madrid","RegiÃ³n de Murcia","Navarra","Asturias","PaÃ­s Vasco","Cantabria","Ceuta","Melilla"]},{name:"Divendres Sant",variable_date:"easter",offset:-2,only_states:["CataluÃ±a","Comunidad Valenciana","Islas Baleares"]},{name:"Viernes Santo",variable_date:"easter",offset:-2},{name:"Dilluns de Pasqua Florida",variable_date:"easter",offset:1,only_states:["CataluÃ±a","Comunidad Valenciana","Islas Baleares"]},{name:"Lunes de Pascua de ResurrecciÃ³n",variable_date:"easter",offset:1,only_states:["PaÃ­s Vasco","Navarra"]},{name:"DÃ­a de AragÃ³n",fixed_date:[4,23],only_states:["AragÃ³n"]},{name:"DÃ­a de Castilla y LeÃ³n",fixed_date:[4,23],only_states:["Castilla y LeÃ³n"]},{name:"Festa del Treball",fixed_date:[5,1],only_states:["CataluÃ±a","Comunidad Valenciana","Islas Baleares"]},{name:"Fiesta del Trabajo",fixed_date:[5,1]},{name:"Fiesta de la Comunidad de Madrid",fixed_date:[5,2],only_states:["Comunidad de Madrid"]},{name:"DÃ­a das Letras Galegas",fixed_date:[5,2],only_states:["Galicia"]},{name:"DÃ­a de Canarias",fixed_date:[5,30],only_states:["Canarias"]},{name:"DÃ­a de la RegiÃ³n Castilla-La Mancha",fixed_date:[5,31],only_states:["Castilla-La Mancha"]},{name:"DÃ­a de la RegiÃ³n de Murcia",fixed_date:[6,9],only_states:["RegiÃ³n de Murcia"]},{name:"DÃ­a de la Rioja",fixed_date:[6,9],only_states:["La Rioja"]},{name:"San Antonio",fixed_date:[6,13],only_states:["Ceuta"]},{name:"Sant Joan",fixed_date:[6,24],only_states:["CataluÃ±a"]},{name:"San Juan",fixed_date:[6,24],only_states:["Ceuta"]},{name:"Santiago ApÃ³stol",fixed_date:[7,25],only_states:["Galicia"]},{name:"Santa MarÃ­a de Ãfrica",fixed_date:[8,6],only_states:["Ceuta"]},{name:"l'AssumpciÃ³",fixed_date:[8,15],only_states:["CataluÃ±a"]},{name:"AsunciÃ³n de la Virgen",fixed_date:[8,15]},{name:"DÃ­a de Ceuta",fixed_date:[9,2],only_states:["Ceuta"]},{name:"DÃ­a de Asturias",fixed_date:[9,8],only_states:["Asturias"]},{name:"DÃ­a de Extremadura",fixed_date:[9,8],only_states:["Extremadura"]},{name:"Diada Nacional de Catalunya",fixed_date:[9,11],only_states:["CataluÃ±a"]},{name:"DÃ­a de Cantabria",fixed_date:[9,17],only_states:["Cantabria"]},{name:"DÃ­a de Melilla",fixed_date:[9,15],only_states:["Melilla"]},{name:"Dia de la Comunitat Valenciana",fixed_date:[10,9],only_states:["Comunidad Valenciana"]},{name:"Festa Nacional d'Espanya",fixed_date:[10,12],only_states:["CataluÃ±a"]},{name:"Fiesta Nacional de EspaÃ±a",fixed_date:[10,12]},{name:"Euskadi Eguna",fixed_date:[10,25],only_states:["PaÃ­s Vasco"]},{name:"Tots Sants",fixed_date:[11,1],only_states:["CataluÃ±a","Comunidad Valenciana","Islas Baleares"]},{name:"Todos los Santos",fixed_date:[11,1]},{name:"DÃ­a de la ConstituciÃ³n EspaÃ±ola",fixed_date:[12,6]},{name:"La PurÃ­ssima",fixed_date:[12,8],only_states:["CataluÃ±a","Comunidad Valenciana","Islas Baleares"]},{name:"La Immaculada ConcepciÃ³n",fixed_date:[12,8]},{name:"Nadal",fixed_date:[12,25],only_states:["CataluÃ±a","Comunidad Valenciana","Islas Baleares"]},{name:"Natividad del SeÃ±or",fixed_date:[12,25]},{name:"Sant Esteve",fixed_date:[12,26],only_states:["CataluÃ±a"]}],"AndalucÃ­a":{_state_code:"an"},"AragÃ³n":{_state_code:"ar"},"Castilla y LeÃ³n":{_state_code:"cl"},"Castilla-La Mancha":{_state_code:"cm"},Canarias:{_state_code:"cn"},"CataluÃ±a":{_state_code:"ct"},Extremadura:{_state_code:"ex"},Galicia:{_state_code:"ga"},"Islas Baleares":{_state_code:"ib"},"La Rioja":{_state_code:"ri"},"Comunidad de Madrid":{_state_code:"md"},"RegiÃ³n de Murcia":{_state_code:"mc"},Navarra:{_state_code:"nc"},Asturias:{_state_code:"as"},"PaÃ­s Vasco":{_state_code:"pv"},Cantabria:{_state_code:"cb"},"Comunidad Valenciana":{_state_code:"vc"},Ceuta:{_state_code:"ce"},Melilla:{_state_code:"ml"}};var data$b={PH:[{name:"uudenvuodenpÃ¤ivÃ¤ - nyÃ¥rsdagen",fixed_date:[1,1]},{name:"loppiainen - trettondedagen",fixed_date:[1,6]},{name:"pitkÃ¤perjantai - lÃ¥ngfredagen",variable_date:"easter",offset:-2},{name:"pÃ¤Ã¤siÃ¤ispÃ¤ivÃ¤ - pÃ¥skdagen",variable_date:"easter"},{name:"toinen pÃ¤Ã¤siÃ¤ispÃ¤ivÃ¤ - annandag pÃ¥sk",variable_date:"easter",offset:1},{name:"vappu - fÃ¶rsta maj",fixed_date:[5,1]},{name:"helluntai - pingst",variable_date:"easter",offset:49},{name:"juhannuspÃ¤ivÃ¤ - midsommarafton",variable_date:"nextSaturday20Jun"},{name:"pyhÃ¤inpÃ¤ivÃ¤ - alla helgons dag",variable_date:"nextSaturday31Oct"},{name:"itsenÃ¤isyyspÃ¤ivÃ¤ - sjÃ¤lvstÃ¤ndighetsdagen",fixed_date:[12,6]},{name:"joulupÃ¤ivÃ¤ - juldagen",fixed_date:[12,25]},{name:"toinen joulupÃ¤ivÃ¤ - annandag jul",fixed_date:[12,26]}]};var data$c={PH:[{name:"Jour de l'an",fixed_date:[1,1]},{name:"Vendredi saint",variable_date:"easter",offset:-2,only_states:["Moselle","Bas-Rhin","Haut-Rhin","Guadeloupe","Martinique","PolynÃ©sie franÃ§aise"]},{name:"Lundi de PÃ¢ques",variable_date:"easter",offset:1},{name:"Abolition de l'esclavage (Mayotte)",fixed_date:[4,27],only_states:["Mayotte"]},{name:"Saint-Pierre-Chanel",fixed_date:[4,28],only_states:["Wallis-et-Futuna"]},{name:"FÃªte du Travail",fixed_date:[5,1]},{name:"FÃªte de la Victoire",fixed_date:[5,8]},{name:"Abolition de l'esclavage (Martinique)",fixed_date:[5,22],only_states:["Martinique"]},{name:"Abolition de l'esclavage (Guadeloupe)",fixed_date:[5,27],only_states:["Guadeloupe"]},{name:"Abolition de l'esclavage (Saint-Martin)",fixed_date:[5,28],only_states:["Saint-Martin (France)"]},{name:"Jeudi de l'Ascension",variable_date:"easter",offset:39},{name:"Lundi de PentecÃ´te",variable_date:"easter",offset:50},{name:"Abolition de l'esclavage (Guyane)",fixed_date:[6,10],only_states:["Guyane"]},{name:"FÃªte de l'autonomie",fixed_date:[6,29],only_states:["PolynÃ©sie franÃ§aise"]},{name:"FÃªte nationale",fixed_date:[7,14]},{name:"FÃªte Victor Schoelcher",fixed_date:[7,21],only_states:["Guadeloupe","Martinique"]},{name:"FÃªte du Territoire",fixed_date:[7,29],only_states:["Wallis-et-Futuna"]},{name:"Assomption",fixed_date:[8,15]},{name:"FÃªte de la citoyennetÃ©",fixed_date:[9,24],only_states:["Nouvelle-CalÃ©donie"]},{name:"Abolition de l'esclavage (Saint-BarthÃ©lemy)",fixed_date:[10,9],only_states:["Saint-BarthÃ©lemy"]},{name:"Toussaint",fixed_date:[11,1]},{name:"Armistice",fixed_date:[11,11]},{name:"Abolition de l'esclavage (RÃ©union)",fixed_date:[12,20],only_states:["RÃ©union"]},{name:"NoÃ«l",fixed_date:[12,25]},{name:"Saint-Ã‰tienne ",fixed_date:[12,26],only_states:["Moselle","Bas-Rhin","Haut-Rhin"]}],"Auvergne-RhÃ´ne-Alpes":{_state_code:"ara",SH:[{2018:[2,11,2,25],2019:[2,17,3,3],2020:[2,23,3,8],2021:[2,7,2,21],name:"Vacances d'Hiver"},{2018:[4,8,4,22],2019:[4,14,4,28],2020:[4,19,5,3],2021:[4,11,4,25],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Vacances d'Ã‰tÃ©"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},"Bourgogne-Franche-ComtÃ©":{_state_code:"bfc",SH:[{2018:[2,11,2,25],2019:[2,17,3,3],2020:[2,23,3,8],2021:[2,7,2,21],name:"Vacances d'Hiver"},{2018:[4,8,4,22],2019:[4,14,4,28],2020:[4,19,5,3],2021:[4,11,4,25],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Vacances d'Ã‰tÃ©"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},"Nouvelle-Aquitaine":{_state_code:"naq",SH:[{2018:[2,11,2,25],2019:[2,17,3,3],2020:[2,23,3,8],2021:[2,7,2,21],name:"Vacances d'Hiver"},{2018:[4,8,4,22],2019:[4,14,4,28],2020:[4,19,5,3],2021:[4,11,4,25],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Vacances d'Ã‰tÃ©"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},Bretagne:{_state_code:"bre",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,25,5,9],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Vacances d'Ã‰tÃ©"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},"Centre-Val de Loire":{_state_code:"cvl",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,25,5,9],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Vacances d'Ã‰tÃ©"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},"Grand Est":{_state_code:"ges",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,25,5,9],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Vacances d'Ã‰tÃ©"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},"Hauts-de-France":{_state_code:"hdf",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,25,5,9],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Vacances d'Ã‰tÃ©"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},Normandie:{_state_code:"nor",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,25,5,9],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Vacances d'Ã‰tÃ©"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},"Pays de la Loire":{_state_code:"pdl",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,25,5,9],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Vacances d'Ã‰tÃ©"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},"Provence-Alpes-CÃ´te d'Azur":{_state_code:"pac",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,25,5,9],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Vacances d'Ã‰tÃ©"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},"ÃŽle-de-France":{_state_code:"idf",SH:[{2018:[2,18,3,4],2019:[2,24,3,10],2020:[2,9,2,23],2021:[2,14,2,28],name:"Vacances d'Hiver"},{2018:[4,15,4,29],2019:[4,21,5,5],2020:[4,5,4,19],2021:[4,18,5,2],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Vacances d'Ã‰tÃ©"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},Occitanie:{_state_code:"occ",SH:[{2018:[2,18,3,4],2019:[2,24,3,10],2020:[2,9,2,23],2021:[2,14,2,28],name:"Vacances d'Hiver"},{2018:[4,15,4,29],2019:[4,21,5,5],2020:[4,5,4,19],2021:[4,18,5,2],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Vacances d'Ã‰tÃ©"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},Corse:{_state_code:"cor",SH:[{2018:[2,27,3,11],2019:[2,24,3,10],2020:[2,16,3,1],2021:[2,14,2,28],name:"Vacances d'Hiver"},{2018:[4,24,5,6],2019:[4,21,5,5],2020:[4,19,5,3],2021:[4,18,5,2],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],name:"Pont de l'Ascension"},{2018:[7,11,9,4],2019:[7,7,9,2],2020:[7,5,8,31],2021:[7,8,8,30],name:"Vacances d'Ã‰tÃ©"},{2018:[10,24,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},Guadeloupe:{_state_code:"gua",SH:[{2018:[2,9,2,21],2019:[2,24,3,10],2020:[2,16,3,1],2021:[2,10,2,21],name:"Vacances de Carnaval"},{2018:[3,25,4,8],2019:[4,19,5,1],2020:[4,9,4,22],2021:[3,28,4,11],name:"Vacances de PÃ¢ques"},{2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,28,5,29],name:"Pont de l'Ascension"},{2018:[7,7,9,3],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Grandes Vacances"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},"Saint-Martin (France)":{_state_code:"mf",SH:[{2018:[2,9,2,21],2019:[2,24,3,10],2020:[2,16,3,1],2021:[2,10,2,21],name:"Vacances de Carnaval"},{2018:[3,25,4,8],2019:[4,19,5,1],2020:[4,9,4,22],2021:[3,28,4,11],name:"Vacances de PÃ¢ques"},{2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,25,5,27],name:"Pont de l'Ascension"},{2018:[7,7,9,3],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Grandes Vacances"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},"Saint-BarthÃ©lemy":{_state_code:"bl",SH:[{2018:[2,9,2,21],2019:[2,24,3,10],2020:[2,16,3,1],2021:[2,10,2,21],name:"Vacances de Carnaval"},{2018:[3,25,4,8],2019:[4,19,5,1],2020:[4,9,4,22],2021:[3,28,4,11],name:"Vacances de PÃ¢ques"},{2019:[5,30,6,2],2020:[5,21,5,24],name:"Pont de l'Ascension"},{2018:[7,7,9,3],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],name:"Grandes Vacances"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},Guyane:{_state_code:"guf",SH:[{2018:[2,11,2,25],2019:[2,24,3,10],2020:[2,16,3,1],2021:[2,14,2,28],name:"Vacances de Carnaval"},{2018:[3,30,4,15],2019:[4,19,5,1],2020:[4,10,4,26],2021:[4,2,4,18],name:"Vacances de PÃ¢ques"},{2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,13,5,16],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,9,9,1],2020:[7,5,8,31],2021:[7,4,8,31],name:"Grandes Vacances"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,25,11,8],name:"Vacances de la Toussaint"},{2018:[12,23,1,5],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},Martinique:{_state_code:"mtq",SH:[{2018:[2,8,2,18],2019:[2,24,3,10],2020:[2,23,3,8],2021:[2,7,2,21],name:"Vacances de Carnaval"},{2018:[3,25,4,8],2019:[4,14,4,28],2020:[4,5,4,19],2021:[3,28,4,11],name:"Vacances de PÃ¢ques"},{2018:[5,8,5,13],2019:[5,30,6,2],2020:[5,14,5,15],name:"Pont de l'Ascension"},{2018:[7,7,9,3],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,7,8,30],name:"Grandes Vacances"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,25,11,8],name:"Vacances de la Toussaint"},{2018:[12,23,1,5],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de NoÃ«l"}]},Mayotte:{_state_code:"may",SH:[{2018:[2,25,3,11],2019:[2,24,3,10],2020:[3,1,3,15],2021:[2,28,3,14],name:"Vacances de Carnaval"},{2018:[5,6,5,13],2019:[4,27,5,5],2020:[5,3,5,10],2021:[5,1,5,16],name:"Vacances de PÃ¢ques"},{2020:[5,21,5,24],name:"Pont de l'Ascension"},{2018:[7,8,8,22],2019:[7,7,8,22],2020:[7,5,8,23],2021:[7,7,8,22],name:"Grandes Vacances"},{2018:[10,7,10,21],2019:[10,13,10,27],2020:[10,11,10,25],name:"Vacances de la Toussaint"},{2018:[12,9,1,6],2019:[12,15,1,12],2020:[12,13,1,10],name:"Vacances de NoÃ«l"}]},"La RÃ©union":{_state_code:"lre",SH:[{2018:[3,11,3,25],2019:[3,10,3,24],2020:[3,8,3,22],2021:[3,7,3,21],name:"Vacances aprÃ¨s 3Ã¨me pÃ©riode"},{2018:[5,6,5,16],2019:[5,8,5,19],2020:[5,1,5,13],2021:[5,5,5,16],name:"Vacances aprÃ¨s 4Ã¨me pÃ©riode"},{2018:[7,8,8,16],2019:[7,7,8,15],2020:[7,8,8,15],name:"Vacances hiver austral"},{2018:[10,14,10,28],2019:[10,13,10,27],2020:[10,11,11,25],name:"Vacances aprÃ¨s 1Ã¨re pÃ©riode"},{2018:[12,23,1,27],2019:[12,20,1,26],2020:[12,20,1,24],name:"Vacances Ã©tÃ© austral"}]},"Nouvelle-CalÃ©donie":{_state_code:"nc",SH:[{2018:[4,7,4,15],2019:[4,6,4,14],2020:[4,4,4,13],2021:[4,3,4,18],2022:[4,2,4,17],name:"Vacances 1Ã¨re pÃ©riode"},{2018:[6,9,6,24],2019:[6,8,6,23],2020:[6,6,6,21],2021:[6,5,6,20],2022:[6,4,6,19],name:"Vacances 2Ã¨me pÃ©riode"},{2018:[8,11,8,26],2019:[8,10,8,25],2020:[8,8,8,23],2021:[8,7,8,22],2022:[8,6,8,21],name:"Vacances 3Ã¨me pÃ©riode"},{2018:[10,13,10,18],2019:[10,12,10,27],2020:[10,10,10,25],2021:[10,9,10,24],2022:[10,8,10,23],name:"Vacances 4Ã¨me pÃ©riode"},{2018:[12,15,2,17],2019:[12,14,2,16],2020:[12,18,2,14],2021:[12,18,2,13],2022:[12,17,2,12],name:"Vacances d'Ã‰tÃ©"}]},"PolynÃ©sie franÃ§aise":{_state_code:"pf",SH:[{2018:[2,18,2,25],2019:[2,17,2,24],2020:[2,16,2,23],2021:[2,21,2,28],2022:[2,20,2,27],2023:[2,19,2,26],name:"Vacances de fÃ©vrier"},{2018:[3,30,4,15],2019:[4,7,4,22],2020:[3,29,4,13],2021:[4,6,4,18],2022:[4,3,4,16],2023:[4,2,4,16],name:"Vacances d'avril"},{2018:[5,20,5,27],2019:[5,26,6,2],2020:[5,17,5,24],2021:[5,25,5,30],2022:[5,22,5,29],2023:[5,21,5,27],name:"Vacances de mai"},{2018:[7,7,8,15],2019:[7,7,8,13],2020:[7,5,8,9],2021:[7,3,8,8],2022:[7,2,8,7],2023:[7,2,8,7],name:"Grandes Vacances"},{2018:[9,16,9,23],2019:[9,15,9,22],2020:[9,13,9,20],2021:[9,12,9,19],2022:[9,11,9,18],name:"Vacances de septembre"},{2018:[10,28,11,11],2019:[10,27,11,11],2020:[10,25,11,8],2021:[10,24,11,7],2022:[10,23,11,6],name:"Vacances d'octobre-novembre"},{2018:[12,16,1,13],2019:[12,15,1,12],2020:[12,13,1,10],2021:[12,12,1,9],2022:[12,11,1,8],name:"Vacances de NoÃ«l"}]},"Saint-Pierre-et-Miquelon":{_state_code:"pm",SH:[{2018:[2,24,3,11],2019:[2,16,3,3],2020:[2,22,3,8],2021:[2,19,3,7],name:"Vacances d'Hiver"},{2018:[4,28,5,13],2019:[4,20,5,5],2020:[4,18,5,3],2021:[4,24,5,9],name:"Vacances de Printemps"},{2020:[5,21,5,24],2021:[5,13,5,16],name:"Pont de l'Ascension"},{2018:[6,30,9,6],2019:[7,4,9,4],2020:[7,4,9,2],2021:[7,3,9,1],name:"Vacances d'Ã‰tÃ©"},{2018:[10,27,11,4],2019:[10,26,11,5],2020:[10,22,11,1],name:"Vacances de la Toussaint"},{2018:[12,22,1,6],2019:[12,21,1,5],2020:[12,19,1,3],name:"Vacances de NoÃ«l"}]},"Wallis-et-Futuna":{_state_code:"wf",SH:[{2018:[4,1,4,15],2019:[3,31,4,14],2020:[3,29,4,13],2021:[4,3,4,18],name:"Vacances 1Ã¨re pÃ©riode"},{2018:[6,8,6,24],2019:[6,9,6,23],2020:[6,5,6,21],2021:[6,5,6,20],name:"Vacances 2Ã¨me pÃ©riode"},{2018:[8,10,8,26],2019:[8,11,8,25],2020:[8,9,8,23],2021:[8,7,8,22],name:"Vacances 3Ã¨me pÃ©riode"},{2018:[10,14,10,28],2019:[10,13,10,27],2020:[10,11,10,25],2021:[10,9,10,24],name:"Vacances 4Ã¨me pÃ©riode"},{2018:[12,16,2,10],2019:[12,15,2,9],2020:[12,13,2,14],2021:[12,18,2,19],name:"Vacances d'Ã‰tÃ©"}]}};var data$d={England:{PH:[{name:"New Yearâ€™s Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Early May bank holiday",variable_date:"firstMayMonday"},{name:"Spring bank holiday",variable_date:"lastMayMonday"},{name:"Summer bank holiday",variable_date:"lastAugustMonday"},{name:"Christmas",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},Wales:{PH:[{name:"New Yearâ€™s Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Early May bank holiday",variable_date:"firstMayMonday"},{name:"Spring bank holiday",variable_date:"lastMayMonday"},{name:"Summer bank holiday",variable_date:"lastAugustMonday"},{name:"Christmas",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]}};var data$e={PH:[{name:"Î ÏÏ‰Ï„Î¿Ï‡ÏÎ¿Î½Î¹Î¬",fixed_date:[1,1]},{name:"Î˜ÎµÎ¿Ï†Î¬Î½Î¹Î±",fixed_date:[1,6]},{name:"ÎšÎ±Î¸Î±ÏÎ¬ Î”ÎµÏ…Ï„Î­ÏÎ±",variable_date:"orthodox easter",offset:-48},{name:"25Î· ÎœÎ±ÏÏ„Î¯Î¿Ï…",fixed_date:[3,25]},{name:"ÎœÎµÎ³Î¬Î»Î· Î Î±ÏÎ±ÏƒÎºÎµÏ…Î®",variable_date:"orthodox easter",offset:-2},{name:"Î Î¬ÏƒÏ‡Î±",variable_date:"orthodox easter",offset:0},{name:"Î”ÎµÏ…Ï„Î­ÏÎ± Ï„Î¿Ï… Î Î¬ÏƒÏ‡Î±",variable_date:"orthodox easter",offset:1},{name:"Î ÏÏ‰Ï„Î¿Î¼Î±Î³Î¹Î¬",fixed_date:[5,1]},{name:"ÎšÎ¿Î¯Î¼Î·ÏƒÎ· Ï„Î·Ï‚ Î˜ÎµÎ¿Ï„ÏŒÎºÎ¿Ï…",fixed_date:[8,15]},{name:"28Î· ÎŸÎºÏ„Ï‰Î²ÏÎ¯Î¿Ï…",fixed_date:[10,28]},{name:"Î§ÏÎ¹ÏƒÏ„Î¿ÏÎ³ÎµÎ½Î½Î±",fixed_date:[12,25]},{name:"2Î· Î¼Î­ÏÎ± Î§ÏÎ¹ÏƒÏ„Î¿Ï…Î³Î­Î½Î½Ï‰Î½",fixed_date:[12,26]}],SH:[{2019:[1,30,1,30],2020:[1,30,1,30],name:"Î¤ÏÎ¹ÏŽÎ½ Î™ÎµÏÎ±ÏÏ‡ÏŽÎ½"},{2019:[4,22,5,6],2020:[4,13,4,26],name:"Î Î¬ÏƒÏ‡Î±"},{2019:[6,17,6,17],2020:[6,8,6,8],name:"Î‘Î³Î¯Î¿Ï… Î Î½ÎµÏÎ¼Î±Ï„Î¿Ï‚"},{2019:[7,1,8,31],2020:[7,1,8,31],name:"ÎšÎ±Î»Î¿ÎºÎ±Î¯ÏÎ¹"},{2019:[11,17,11,17],name:"Î Î¿Î»Ï…Ï„ÎµÏ‡Î½ÎµÎ¯Î¿"},{2018:[12,24,1,7],2019:[12,24,1,7],2020:[12,24,1,7],name:"Î§ÏÎ¹ÏƒÏ„Î¿ÏÎ³ÎµÎ½Î½Î±"}]};var data$f={PH:[{name:"ÃºjÃ©v",fixed_date:[1,1]},{name:"az 1848-as forradalom Ã¼nnepe",fixed_date:[3,15]},{name:"nagypÃ©ntek",variable_date:"easter",offset:-2},{name:"hÃºsvÃ©tvasÃ¡rnap",variable_date:"easter"},{name:"hÃºsvÃ©thÃ©tfÅ‘",variable_date:"easter",offset:1},{name:"pÃ¼nkÃ¶sdvasÃ¡rnap",variable_date:"easter",offset:49},{name:"pÃ¼nkÃ¶sdhÃ©tfÅ‘",variable_date:"easter",offset:50},{name:"a munka Ã¼nnepe",fixed_date:[5,1]},{name:"az Ã¡llamalapÃ­tÃ¡s Ã¼nnepe",fixed_date:[8,20]},{name:"az 1956-os forradalom Ã¼nnepe",fixed_date:[10,23]},{name:"mindenszentek",fixed_date:[11,1]},{name:"karÃ¡csony",fixed_date:[12,25]},{name:"karÃ¡csony mÃ¡snap",fixed_date:[12,26]}],SH:[{2015:[4,2,4,7],2016:[3,24,3,29],2017:[4,13,4,18],name:"tavaszi szÃ¼net"},{2015:[6,16,8,31],2016:[6,16,8,31],2017:[6,16,8,31],name:"nyÃ¡ri szÃ¼net"},{2014:[10,27,10,31],2015:[10,26,10,30],2016:[11,2,11,4],name:"Å‘szi szÃ¼net"},{2014:[12,22,1,2],2015:[12,21,12,31],2016:[12,22,1,2],name:"tÃ©li szÃ¼net"}]};var data$g={PH:[{name:"New Yearâ€™s Day",fixed_date:[1,1]},{name:"St Patrickâ€™s Day",fixed_date:[3,17]},{name:"St Patrickâ€™s Day",variable_date:"nextMo-Fr17March"},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"May Bank Holiday",variable_date:"firstMayMonday"},{name:"June Bank Holiday",variable_date:"firstJuneMonday"},{name:"August Bank Holiday",variable_date:"firstAugustMonday"},{name:"October Bank Holiday (Halloween)",variable_date:"lastOctoberMonday"},{name:"Christmas",fixed_date:[12,25]},{name:"St Stephenâ€™s Day",fixed_date:[12,26]},{name:"Bank Holiday",fixed_date:[12,27]}]};var data$h={PH:[{name:"Capodanno",fixed_date:[1,1]},{name:"Epifania",fixed_date:[1,6]},{name:"Liberazione dal nazifascismo (1945)",fixed_date:[4,25]},{name:"Pasqua",variable_date:"easter"},{name:"LunedÃ¬ di Pasqua",variable_date:"easter",offset:1},{name:"Festa del lavoro",fixed_date:[5,1]},{name:"Festa della Repubblica",fixed_date:[6,2]},{name:"Assunzione di Maria",fixed_date:[8,15]},{name:"Ognissanti",fixed_date:[11,1]},{name:"Immacolata Concezione",fixed_date:[12,8]},{name:"Natale di GesÃ¹",fixed_date:[12,25]},{name:"Santo Stefano",fixed_date:[12,26]}]};var data$i={PH:[{name:"Nieuwjaarsdag",fixed_date:[1,1]},{name:"Goede vrijdag",variable_date:"easter",offset:-2},{name:"Tweede Paasdag",variable_date:"easter",offset:1},{name:"Koningsdag",fixed_date:[4,27]},{name:"Bevrijdingsdag",fixed_date:[5,5]},{name:"Hemelvaartsdag",variable_date:"easter",offset:39},{name:"Tweede Pinksterdag",variable_date:"easter",offset:50},{name:"Eerste Kerstdag",fixed_date:[12,25]},{name:"Tweede Kerstdag",fixed_date:[12,26]}]};var data$j={PH:[{name:"NyttÃ¥rsdag",fixed_date:[1,1]},{name:"SkjÃ¦rtorsdag",variable_date:"easter",offset:-3},{name:"Langfredag",variable_date:"easter",offset:-2},{name:"PÃ¥skedag",variable_date:"easter"},{name:"2. PÃ¥skedag",variable_date:"easter",offset:1},{name:"1. Mai",fixed_date:[5,1]},{name:"Grunnlovsdagen",fixed_date:[5,17]},{name:"Kristi Himmelfartsdag",variable_date:"easter",offset:39},{name:"Pinsedag",variable_date:"easter",offset:49},{name:"2. Pinsedag",variable_date:"easter",offset:50},{name:"Juledag",fixed_date:[12,25]},{name:"2. Juledag",fixed_date:[12,26]}]};var data$k={PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Day after New Year's Day",fixed_date:[1,2]},{name:"Waitangi Day",fixed_date:[2,6]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Anzac Day",fixed_date:[4,25]},{name:"Queen's Birthday",variable_date:"firstJuneMonday"},{name:"Labour Day",variable_date:"firstOctoberMonday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]};var data$l={PH:[{name:"Nowy Rok",fixed_date:[1,1]},{name:"ÅšwiÄ™to Trzech KrÃ³li",fixed_date:[1,6]},{name:"Wielkanoc",variable_date:"easter"},{name:"Lany PoniedziaÅ‚ek - drugi dzieÅ„ Wielkiej Nocy",variable_date:"easter",offset:1},{name:"Pierwszy Maja",fixed_date:[5,1]},{name:"Trzeci Maja",fixed_date:[5,3]},{name:"Zielone ÅšwiÄ…tki",variable_date:"easter",offset:49},{name:"BoÅ¼e CiaÅ‚o",variable_date:"easter",offset:60},{name:"WniebowziÄ™cie NajÅ›wiÄ™tszej Maryi Panny",fixed_date:[8,15]},{name:"Wszystkich ÅšwiÄ™tych",fixed_date:[11,1]},{name:"ÅšwiÄ™to NiepodlegÅ‚oÅ›ci",fixed_date:[11,11]},{name:"pierwszy dzieÅ„ BoÅ¼ego Narodzenia",fixed_date:[12,25]},{name:"drugi dzieÅ„ BoÅ¼ego Narodzenia",fixed_date:[12,26]}]};var data$m={PH:[{name:"Anul Nou",fixed_date:[1,1]},{name:"A doua zi de Anul Nou",fixed_date:[1,2]},{name:"Ziua Unirii Principatelor RomÃ¢ne (Ziua Unirii)",fixed_date:[1,24]},{name:"PaÈ™tele ortodox",variable_date:"orthodox easter"},{name:"A doua zi de PaÈ™te ortodox",variable_date:"orthodox easter",offset:1},{name:"Ziua Muncii",fixed_date:[5,1]},{name:"Rusaliile",variable_date:"orthodox easter",offset:50},{name:"A doua zi de Rusalii",variable_date:"orthodox easter",offset:51},{name:"Adormirea Maicii Domnului",fixed_date:[8,15]},{name:"SfÃ¢ntul Apostol Andrei",fixed_date:[11,30]},{name:"Ziua NaÈ›ionalÄƒ (Ziua Marii Uniri)",fixed_date:[12,1]},{name:"CrÄƒciunul",fixed_date:[12,25]},{name:"A doua zi de CrÄƒciun",fixed_date:[12,26]}],SH:[{2015:[1,31,2,8],2016:[1,30,2,7],2021:[1,30,2,7],name:"VacanÅ£a intersemestrialÄƒ"},{2015:[4,11,4,19],2016:[4,23,5,3],2021:[4,30,5,9],name:"VacanÈ›a de primÄƒvarÄƒ"},{2015:[6,20,9,13],2016:[6,18,9,4],name:"VacanÈ›a de varÄƒ"},{2014:[12,20,1,4],2015:[12,19,1,3],2020:[12,23,1,10],name:"VacanÈ›a de iarnÄƒ"}]};var data$n={PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]}],"Ð¢Ð°Ñ‚Ð°Ñ€ÑÑ‚Ð°Ð½":{_state_code:"tatarstan",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð£Ñ€Ð°Ð·Ð°-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[7,28]},{name:"Ð”ÐµÐ½ÑŒ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸ Ð¢Ð°Ñ‚Ð°Ñ€ÑÑ‚Ð°Ð½",fixed_date:[8,30]},{name:"ÐšÑƒÑ€Ð±Ð°Ð½-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[10,4]},{name:"Ð”ÐµÐ½ÑŒ ÐšÐ¾Ð½ÑÑ‚Ð¸Ñ‚ÑƒÑ†Ð¸Ð¸ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸ Ð¢Ð°Ñ‚Ð°Ñ€ÑÑ‚Ð°Ð½",fixed_date:[11,6]}]},"Ð‘Ð°ÑˆÐºÐ¾Ñ€Ñ‚Ð¾ÑÑ‚Ð°Ð½":{_state_code:"bashkortostan",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð£Ñ€Ð°Ð·Ð°-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[7,28]},{name:"ÐšÑƒÑ€Ð±Ð°Ð½-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[10,4]},{name:"Ð”ÐµÐ½ÑŒ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸ Ð‘Ð°ÑˆÐºÐ¸Ñ€Ð¸Ð¸",fixed_date:[10,11]},{name:"Ð”ÐµÐ½ÑŒ ÐšÐ¾Ð½ÑÑ‚Ð¸Ñ‚ÑƒÑ†Ð¸Ð¸ Ð‘Ð°ÑˆÐºÐ¾Ñ€Ñ‚Ð¾ÑÑ‚Ð°Ð½Ð°",fixed_date:[12,24]}]},"Ð§ÑƒÐ²Ð°ÑˆÐ¸Ñ":{_state_code:"chuvashia",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð”ÐµÐ½ÑŒ Ð§ÑƒÐ²Ð°ÑˆÑÐºÐ¾Ð¹ Ñ€ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸",fixed_date:[6,24]}]},"Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ° Ð¡Ð°Ñ…Ð° (Ð¯ÐºÑƒÑ‚Ð¸Ñ)":{_state_code:"sakha",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð”ÐµÐ½ÑŒ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸ Ð¡Ð°Ñ…Ð°",fixed_date:[4,27]},{name:"Ð«ÑÑ‹Ð°Ñ…",fixed_date:[6,23]},{name:"Ð”ÐµÐ½ÑŒ Ð³Ð¾ÑÑƒÐ´Ð°Ñ€ÑÑ‚Ð²ÐµÐ½Ð½Ð¾ÑÑ‚Ð¸ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸ Ð¡Ð°Ñ…Ð°",fixed_date:[9,27]}]},"ÐšÐ°Ð»Ð¼Ñ‹ÐºÐ¸Ñ":{_state_code:"kalmykia",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð¦Ð°Ð³Ð°Ð½ Ð¡Ð°Ñ€",fixed_date:[1,14]},{name:"Ð”ÐµÐ½ÑŒ Ð¿Ñ€Ð¸Ð½ÑÑ‚Ð¸Ñ Ð¡Ñ‚ÐµÐ¿Ð½Ð¾Ð³Ð¾ Ð£Ð»Ð¾Ð¶ÐµÐ½Ð¸Ñ (ÐšÐ¾Ð½ÑÑ‚Ð¸Ñ‚ÑƒÑ†Ð¸Ð¸) Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸ ÐšÐ°Ð»Ð¼Ñ‹ÐºÐ¸Ñ",fixed_date:[4,5]},{name:"Ð”ÐµÐ½ÑŒ Ñ€Ð¾Ð¶Ð´ÐµÐ½Ð¸Ñ Ð‘ÑƒÐ´Ð´Ñ‹ Ð¨Ð°ÐºÑŒÑÐ¼ÑƒÐ½",fixed_date:[6,6]},{name:"Ð—ÑƒÐ»",fixed_date:[12,15]},{name:"Ð”ÐµÐ½ÑŒ Ð¿Ð°Ð¼ÑÑ‚Ð¸ Ð¶ÐµÑ€Ñ‚Ð² Ð´ÐµÐ¿Ð¾Ñ€Ñ‚Ð°Ñ†Ð¸Ð¸ ÐºÐ°Ð»Ð¼Ñ‹Ñ†ÐºÐ¾Ð³Ð¾ Ð½Ð°Ñ€Ð¾Ð´Ð°",fixed_date:[12,28]}]},"Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ° Ð‘ÑƒÑ€ÑÑ‚Ð¸Ñ":{_state_code:"buryatia",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð¡Ð°Ð³Ð°Ð°Ð»Ð³Ð°Ð½",fixed_date:[1,14]}]},"Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ° ÐšÐ°Ñ€ÐµÐ»Ð¸Ñ":{_state_code:"karelia",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð”ÐµÐ½ÑŒ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸ ÐšÐ°Ñ€ÐµÐ»Ð¸Ñ",fixed_date:[6,8]},{name:"Ð”ÐµÐ½ÑŒ Ð¾ÑÐ²Ð¾Ð±Ð¾Ð¶Ð´ÐµÐ½Ð¸Ñ ÐšÐ°Ñ€ÐµÐ»Ð¸Ð¸ Ð¾Ñ‚ Ñ„Ð°ÑˆÐ¸ÑÑ‚ÑÐºÐ¸Ñ… Ð·Ð°Ñ…Ð²Ð°Ñ‚Ñ‡Ð¸ÐºÐ¾Ð²",fixed_date:[9,30]}]},"ÐŸÑ€Ð¸Ð²Ð¾Ð»Ð¶ÑÐºÐ¸Ð¹ Ñ„ÐµÐ´ÐµÑ€Ð°Ð»ÑŒÐ½Ñ‹Ð¹ Ð¾ÐºÑ€ÑƒÐ³":{_state_code:"udmurtia",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð”ÐµÐ½ÑŒ Ð“Ð¾ÑÑƒÐ´Ð°Ñ€ÑÑ‚Ð²ÐµÐ½Ð½Ð¾ÑÑ‚Ð¸ Ð£Ð´Ð¼ÑƒÑ€Ñ‚ÑÐºÐ¾Ð¹ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸",fixed_date:[5,31]}]},"ÐÐ´Ñ‹Ð³ÐµÑ":{_state_code:"adygea",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð£Ñ€Ð°Ð·Ð°-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[7,28]},{name:"ÐšÑƒÑ€Ð±Ð°Ð½-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[10,4]},{name:"Ð”ÐµÐ½ÑŒ Ð¾Ð±Ñ€Ð°Ð·Ð¾Ð²Ð°Ð½Ð¸Ñ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸ ÐÐ´Ñ‹Ð³ÐµÑ",fixed_date:[10,5]}]},"Ð”Ð°Ð³ÐµÑÑ‚Ð°Ð½":{_state_code:"dagestan",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð”ÐµÐ½ÑŒ ÐšÐ¾Ð½ÑÑ‚Ð¸Ñ‚ÑƒÑ†Ð¸Ð¸ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸ Ð”Ð°Ð³ÐµÑÑ‚Ð°Ð½",fixed_date:[7,26]},{name:"Ð£Ñ€Ð°Ð·Ð°-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[7,28]},{name:"Ð”ÐµÐ½ÑŒ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð° Ð½Ð°Ñ€Ð¾Ð´Ð¾Ð² Ð”Ð°Ð³ÐµÑÑ‚Ð°Ð½Ð°",fixed_date:[9,15]},{name:"ÐšÑƒÑ€Ð±Ð°Ð½-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[10,4]}]},"Ð˜Ð½Ð³ÑƒÑˆÐµÑ‚Ð¸Ñ":{_state_code:"ingushetia",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð”ÐµÐ½ÑŒ Ð¾Ð±Ñ€Ð°Ð·Ð¾Ð²Ð°Ð½Ð¸Ñ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸ Ð˜Ð½Ð³ÑƒÑˆÐµÑ‚Ð¸Ñ",fixed_date:[6,4]},{name:"Ð£Ñ€Ð°Ð·Ð°-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[7,28]},{name:"ÐšÑƒÑ€Ð±Ð°Ð½-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[10,4]}]},"ÐšÐ°Ñ€Ð°Ñ‡Ð°ÐµÐ²Ð¾-Ð§ÐµÑ€ÐºÐµÑÐ¸Ñ":{_state_code:"karachay_cherkess",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð”ÐµÐ½ÑŒ Ð²Ð¾Ð·Ñ€Ð¾Ð¶Ð´ÐµÐ½Ð¸Ñ ÐºÐ°Ñ€Ð°Ñ‡Ð°ÐµÐ²ÑÐºÐ¾Ð³Ð¾ Ð½Ð°Ñ€Ð¾Ð´Ð°",fixed_date:[5,3]},{name:"Ð£Ñ€Ð°Ð·Ð°-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[7,28]},{name:"ÐšÑƒÑ€Ð±Ð°Ð½-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[10,4]}]},"Ð§ÐµÑ‡Ð½Ñ":{_state_code:"chechnya",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð”ÐµÐ½ÑŒ Ð¼Ð¸Ñ€Ð° Ð² Ð§ÐµÑ‡ÐµÐ½ÑÐºÐ¾Ð¹ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐµ",fixed_date:[4,16]},{name:"Ð£Ñ€Ð°Ð·Ð°-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[7,28]},{name:"ÐšÑƒÑ€Ð±Ð°Ð½-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[10,4]}]},"ÐšÐ°Ð±Ð°Ñ€Ð´Ð¸Ð½Ð¾-Ð‘Ð°Ð»ÐºÐ°Ñ€Ð¸Ñ":{_state_code:"kabardino_balkaria",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð”ÐµÐ½ÑŒ Ð²Ð¾Ð·Ñ€Ð¾Ð¶Ð´ÐµÐ½Ð¸Ñ Ð±Ð°Ð»ÐºÐ°Ñ€ÑÐºÐ¾Ð³Ð¾ Ð½Ð°Ñ€Ð¾Ð´Ð°",fixed_date:[3,28]},{name:"Ð§ÐµÑ€ÐºÐµÑÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ Ñ‚Ñ€Ð°ÑƒÑ€Ð°",fixed_date:[5,21]},{name:"Ð£Ñ€Ð°Ð·Ð°-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[7,28]},{name:"Ð”ÐµÐ½ÑŒ Ð³Ð¾ÑÑƒÐ´Ð°Ñ€ÑÑ‚Ð²ÐµÐ½Ð½Ð¾ÑÑ‚Ð¸ ÐšÐ°Ð±Ð°Ñ€Ð´Ð¸Ð½Ð¾-Ð‘Ð°Ð»ÐºÐ°Ñ€ÑÐºÐ¾Ð¹ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸",fixed_date:[9,1]},{name:"ÐšÑƒÑ€Ð±Ð°Ð½-Ð±Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[10,4]}]},"Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ° ÐÐ»Ñ‚Ð°Ð¹":{_state_code:"altai",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð§Ð°Ð³Ð°-Ð‘Ð°Ð¹Ñ€Ð°Ð¼",fixed_date:[1,14]}]},"Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ° Ð¢Ñ‹Ð²Ð°":{_state_code:"tuva",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"ÐÐ°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¿Ñ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð¨Ð°Ð³Ð°Ð°",fixed_date:[1,14]},{name:"Ð”ÐµÐ½ÑŒ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸ Ð¢Ñ‹Ð²Ð°",fixed_date:[8,15]}]},"Ð¡Ð°Ñ€Ð°Ñ‚Ð¾Ð²ÑÐºÐ°Ñ Ð¾Ð±Ð»Ð°ÑÑ‚ÑŒ":{_state_code:"saratov",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð Ð°Ð´Ð¾Ð½Ð¸Ñ†Ð°",fixed_date:[4,29]}]},"Ð‘Ñ€ÑÐ½ÑÐºÐ°Ñ Ð¾Ð±Ð»Ð°ÑÑ‚ÑŒ":{_state_code:"bryansk",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð Ð°Ð´Ð¾Ð½Ð¸Ñ†Ð°",fixed_date:[4,29]},{name:"Ð”ÐµÐ½ÑŒ Ð¾ÑÐ²Ð¾Ð±Ð¾Ð¶Ð´ÐµÐ½Ð¸Ñ Ð³Ð¾Ñ€Ð¾Ð´Ð° Ð‘Ñ€ÑÐ½ÑÐºÐ°",fixed_date:[9,17]}]},"Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ° ÐšÐ¾Ð¼Ð¸":{_state_code:"komi",PH:[{name:"1. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,1]},{name:"2. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,2]},{name:"3. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,3]},{name:"4. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,4]},{name:"5. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,5]},{name:"6. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,6]},{name:"Ð Ð¾Ð¶Ð´ÐµÑÑ‚Ð²Ð¾ Ð¥Ñ€Ð¸ÑÑ‚Ð¾Ð²Ð¾",fixed_date:[1,7]},{name:"8. ÐÐ¾Ð²Ð¾Ð³Ð¾Ð´Ð½Ð¸Ðµ ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",fixed_date:[1,8]},{name:"Ð”ÐµÐ½ÑŒ Ð·Ð°Ñ‰Ð¸Ñ‚Ð½Ð¸ÐºÐ° ÐžÑ‚ÐµÑ‡ÐµÑÑ‚Ð²Ð°",fixed_date:[2,23]},{name:"ÐœÐµÐ¶Ð´ÑƒÐ½Ð°Ñ€Ð¾Ð´Ð½Ñ‹Ð¹ Ð¶ÐµÐ½ÑÐºÐ¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐ¾Ð±ÐµÐ´Ñ‹",fixed_date:[5,9]},{name:"ÐŸÑ€Ð°Ð·Ð´Ð½Ð¸Ðº Ð’ÐµÑÐ½Ñ‹ Ð¸ Ð¢Ñ€ÑƒÐ´Ð°",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÐµÐ´Ð¸Ð½ÑÑ‚Ð²Ð°",fixed_date:[11,4]},{name:"Ð”ÐµÐ½ÑŒ Ð Ð¾ÑÑÐ¸Ð¸",fixed_date:[6,12]},{name:"Ð”ÐµÐ½ÑŒ Ð ÐµÑÐ¿ÑƒÐ±Ð»Ð¸ÐºÐ¸ ÐšÐ¾Ð¼Ð¸",fixed_date:[8,22]}]}};var data$o={PH:[{name:"nyÃ¥rsdagen",fixed_date:[1,1]},{name:"trettondedag jul",fixed_date:[1,6]},{name:"lÃ¥ngfredagen",variable_date:"easter",offset:-2},{name:"pÃ¥skdagen",variable_date:"easter"},{name:"annandag pÃ¥sk",variable_date:"easter",offset:1},{name:"fÃ¶rsta maj",fixed_date:[5,1]},{name:"pingstdagen",variable_date:"easter",offset:49},{name:"nationaldagen",fixed_date:[6,6]},{name:"midsommardagen",variable_date:"nextSaturday20Jun"},{name:"alla helgons dag",variable_date:"nextSaturday31Oct"},{name:"juldagen",fixed_date:[12,25]},{name:"annandag jul",fixed_date:[12,26]}]};var data$p={PH:[{name:"novo leto",fixed_date:[1,1]},{name:"PreÅ¡ernov dan, slovenski kulturni praznik",fixed_date:[2,8]},{name:"velikonoÄna nedelja",variable_date:"easter"},{name:"velikonoÄni ponedeljek",variable_date:"easter",offset:1},{name:"dan upora proti okupatorju",fixed_date:[4,27]},{name:"praznik dela 1",fixed_date:[5,1]},{name:"praznik dela 2",fixed_date:[5,2]},{name:"binkoÅ¡tna nedelja - binkoÅ¡ti",variable_date:"easter",offset:49},{name:"dan drÅ¾avnosti",fixed_date:[6,25]},{name:"Marijino vnebovzetje",fixed_date:[8,15]},{name:"dan reformacije",fixed_date:[10,31]},{name:"dan spomina na mrtve",fixed_date:[11,1]},{name:"boÅ¾iÄ",fixed_date:[12,25]},{name:"dan samostojnosti in enotnosti",fixed_date:[12,26]}]};var data$q={PH:[{name:"DeÅˆ vzniku Slovenskej republiky",fixed_date:[1,1]},{name:"Zjavenie PÃ¡na",fixed_date:[1,6]},{name:"VeÄ¾kÃ½ piatok",variable_date:"easter",offset:-2},{name:"VeÄ¾konoÄnÃ¡ nedeÄ¾a",variable_date:"easter"},{name:"VeÄ¾konoÄnÃ½ pondelok",variable_date:"easter",offset:1},{name:"Sviatok prÃ¡ce",fixed_date:[5,1]},{name:"DeÅˆ vÃ­Å¥azstva nad faÅ¡izmom",fixed_date:[5,8]},{name:"Sviatok svÃ¤tÃ©ho Cyrila a Metoda",fixed_date:[7,5]},{name:"VÃ½roÄie SlovenskÃ©ho nÃ¡rodnÃ©ho povstania",fixed_date:[8,29]},{name:"DeÅˆ Ãšstavy Slovenskej republiky",fixed_date:[9,1]},{name:"Sviatok Panny MÃ¡rie Sedembolestnej",fixed_date:[9,15]},{name:"Sviatok vÅ¡etkÃ½ch svÃ¤tÃ½ch",fixed_date:[11,1]},{name:"DeÅˆ boja za slobodu a demokraciu",fixed_date:[11,17]},{name:"Å tedrÃ½ deÅˆ",fixed_date:[12,24]},{name:"PrvÃ½ sviatok vianoÄnÃ½",fixed_date:[12,25]},{name:"DruhÃ½ sviatok vianoÄnÃ½",fixed_date:[12,26]}]};var data$r={PH:[{name:"ÐÐ¾Ð²Ð¸Ð¹ Ñ€Ñ–Ðº",fixed_date:[1,1]},{name:"Ð Ñ–Ð·Ð´Ð²Ð¾",fixed_date:[1,7]},{name:"ÐœÑ–Ð¶Ð½Ð°Ñ€Ð¾Ð´Ð½Ð¸Ð¹ Ð¶Ñ–Ð½Ð¾Ñ‡Ð¸Ð¹ Ð´ÐµÐ½ÑŒ",fixed_date:[3,8]},{name:"Ð’ÐµÐ»Ð¸ÐºÐ´ÐµÐ½ÑŒ",variable_date:"orthodox easter",offset:1},{name:"Ð”ÐµÐ½ÑŒ ÐŸÑ€Ð°Ñ†Ñ– 1",fixed_date:[5,1]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÑ€Ð°Ñ†Ñ– 2",fixed_date:[5,2]},{name:"Ð”ÐµÐ½ÑŒ ÐŸÐµÑ€ÐµÐ¼Ð¾Ð³Ð¸",fixed_date:[5,9]},{name:"Ð”ÐµÐ½ÑŒ ÐšÐ¾Ð½ÑÑ‚Ð¸Ñ‚ÑƒÑ†Ñ–Ñ— Ð£ÐºÑ€Ð°Ñ—Ð½Ð¸",fixed_date:[6,28]},{name:"Ð”ÐµÐ½ÑŒ ÐÐµÐ·Ð°Ð»ÐµÐ¶Ð½Ð¾ÑÑ‚Ñ– Ð£ÐºÑ€Ð°Ñ—Ð½Ð¸",fixed_date:[8,24]}]};var data$s={PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}],Alabama:{_state_code:"al",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Robert E. Lee/Martin Luther King Birthday",variable_date:"firstJanuaryMonday",offset:14},{name:"George Washington/Thomas Jefferson Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Confederate Memorial Day",variable_date:"firstAprilMonday",offset:21},{name:"Jefferson Davis' Birthday",variable_date:"firstJuneMonday"}]},Alaska:{_state_code:"ak",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Seward's Day",variable_date:"lastMarchMonday"},{name:"Alaska Day",fixed_date:[10,18]}]},Arizona:{_state_code:"az",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Dr. Martin Luther King Jr./Civil Rights Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Arkansas:{_state_code:"ar",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Dr. Martin Luther King Jr. and Robert E. Lee's Birthdays",variable_date:"firstJanuaryMonday",offset:14},{name:"George Washington's Birthday and Daisy Gatson Bates Day",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Eve",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]}]},California:{_state_code:"ca",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"CÃ©sar ChÃ¡vez Day",fixed_date:[3,31]}]},Colorado:{_state_code:"co",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Connecticut:{_state_code:"ct",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Lincoln's Birthday",fixed_date:[2,12]},{name:"Good Friday",variable_date:"easter",offset:-2}]},Delaware:{_state_code:"de",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Day After Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]},{name:"Good Friday",variable_date:"easter",offset:-2}]},"District of Columbia":{_state_code:"dc",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Emancipation Day",fixed_date:[4,16]}]},Florida:{_state_code:"fl",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Friday after Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]}]},Georgia:{_state_code:"ga",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Robert E. Lee's Birthday",variable_date:"firstNovemberThursday",offset:22},{name:"Washington's Birthday",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Confederate Memorial Day",variable_date:"lastAprilMonday"}]},Guam:{_state_code:"gu",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Guam Discovery Day",fixed_date:[3,5]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Liberation Day",fixed_date:[7,21]},{name:"All Souls' Day",fixed_date:[11,2]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Lady of Camarin Day",fixed_date:[12,8]},{name:"Christmas Day",fixed_date:[12,25]}]},Hawaii:{_state_code:"hi",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Prince Jonah Kuhio Kalanianaole Day",fixed_date:[3,26]},{name:"Kamehameha Day",fixed_date:[6,11]},{name:"Statehood Day",variable_date:"firstAugustFriday",offset:14},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},Idaho:{_state_code:"id",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr.-Idaho Human Rights Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Illinois:{_state_code:"il",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Lincoln's Birthday",fixed_date:[2,12]},{name:"Casimir Pulaski Day",variable_date:"firstMarchMonday"},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},Indiana:{_state_code:"in",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Lincoln's Birthday",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Primary Election Day",variable_date:"firstMayMonday",offset:1},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},Iowa:{_state_code:"ia",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Lincoln's Birthday",fixed_date:[2,12]}]},Kansas:{_state_code:"ks",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Kentucky:{_state_code:"ky",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Eve",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]},{name:"New Year's Eve",fixed_date:[12,31]},{name:"Good Friday",variable_date:"easter",offset:-2}]},Louisiana:{_state_code:"la",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Mardi Gras",variable_date:"easter",offset:-47},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},Maine:{_state_code:"me",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Patriots' Day",variable_date:"firstAprilMonday",offset:14}]},Maryland:{_state_code:"md",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Native American Heritage Day",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]}]},Massachusetts:{_state_code:"ma",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Patriots' Day",variable_date:"firstAprilMonday",offset:14}]},Michigan:{_state_code:"mi",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Eve",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]},{name:"New Year's Eve",fixed_date:[12,31]}]},Minnesota:{_state_code:"mn",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Mississippi:{_state_code:"ms",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King's and Robert E. Lee's Birthdays",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Confederate Memorial Day",variable_date:"lastAprilMonday"}]},Missouri:{_state_code:"mo",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Truman Day",fixed_date:[5,8]}]},Montana:{_state_code:"mt",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1},{name:"Christmas Eve",fixed_date:[12,24]},{name:"New Year's Eve",fixed_date:[12,31]}]},Nebraska:{_state_code:"ne",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Arbor Day",variable_date:"lastAprilFriday"}]},Nevada:{_state_code:"nv",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Nevada Day",variable_date:"lastOctoberFriday"},{name:"Family Day",variable_date:"firstNovemberThursday",offset:22}]},"New Hampshire":{_state_code:"nh",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Civil Rights Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Day after Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},"New Jersey":{_state_code:"nj",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Lincoln's Birthday",fixed_date:[2,12]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},"New Mexico":{_state_code:"nm",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Day after Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]}]},"New York":{_state_code:"ny",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Lincoln's Birthday",fixed_date:[2,12]},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},"North Carolina":{_state_code:"nc",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Day after Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Eve",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Day after Christmas",fixed_date:[12,26]},{name:"Good Friday",variable_date:"easter",offset:-2}]},"North Dakota":{_state_code:"nd",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Ohio:{_state_code:"oh",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Oklahoma:{_state_code:"ok",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Day after Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]}]},Oregon:{_state_code:"or",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Pennsylvania:{_state_code:"pa",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Flag Day",fixed_date:[6,14]}]},"Puerto Rico":{_state_code:"pr",PH:[{name:"DÃ­a de AÃ±o Nuevo",fixed_date:[1,1]},{name:"DÃ­a de Reyes",fixed_date:[1,6]},{name:"Natalicio de Eugenio MarÃ­a de Hostos",variable_date:"firstJanuaryMonday",offset:7},{name:"Natalicio de Martin Luther King, Jr.",variable_date:"firstJanuaryMonday",offset:14},{name:"DÃ­a de los Presidentes",variable_date:"firstFebruaryMonday",offset:14},{name:"DÃ­a de la AboliciÃ³n de Esclavitud",fixed_date:[3,22]},{name:"Viernes Santo",variable_date:"easter",offset:-2},{name:"Natalicio de JosÃ© de Diego",variable_date:"firstAprilMonday",offset:14},{name:"RecordaciÃ³n de los Muertos de la Guerra",variable_date:"lastMayMonday"},{name:"DÃ­a de la Independencia",fixed_date:[7,4]},{name:"ConstituciÃ³n de Puerto Rico",fixed_date:[7,25]},{name:"Natalicio de Dr. JosÃ© Celso Barbosa",fixed_date:[7,27]},{name:"DÃ­a del Trabajo",variable_date:"firstSeptemberMonday"},{name:"DÃ­a de la Raza Descubrimiento de AmÃ©rica",variable_date:"firstOctoberMonday",offset:7},{name:"DÃ­a del Veterano",fixed_date:[11,11]},{name:"DÃ­a del Descubrimiento de Puerto Rico",fixed_date:[11,19]},{name:"DÃ­a de AcciÃ³n de Gracias",variable_date:"firstNovemberThursday",offset:21},{name:"Noche Buena",fixed_date:[12,24]},{name:"DÃ­a de Navidad",fixed_date:[12,25]}]},"Rhode Island":{_state_code:"ri",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Victory Day",variable_date:"firstAugustMonday",offset:7}]},"South Carolina":{_state_code:"sc",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Confederate Memorial Day",fixed_date:[5,10]}]},"South Dakota":{_state_code:"sd",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Native American Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Tennessee:{_state_code:"tn",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Eve",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Good Friday",variable_date:"easter",offset:-2}]},Texas:{_state_code:"tx",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Friday after Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Eve",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Day after Christmas",fixed_date:[12,26]}]},"United States Virgin Islands":{_state_code:"vi",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Virgin Islands-Puerto Rico Friendship Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Three Kings Day",fixed_date:[1,6]},{name:"Transfer Day",fixed_date:[3,31]},{name:"Holy Thursday",variable_date:"easter",offset:-3},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Emancipation Day",fixed_date:[7,3]},{name:"Hurricane Supplication Day",variable_date:"firstJulyMonday",offset:21},{name:"Hurricane Thanksgiving",fixed_date:[10,25]},{name:"Liberty Day",fixed_date:[11,1]},{name:"Christmas Second Day",fixed_date:[12,26]},{name:"New Year's Eve",fixed_date:[12,31]}]},Utah:{_state_code:"ut",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Pioneer Day",fixed_date:[7,24]}]},Vermont:{_state_code:"vt",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Town Meeting Day",variable_date:"firstMarchTuesday"},{name:"Battle of Bennington",variable_date:"firstAugustMonday",offset:14}]},Virginia:{_state_code:"va",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Washington:{_state_code:"wa",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},"West Virginia":{_state_code:"wv",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"West Virginia Day",fixed_date:[6,20]},{name:"Lincoln's Day",variable_date:"firstNovemberThursday",offset:22}]},Wisconsin:{_state_code:"wi",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Primary Election Day",variable_date:"firstAugustTuesday",offset:7},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},Wyoming:{_state_code:"wy",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]}};var data$t={PH:[{name:"New Year",fixed_date:[1,1]}],SH:[{2020:[6,21,9,23],2021:[6,21,9,23],2022:[6,21,9,23],2023:[6,21,9,23],2024:[6,21,9,23],2025:[6,21,9,23],2026:[6,21,9,23],2027:[6,21,9,23],2028:[6,21,9,23],2029:[6,21,9,23],2030:[6,21,9,23],2031:[6,21,9,23],2032:[6,21,9,23],name:"Summer"}]};var holiday_definitions=Object.freeze({__proto__:null,at:data,au:data$1,be:data$2,br:data$3,ca:data$4,ch:data$5,ci:data$6,cz:data$7,de:data$8,dk:data$9,es:data$a,fi:data$b,fr:data$c,gb:data$d,gr:data$e,hu:data$f,ie:data$g,it:data$h,nl:data$i,no:data$j,nz:data$k,pl:data$l,ro:data$m,ru:data$n,se:data$o,si:data$p,sk:data$q,ua:data$r,us:data$s,xa:data$t});var data$u={"assuming ok for ko":{daytime:"sunrise-sunset",spring:"Mar-May",summer:"Jun-Aug",autumn:"Sep-Nov",winter:"Dec-Feb",_:"-","=":"-","frÃ¼hling":"Mar-May","frÃ¼hjahr":"Mar-May",sommer:"Jun-Aug",herbst:"Sep-Nov",gesloten:"off",feestdag:"PH",feestdagen:"PH",m:"Mo",w:"We",f:"Fr",primavera:"Mar-May",estate:"Jun-Aug",autunno:"Sep-Nov",inverno:"Dec-Feb"},"please use English written ok for ko":{"(?:an )?feiertag(?:s|en?)?":"PH"},"please use off for ko":{"ruhetage?":"off",geschlossen:"off",geschl:"off",except:"off"},"please use ok for workday":{wd:"Mo-Fr","on work days?":"Mo-Fr","weekdays?":"Mo-Fr","werktags?":"Mo-Sa",vardagar:"Mo-Fr"},"omit hour keyword":{h:""},"omit ko":{season:"",hs:"",hrs:"",hours:"",uhr:"","geÃ¶ffnet":"",zwischen:"",ist:"",durchgehend:"","Ã¶ffnungszeit(?:en)?:?":""},"omit tag key":{"opening_hours\\s*=":""},"omit wrong keyword open end":{from:"",ab:"",von:""},"assuming open end for ko":{"(?:bis|till?|-|â€“)? ?(?:open ?end|late)":"+"},"please use ok for uncertainty":{"~":"-","ï½ž":"-"},"please use fallback rule":{otherwise:"||"},"please use ok for missing data":{"\\?":""},"please use ok for ko":{"â†’":"-","âˆ’":"-","â€”":"-","ãƒ¼":"-",to:"-","Ð´Ð¾":"-",a:"-",as:"-","Ã¡":"-","Ã¡s":"-","Ã s":"-",ate:"-","till?":"-",until:"-",through:"-",and:",","&":",","ï¼š":":","'":'"',always:"24/7","always open":"24/7","always closed":"closed",nonstop:"24/7","24x7":"24/7",anytime:"24/7","all day":"24/7",daily:"Mo-Su",everyday:"Mo-Su","every day":"Mo-Su","all days":"Mo-Su","7j/7":"Mo-Su","7/7":"Mo-Su","7days":"Mo-Su","7 days":"Mo-Su","7 days a week":"Mo-Su","7 days/week":"Mo-Su","24 hours 7 days a week":"24/7","24 hours":"00:00-24:00",midday:"12:00",midnight:"00:00","(?:public )?holidays?":"PH","(?:one )?day after public holiday":"PH +1 day","(?:one )?day before public holiday":"PH -1 day","school ?holidays?":"SH","weekends?":"Sa,Su",daylight:"sunrise-sunset","on(?:_| )?appointments?":'"on appointment"',"by(?:_| )?appointments?":'"by appointment"',"nach(?: |_)vereinbarung":'"Nach Vereinbarung"',"nach(?: |_)absprache":'"Nach Absprache"',bis:"-","tÃ¤glich":"Mo-Su","(?:schul)?ferien":"SH","(?:an|nur)? ?sonn-?(?: und |/)feiertag(?:s|en?)?":"PH,Su",und:",",u:",",auch:",","fermÃ©":"off",et:",","Ã ":"-","jours fÃ©riÃ©s":"PH",sundown:"sunset","morgendÃ¤mmerung":"dawn","abenddÃ¤mmerung":"dusk",sonnenaufgang:"sunrise",sonnenuntergang:"sunset",ostern:"easter"},"please use English abbreviation ok for so":{so:"Su"},"please use English abbreviation ok for ko":{sun:"Su","sundays?":"Su",mon:"Mo","mondays?":"Mo","tues?":"Tu","tuesdays?":"Tu","weds?":"We","wednesdays?":"We",thu:"Th","thurs?":"Th","thursdays?":"Th",fri:"Fr","fridays?":"Fr",sat:"Sa","saturdays?":"Sa",son:"Su","sonn-":"Su","sonntags?":"Su","montags?":"Mo",di:"Tu","die?":"Tu","dienstags?":"Tu",mi:"We","mit?":"We","mittwochs?":"We","don?":"Th","donnerstags?":"Th",fre:"Fr","freitags?":"Fr",sam:"Sa","samstags?":"Sa",dim:"Su",dimanche:"Su","lun?":"Mo",lundi:"Mo",mardi:"Tu",mer:"We",mercredi:"We","jeu?":"Th",jeudi:"Th","ven?":"Fr",vendredi:"Fr",samedi:"Sa","zon?":"Su",zontag:"Su",zondag:"Su",maandag:"Mo",din:"Tu",dinsdag:"Tu","woe?":"We",woensdag:"We",donderdag:"Th","vri?":"Fr",vrijdag:"Fr","zat?":"Sa",zaterdag:"Sa","nedÄ›le":"Su",ne:"Su","pondÄ›lÃ­":"Mo",po:"Mo","ÃºterÃ½":"Tu","Ãºt":"Tu","stÅ™eda":"We",st:"We","Ätvrtek":"Th","Ät":"Th","pÃ¡tek":"Fr","pÃ¡":"Fr",sobota:"Sa",martes:"Tu","miÃ©rcoles":"We",jueves:"Th",viernes:"Fr","sÃ¡bado":"Sa",domingo:"Su",lunes:"Mo",selasa:"Su",rabu:"Mo",kami:"Tu",jumat:"We",sabtu:"Th",minggu:"Fr",senin:"Sa","sÃ¶ndag":"Su","sÃ¶ndagar":"Su","mÃ¥ndag":"Mo",ma:"Mo",tisdag:"Tu",onsdag:"We",torsdag:"Th",fredag:"Fr","lÃ¶rdag":"Sa","lÃ¶rdagar":"Sa",niedziela:"Su",niedz:"Su",n:"Su",ndz:"Su","poniedziaÅ‚ek":"Mo",poniedzialek:"Mo",pon:"Mo",pn:"Mo",wtorek:"Tu",wt:"Tu","Å›roda":"We",sroda:"We","Å›r":"We",sr:"We",czwartek:"Th",czw:"Th",cz:"Th","piÄ…tek":"Fr",piatek:"Fr",pt:"Fr",sob:"Sa","Ð²Ð¾ÑÐºÑ€ÐµÑÐµÐ½ÑŒÐµ":"Su","Ð’Ñ":"Su","voskresen'ye":"Su","Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑŒÐ½Ð¸Ðº":"Mo","ÐŸÐ½":"Mo","ponedel'nik":"Mo","Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº":"Tu",vtornik:"Tu","ÑÑ€ÐµÐ´Ð°":"We",sreda:"We","Ñ‡ÐµÑ‚Ð²ÐµÑ€Ð³":"Th",chetverk:"Th","Ð¿ÑÑ‚Ð½Ð¸Ñ†Ð°":"Fr",pyatnitsa:"Fr","ÑÑƒÐ±Ð±Ð¾Ñ‚Ð°":"Sa",subbota:"Sa","sÃ¸ndag":"Su",mandag:"Mo",tirsdag:"Tu","lÃ¸rdag":"Sa",dom:"Su","domenica?":"Su","domeniche?":"Su",lun:"Mo","lunedÃ¬?":"Mo","mar?":"Tu","martedÃ¬?":"Tu","mer?":"We","mercoledÃ¬?":"We",gio:"Th","giovedÃ¬?":"Th",ven:"Fr","venerdÃ¬?":"Fr",sab:"Sa","sabato?":"Sa","jÃ¤nner":"Jan",january:"Jan",february:"Feb",march:"Mar",april:"Apr","june?":"Jun","july?":"Jul",august:"Aug",september:"Sep",sept:"Sep",october:"Oct",november:"Nov",december:"Dec",januar:"Jan",februar:"Feb","mÃ¤rz?":"Mar",maerz:"Mar",mai:"May",juni:"Jun",juli:"Jul",okt:"Oct",oktober:"Oct",dez:"Dec",dezember:"Dec",janvier:"Jan","fÃ©vrier":"Feb","fÃ©v":"Feb",mars:"Mar",avril:"Apr",avr:"Apr",juin:"Jun",juillet:"Jul","aoÃ»t":"Aug","aoÃ»":"Aug",septembre:"Sep",octobre:"Oct",novembre:"Nov","dÃ©cembre":"Dec",januari:"Jan",februari:"Feb",maart:"Mar",mei:"May",augustus:"Aug",gennaio:"Jan",febbraio:"Feb",marzo:"Mar",aprile:"Apr","giugno?":"Jun","luglio?":"Jul",agosto:"Aug",settembre:"Sep",ottobre:"Oct",dicembre:"Dec"},"please use ok for similar looking ko":{"Ð¾ff":"off"},"please use 24 hours time for ko":{pm:"pm","p.m.":"pm","Ñ€Ð¼":"pm",am:"am","a.m.":"am","Ð°Ð¼":"am"},"please use restriction comment time for ko":{damen:'open "Damen"',herren:'open "Herren"'},"please use ok for typographically correct":{"â€“":"-","â€ž":'"',"â€œ":'"',"â€":'"',"Â«":'"',"Â»":'"',"â€š":'"',"â€˜":'"',"â€™":'"',"ã€Œ":'"',"ã€":'"',"ã€Ž":'"',"ã€":'"'}};var data$v={"unexpected token":'Unexpected token: "__token__" This means that the syntax is not valid at that point or it is currently not supported.',"no string":"The value (first parameter) is not a string.",nothing:"The value contains nothing meaningful which can be parsed.","nothing useful":"This rule does not contain anything useful. Please remove this empty rule.","combine rules":'Separate rules detected each of which only consists of a time selector. These rules should be written as one rule by combining them using "__ok__".',"value ends with token":'The value ends with "__token__". Please either continue after "__token__" or remove "__token__".',"programmers joke":"Might it be possible that you are a programmer and adding a semicolon after each statement is hardwired in your muscle memory ;) ? The thing is that the semicolon in the opening_hours syntax is defined as rule separator. So for compatibility reasons you should omit this last semicolon.","interpreted as year":'The number __number__ will be interpreted as year. This is probably not intended. Times can be specified as "12:00".',"rule before fallback empty":"Rule before fallback rule does not contain anything useful","hour min separator":'Please use ":" as hour/minute-separator',"warnings severity":'The parameter optional_conf_parm["warnings_severity"] must be an integer number between 0 and 7 (inclusive). Given __severity__, expected one of the following numbers: __allowed__.',"optional conf parm type":"The optional_conf_parm parameter is of unknown type. Given __given__","conf param tag key missing":'The optional_conf_parm["tag_key"] is missing, required by optional_conf_parm["map_value"].',"conf param mode invalid":'The optional_conf_parm["mode"] parameter is a invalid number. Gave __given__, expected one of the following numbers: __allowed__.',"conf param unknown type":'The optional_conf_parm["__key__"] parameter is of unknown type. Given __given__, expected __expected__.',"library bug":'An error occurred during evaluation of the value "__value__". Please file a bug report or pull request: __url__.__message__',"library bug PR only":'An error occurred during evaluation of the value "__value__". Please submit a pull request: __url__.__message__',"use multi":'You have used __count__ __part2__ Rules can be separated by ";".',"selector multi 2a":"__what__ in one rule. You may only use one in one rule.","selector multi 2b":'not connected __what__ in one rule. This is probably an error. Equal selector types can (and should) always be written in conjunction separated by comma. Example for time ranges "12:00-13:00,15:00-18:00". Example for weekdays "Mo-We,Fr".',"selector state":"state keywords",comments:"comments","holiday ranges":"holiday ranges",months:"months",weekdays:"weekdays",ranges:"ranges","default state":"This rule which changes the default state (which is closed) for all following rules is not the first rule. The rule will overwrite all previous rules. It can be legitimate to change the default state to open for example and then only specify for which times the facility is closed.",vague:'This rule is not very explicit because there is no time selector being used. A time selector is the part specifying hours when the object is opened, for example "10:00-19:00". Please add a time selector to this rule or use a comment to make it more explicit.',"empty comment":"You have used an empty comment. Please either write something in the comment or use the keyword unknown instead.",separator_for_readability:"You have used the optional symbol <separator_for_readability> in the wrong place. Please check the syntax specification to see where it could be used or remove it.","strange 24/7":'You used 24/7 in a way that is probably not interpreted as "24 hours 7 days a week". For correctness you might want to use "open" or "closed" for this rule and then write your exceptions which should achieve the same goal and is more clear e.g. "open; Mo 12:00-14:00 off".',"public holiday":'There was no PH (public holiday) specified. This is not very explicit.__part2__ Please either append a "PH off" rule if the amenity is closed on all public holidays or use something like "Sa,Su,PH 12:00-16:00" to say that on Saturdays, Sundays and on public holidays the amenity is open 12:00-16:00. If the amenity is open everyday including public holidays then you can make this explicit by writing "Mo-Su,PH". If you are not certain try to find it out. If you canâ€™t then do not add PH to the value and ignore this warning.',"public holiday part2":' Unfortunately the tag key (e.g. "opening_hours", or "lit") is unknown to opening_hours.js. This warning only applies to the key __keys__. If your value is for that key than read on. If not you can ignore the following.',"additional_rule_separator not used after time wrapping midnight":'This rule overwrites parts of the previous rule. This happens because normal rules apply to the whole day and overwrite any definition made by previous rules. You can make this rule an additional rule by using a "," instead of the normal ";" to separate the rules. Note that the overwriting can also be desirable in which case you can ignore this warning.',"additional rule which evaluates to closed":'This rule will be evaluated as closed but it was specified as additional rule. It should be specified as normal rule using ";" as rule separator. See https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification#explain:rule_modifier:closed.',switched:'The selector "__first__" was switched with the selector "__second__" for readability and compatibility reasons.',"no colon after":'Please donâ€™t use ":" after __token__.',"number -5 to 5":"Number between -5 and 5 (except 0) expected.","one weekday constraint":"You can not use more than one constrained weekday in a month range","range constrained weekdays":"You can not use a range of constrained weekdays in a month range",expected:'"__symbol__" expected.',"range zero":"You can not use __type__ ranges with period equals zero.","period one year+":'Please donâ€™t use __type__ ranges with period equals one. If you want to express that a facility is open starting from a year without limit use "<year>+".',"period one":"Please donâ€™t use __type__ ranges with period equals one.","month 31":"The day for __month__ must be between 1 and 31.","month 30":"Month __month__ doesn't have 31 days. The last day of __month__ is day 30.","month feb":"Month __month__ either has 28 or 29 days (leap years).","point in time":"hyphen (-) or open end (+) in time range __calc__expected. For working with points in time, the mode for __libraryname__ has to be altered. Maybe wrong tag?",calculation:"calculation","time range continue":"Time range does not continue as expected","period continue":'Time period does not continue as expected. Example "/01:30".',"time range mode":'__libraryname__ is running in "time range mode". Found point in time.',"point in time mode":'__libraryname__ is running in "points in time mode". Found time range.',"outside current day":"Time range starts outside of the current day","two midnights":"Time spanning more than two midnights not supported","without minutes":'Time range without minutes specified. Not very explicit! Please use this syntax instead "__syntax__".',"outside day":"Time range starts outside of the current day","zero calculation":'Adding zero in a variable time calculation does not change the variable time. Please omit the calculation (example: "sunrise-(sunset-00:00)").',"calculation syntax":"Calculation with variable time is not in the right syntax",missing:'Missing "__symbol__"',"(time)":"(time)","bad range":"Bad range: __from__-__to__","] or more numbers":'"]" or more numbers expected.',"additional rule no sense":'An additional rule does not make sense here. Just use a ";" as rule separator. See https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification#explain:additional_rule_separator',"unexpected token weekday range":"Unexpected token in weekday range: __token__","max differ":"There should be no reason to differ more than __maxdiffer__ days from a __name__. If so tell us â€¦","adding 0":"Adding 0 does not change the date. Please omit this.","unexpected token holiday":"Unexpected token (holiday parser): __token__","no holiday definition":"There are no holidays (__name__) defined for country __cc__.","no holiday definition state":"There are no holidays (__name__) defined for country __cc__ and state __state__.","no country code":"Country code missing which is needed to select the correct holidays (see README how to provide it)","no SH definition":"School holiday __name__not defined for the year __year__.","movable no formula":"Movable day __name__ can not not be calculated. Please add the formula how to calculate it.","movable not in year":"The movable day __name__ plus __days__ days is not in the year of the movable day anymore. Currently not supported.","year range one year":'A year range in which the start year is equal to the end year does not make sense. Please remove the end year. E.g. "__year__ May 23"',"year range reverse":"A year range in which the start year is greater than the end year does not make sense. Please turn it over.","year past":"The year is in the past.","unexpected token year range":"Unexpected token in year range: __token__","week range reverse":"You have specified a week range in reverse order or leaping over a year. This is (currently) not supported.","week negative":"You have specified a week date less then one. A valid week date range is 1-53.","week exceed":"You have specified a week date greater then 53. A valid week date range is 1-53.","week period less than 2":'You have specified a week period which is less than two. If you want to select the whole range from week __weekfrom__ to week __weekto__ then just omit the "/__period__".',"week period greater than 26":'You have specified a week period which is greater than 26. 26.5 is the half of the maximum 53 week dates per year so a week date period greater than 26 would only apply once per year. Please specify the week selector as "week __weekfrom__" if that is what you want to express.',"unexpected token week range":"Unexpected token in week range: __token__","unexpected token month range":"Unexpected token in month range: __token__","day range reverse":"Range in wrong order. From day is greater than to day.","open end":"Specified as open end. Closing time was guessed.","date parameter needed":"Date parameter needed.","assuming ok for ko":'Assuming "__ok__" for "__ko__".',"please use ok for ko":'Please use notation "__ok__" for "__ko__".',"please use ok for similar looking ko":'Please use notation "__ok__" for "__ko__". Those characters look very similar but are not the same!',"rant degree sign used for zero":"Note that this is not a (superscript) zero but a degree sign which is misused as zero. A superscript zero is defined in Unicode (Â°) and would have been more appropriate/uniform here. But note that the use of none-ASCII digits is not allowed.","please use English written ok for ko":'Please use the English written "__ok__" for "__ko__".',"please use English abbreviation ok for ko":'Please use the English abbreviation "__ok__" for "__ko__".',"please use English abbreviation ok for so":'Please use the English abbreviation "__ok__" for "__ko__". Note that it might also mean Saturday in Polish.',"please use off for ko":'Please use "__ok__" for "__ko__". Example: "Mo-Fr 08:00-12:00; Tu off".',"please use ok for workday":'Assuming "__ok__" for "__ko__". Please avoid using "workday": https://wiki.openstreetmap.org/wiki/Talk:Key:opening_hours#need_syntax_for_holidays_and_workingdays',"omit hour keyword":'Please omit "__ko__" or use a colon instead. Example: "12:00-14:00".',"omit ko":'Please omit "__ko__".',"omit tag key":'Please omit "__ko__". The tag key must not be in the tag value.',"omit wrong keyword open end":'Please omit "__ko__". The tag key must not be in the tag value.',"assuming open end for ko":'Assuming "__ok__" (open end time) for "__ko__". Example: "12:00+".',"please use ok for uncertainty":'Please use notation "__ok__" for "__ko__". If there is reason to suspect uncertainty consider adding a comment. Example: 12:00-14:00 "only on sunshine".',"please use fallback rule":'Please use notation "__ok__" (Fallback rule) for "__ko__". Example: Mo-Fr 12:00-14:00; PH off || "by appointment"',"please use ok for missing data":"Please consider adding a FIXME tag instead.","please use 24 hours time for ko":"Please use time format in 24 hours notation instead of the legacy 12 hours variant. If the 12 hours variant is used you might have to convert the hours to the 24 hours notation.","please use restriction comment time for ko":'It looks like you might want to define additional restrictions. If that is the case and they can not be expressed by other syntax elements then you could use a comment together with the `open` keyword. Example: open "female only"',"please use ok for typographically correct":'Please use notation "__ok__" for "__ko__". Although using "__ko__" is typographical correct, it is not defined in the opening_hours syntax. Correct typography should be done on application level â€¦'};function createCommonjsModule(fn,module){return module={exports:{}},fn(module,module.exports),module.exports}var suncalc=createCommonjsModule((function(module,exports){
/*
   (c) 2011-2015, Vladimir Agafonkin
   SunCalc is a JavaScript library for calculating sun/moon position and light phases.
   https://github.com/mourner/suncalc
  */
(function(){var PI=Math.PI,sin=Math.sin,cos=Math.cos,tan=Math.tan,asin=Math.asin,atan=Math.atan2,acos=Math.acos,rad=PI/180;var dayMs=1e3*60*60*24,J1970=2440588,J2000=2451545;function toJulian(date){return date.valueOf()/dayMs-.5+J1970}function fromJulian(j){return new Date((j+.5-J1970)*dayMs)}function toDays(date){return toJulian(date)-J2000}var e=rad*23.4397;function rightAscension(l,b){return atan(sin(l)*cos(e)-tan(b)*sin(e),cos(l))}function declination(l,b){return asin(sin(b)*cos(e)+cos(b)*sin(e)*sin(l))}function azimuth(H,phi,dec){return atan(sin(H),cos(H)*sin(phi)-tan(dec)*cos(phi))}function altitude(H,phi,dec){return asin(sin(phi)*sin(dec)+cos(phi)*cos(dec)*cos(H))}function siderealTime(d,lw){return rad*(280.16+360.9856235*d)-lw}function astroRefraction(h){if(h<0)h=0;return 2967e-7/Math.tan(h+.00312536/(h+.08901179))}function solarMeanAnomaly(d){return rad*(357.5291+.98560028*d)}function eclipticLongitude(M){var C=rad*(1.9148*sin(M)+.02*sin(2*M)+3e-4*sin(3*M)),P=rad*102.9372;return M+C+P+PI}function sunCoords(d){var M=solarMeanAnomaly(d),L=eclipticLongitude(M);return{dec:declination(L,0),ra:rightAscension(L,0)}}var SunCalc={};SunCalc.getPosition=function(date,lat,lng){var lw=rad*-lng,phi=rad*lat,d=toDays(date),c=sunCoords(d),H=siderealTime(d,lw)-c.ra;return{azimuth:azimuth(H,phi,c.dec),altitude:altitude(H,phi,c.dec)}};var times=SunCalc.times=[[-.833,"sunrise","sunset"],[-.3,"sunriseEnd","sunsetStart"],[-6,"dawn","dusk"],[-12,"nauticalDawn","nauticalDusk"],[-18,"nightEnd","night"],[6,"goldenHourEnd","goldenHour"]];SunCalc.addTime=function(angle,riseName,setName){times.push([angle,riseName,setName])};var J0=9e-4;function julianCycle(d,lw){return Math.round(d-J0-lw/(2*PI))}function approxTransit(Ht,lw,n){return J0+(Ht+lw)/(2*PI)+n}function solarTransitJ(ds,M,L){return J2000+ds+.0053*sin(M)-.0069*sin(2*L)}function hourAngle(h,phi,d){return acos((sin(h)-sin(phi)*sin(d))/(cos(phi)*cos(d)))}function getSetJ(h,lw,phi,dec,n,M,L){var w=hourAngle(h,phi,dec),a=approxTransit(w,lw,n);return solarTransitJ(a,M,L)}SunCalc.getTimes=function(date,lat,lng){var lw=rad*-lng,phi=rad*lat,d=toDays(date),n=julianCycle(d,lw),ds=approxTransit(0,lw,n),M=solarMeanAnomaly(ds),L=eclipticLongitude(M),dec=declination(L,0),Jnoon=solarTransitJ(ds,M,L),i,len,time,Jset,Jrise;var result={solarNoon:fromJulian(Jnoon),nadir:fromJulian(Jnoon-.5)};for(i=0,len=times.length;i<len;i+=1){time=times[i];Jset=getSetJ(time[0]*rad,lw,phi,dec,n,M,L);Jrise=Jnoon-(Jset-Jnoon);result[time[1]]=fromJulian(Jrise);result[time[2]]=fromJulian(Jset)}return result};function moonCoords(d){var L=rad*(218.316+13.176396*d),M=rad*(134.963+13.064993*d),F=rad*(93.272+13.22935*d),l=L+rad*6.289*sin(M),b=rad*5.128*sin(F),dt=385001-20905*cos(M);return{ra:rightAscension(l,b),dec:declination(l,b),dist:dt}}SunCalc.getMoonPosition=function(date,lat,lng){var lw=rad*-lng,phi=rad*lat,d=toDays(date),c=moonCoords(d),H=siderealTime(d,lw)-c.ra,h=altitude(H,phi,c.dec),pa=atan(sin(H),tan(phi)*cos(c.dec)-sin(c.dec)*cos(H));h=h+astroRefraction(h);return{azimuth:azimuth(H,phi,c.dec),altitude:h,distance:c.dist,parallacticAngle:pa}};SunCalc.getMoonIllumination=function(date){var d=toDays(date||new Date),s=sunCoords(d),m=moonCoords(d),sdist=149598e3,phi=acos(sin(s.dec)*sin(m.dec)+cos(s.dec)*cos(m.dec)*cos(s.ra-m.ra)),inc=atan(sdist*sin(phi),m.dist-sdist*cos(phi)),angle=atan(cos(s.dec)*sin(s.ra-m.ra),sin(s.dec)*cos(m.dec)-cos(s.dec)*sin(m.dec)*cos(s.ra-m.ra));return{fraction:(1+cos(inc))/2,phase:.5+.5*inc*(angle<0?-1:1)/Math.PI,angle:angle}};function hoursLater(date,h){return new Date(date.valueOf()+h*dayMs/24)}SunCalc.getMoonTimes=function(date,lat,lng,inUTC){var t=new Date(date);if(inUTC)t.setUTCHours(0,0,0,0);else t.setHours(0,0,0,0);var hc=.133*rad,h0=SunCalc.getMoonPosition(t,lat,lng).altitude-hc,h1,h2,rise,set,a,b,xe,ye,d,roots,x1,x2,dx;for(var i=1;i<=24;i+=2){h1=SunCalc.getMoonPosition(hoursLater(t,i),lat,lng).altitude-hc;h2=SunCalc.getMoonPosition(hoursLater(t,i+1),lat,lng).altitude-hc;a=(h0+h2)/2-h1;b=(h2-h0)/2;xe=-b/(2*a);ye=(a*xe+b)*xe+h1;d=b*b-4*a*h1;roots=0;if(d>=0){dx=Math.sqrt(d)/(Math.abs(a)*2);x1=xe-dx;x2=xe+dx;if(Math.abs(x1)<=1)roots++;if(Math.abs(x2)<=1)roots++;if(x1<-1)x1=x2}if(roots===1){if(h0<0)rise=i+x1;else set=i+x1}else if(roots===2){rise=i+(ye<0?x2:x1);set=i+(ye<0?x1:x2)}if(rise&&set)break;h0=h2}var result={};if(rise)result.rise=hoursLater(t,rise);if(set)result.set=hoursLater(t,set);if(!rise&&!set)result[ye>0?"alwaysUp":"alwaysDown"]=true;return result};module.exports=SunCalc})()}));var i18next=createCommonjsModule((function(module,exports){(function(root){if(!Array.prototype.indexOf){Array.prototype.indexOf=function(searchElement){if(this==null){throw new TypeError}var t=Object(this);var len=t.length>>>0;if(len===0){return-1}var n=0;if(arguments.length>0){n=Number(arguments[1]);if(n!=n){n=0}else if(n!=0&&n!=Infinity&&n!=-Infinity){n=(n>0||-1)*Math.floor(Math.abs(n))}}if(n>=len){return-1}var k=n>=0?n:Math.max(len-Math.abs(n),0);for(;k<len;k++){if(k in t&&t[k]===searchElement){return k}}return-1}}if(!Array.prototype.lastIndexOf){Array.prototype.lastIndexOf=function(searchElement){if(this==null){throw new TypeError}var t=Object(this);var len=t.length>>>0;if(len===0){return-1}var n=len;if(arguments.length>1){n=Number(arguments[1]);if(n!=n){n=0}else if(n!=0&&n!=1/0&&n!=-(1/0)){n=(n>0||-1)*Math.floor(Math.abs(n))}}var k=n>=0?Math.min(n,len-1):len-Math.abs(n);for(;k>=0;k--){if(k in t&&t[k]===searchElement){return k}}return-1}}if(typeof String.prototype.trim!=="function"){String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")}}var $=root.jQuery||root.Zepto,i18n={},resStore={},currentLng,replacementCounter=0,languages=[],initialized=false,sync={},conflictReference=null;if(module.exports){module.exports=i18n}else{if($){$.i18n=$.i18n||i18n}if(root.i18n){conflictReference=root.i18n}root.i18n=i18n}sync={load:function(lngs,options,cb){if(options.useLocalStorage){sync._loadLocal(lngs,options,(function(err,store){var missingLngs=[];for(var i=0,len=lngs.length;i<len;i++){if(!store[lngs[i]])missingLngs.push(lngs[i])}if(missingLngs.length>0){sync._fetch(missingLngs,options,(function(err,fetched){f.extend(store,fetched);sync._storeLocal(fetched);cb(err,store)}))}else{cb(err,store)}}))}else{sync._fetch(lngs,options,(function(err,store){cb(err,store)}))}},_loadLocal:function(lngs,options,cb){var store={},nowMS=(new Date).getTime();if(window.localStorage){var todo=lngs.length;f.each(lngs,(function(key,lng){var local=f.localStorage.getItem("res_"+lng);if(local){local=JSON.parse(local);if(local.i18nStamp&&local.i18nStamp+options.localStorageExpirationTime>nowMS){store[lng]=local}}todo--;if(todo===0)cb(null,store)}))}},_storeLocal:function(store){if(window.localStorage){for(var m in store){store[m].i18nStamp=(new Date).getTime();f.localStorage.setItem("res_"+m,JSON.stringify(store[m]))}}return},_fetch:function(lngs,options,cb){var ns=options.ns,store={};if(!options.dynamicLoad){var todo=ns.namespaces.length*lngs.length,errors;f.each(ns.namespaces,(function(nsIndex,nsValue){f.each(lngs,(function(lngIndex,lngValue){var loadComplete=function(err,data){if(err){errors=errors||[];errors.push(err)}store[lngValue]=store[lngValue]||{};store[lngValue][nsValue]=data;todo--;if(todo===0)cb(errors,store)};if(typeof options.customLoad=="function"){options.customLoad(lngValue,nsValue,options,loadComplete)}else{sync._fetchOne(lngValue,nsValue,options,loadComplete)}}))}))}else{var loadComplete=function(err,data){cb(err,data)};if(typeof options.customLoad=="function"){options.customLoad(lngs,ns.namespaces,options,loadComplete)}else{var url=applyReplacement(options.resGetPath,{lng:lngs.join("+"),ns:ns.namespaces.join("+")});f.ajax({url:url,cache:options.cache,success:function(data,status,xhr){f.log("loaded: "+url);loadComplete(null,data)},error:function(xhr,status,error){f.log("failed loading: "+url);loadComplete("failed loading resource.json error: "+error)},dataType:"json",async:options.getAsync,timeout:options.ajaxTimeout})}}},_fetchOne:function(lng,ns,options,done){var url=applyReplacement(options.resGetPath,{lng:lng,ns:ns});f.ajax({url:url,cache:options.cache,success:function(data,status,xhr){f.log("loaded: "+url);done(null,data)},error:function(xhr,status,error){if(status&&status==200||xhr&&xhr.status&&xhr.status==200){f.error("There is a typo in: "+url)}else if(status&&status==404||xhr&&xhr.status&&xhr.status==404){f.log("Does not exist: "+url)}else{var theStatus=status?status:xhr&&xhr.status?xhr.status:null;f.log(theStatus+" when loading "+url)}done(error,{})},dataType:"json",async:options.getAsync,timeout:options.ajaxTimeout,headers:options.headers})},postMissing:function(lng,ns,key,defaultValue,lngs){var payload={};payload[key]=defaultValue;var urls=[];if(o.sendMissingTo==="fallback"&&o.fallbackLng[0]!==false){for(var i=0;i<o.fallbackLng.length;i++){urls.push({lng:o.fallbackLng[i],url:applyReplacement(o.resPostPath,{lng:o.fallbackLng[i],ns:ns})})}}else if(o.sendMissingTo==="current"||o.sendMissingTo==="fallback"&&o.fallbackLng[0]===false){urls.push({lng:lng,url:applyReplacement(o.resPostPath,{lng:lng,ns:ns})})}else if(o.sendMissingTo==="all"){for(var i=0,l=lngs.length;i<l;i++){urls.push({lng:lngs[i],url:applyReplacement(o.resPostPath,{lng:lngs[i],ns:ns})})}}for(var y=0,len=urls.length;y<len;y++){var item=urls[y];f.ajax({url:item.url,type:o.sendType,data:payload,success:function(data,status,xhr){f.log("posted missing key '"+key+"' to: "+item.url);var keys=key.split(".");var x=0;var value=resStore[item.lng][ns];while(keys[x]){if(x===keys.length-1){value=value[keys[x]]=defaultValue}else{value=value[keys[x]]=value[keys[x]]||{}}x++}},error:function(xhr,status,error){f.log("failed posting missing key '"+key+"' to: "+item.url)},dataType:"json",async:o.postAsync,timeout:o.ajaxTimeout})}},reload:reload};var o={lng:undefined,load:"all",preload:[],lowerCaseLng:false,returnObjectTrees:false,fallbackLng:["dev"],fallbackNS:[],detectLngQS:"setLng",detectLngFromLocalStorage:false,ns:{namespaces:["translation"],defaultNs:"translation"},fallbackOnNull:true,fallbackOnEmpty:false,fallbackToDefaultNS:false,showKeyIfEmpty:false,nsseparator:":",keyseparator:".",selectorAttr:"data-i18n",debug:false,resGetPath:"locales/__lng__/__ns__.json",resPostPath:"locales/add/__lng__/__ns__",getAsync:true,postAsync:true,resStore:undefined,useLocalStorage:false,localStorageExpirationTime:7*24*60*60*1e3,dynamicLoad:false,sendMissing:false,sendMissingTo:"fallback",sendType:"POST",interpolationPrefix:"__",interpolationSuffix:"__",defaultVariables:false,reusePrefix:"$t(",reuseSuffix:")",pluralSuffix:"_plural",pluralNotFound:["plural_not_found",Math.random()].join(""),contextNotFound:["context_not_found",Math.random()].join(""),escapeInterpolation:false,indefiniteSuffix:"_indefinite",indefiniteNotFound:["indefinite_not_found",Math.random()].join(""),setJqueryExt:true,defaultValueFromContent:true,useDataAttrOptions:false,cookieExpirationTime:undefined,useCookie:true,cookieName:"i18next",cookieDomain:undefined,objectTreeKeyHandler:undefined,postProcess:undefined,parseMissingKey:undefined,missingKeyHandler:sync.postMissing,ajaxTimeout:0,shortcutFunction:"sprintf"};function _extend(target,source){if(!source||typeof source==="function"){return target}for(var attr in source){target[attr]=source[attr]}return target}function _deepExtend(target,source,overwrite){for(var prop in source)if(prop in target){if(typeof target[prop]==="string"||target[prop]instanceof String||typeof source[prop]==="string"||source[prop]instanceof String){if(overwrite){target[prop]=source[prop]}}else{_deepExtend(target[prop],source[prop],overwrite)}}else{target[prop]=source[prop]}return target}function _each(object,callback,args){var name,i=0,length=object.length,isObj=length===undefined||Object.prototype.toString.apply(object)!=="[object Array]"||typeof object==="function";if(args){if(isObj){for(name in object){if(callback.apply(object[name],args)===false){break}}}else{for(;i<length;){if(callback.apply(object[i++],args)===false){break}}}}else{if(isObj){for(name in object){if(callback.call(object[name],name,object[name])===false){break}}}else{for(;i<length;){if(callback.call(object[i],i,object[i++])===false){break}}}}return object}var _entityMap={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function _escape(data){if(typeof data==="string"){return data.replace(/[&<>"'\/]/g,(function(s){return _entityMap[s]}))}else{return data}}function _ajax(options){
// v0.5.0 of https://github.com/goloroden/http.js
var getXhr=function(callback){if(window.XMLHttpRequest){return callback(null,new XMLHttpRequest)}else if(window.ActiveXObject){try{return callback(null,new ActiveXObject("Msxml2.XMLHTTP"))}catch(e){return callback(null,new ActiveXObject("Microsoft.XMLHTTP"))}}return callback(new Error)};var encodeUsingUrlEncoding=function(data){if(typeof data==="string"){return data}var result=[];for(var dataItem in data){if(data.hasOwnProperty(dataItem)){result.push(encodeURIComponent(dataItem)+"="+encodeURIComponent(data[dataItem]))}}return result.join("&")};var utf8=function(text){text=text.replace(/\r\n/g,"\n");var result="";for(var i=0;i<text.length;i++){var c=text.charCodeAt(i);if(c<128){result+=String.fromCharCode(c)}else if(c>127&&c<2048){result+=String.fromCharCode(c>>6|192);result+=String.fromCharCode(c&63|128)}else{result+=String.fromCharCode(c>>12|224);result+=String.fromCharCode(c>>6&63|128);result+=String.fromCharCode(c&63|128)}}return result};var base64=function(text){var keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";text=utf8(text);var result="",chr1,chr2,chr3,enc1,enc2,enc3,enc4,i=0;do{chr1=text.charCodeAt(i++);chr2=text.charCodeAt(i++);chr3=text.charCodeAt(i++);enc1=chr1>>2;enc2=(chr1&3)<<4|chr2>>4;enc3=(chr2&15)<<2|chr3>>6;enc4=chr3&63;if(isNaN(chr2)){enc3=enc4=64}else if(isNaN(chr3)){enc4=64}result+=keyStr.charAt(enc1)+keyStr.charAt(enc2)+keyStr.charAt(enc3)+keyStr.charAt(enc4);chr1=chr2=chr3="";enc1=enc2=enc3=enc4=""}while(i<text.length);return result};var mergeHeaders=function(){var result=arguments[0];for(var i=1;i<arguments.length;i++){var currentHeaders=arguments[i];for(var header in currentHeaders){if(currentHeaders.hasOwnProperty(header)){result[header]=currentHeaders[header]}}}return result};var ajax=function(method,url,options,callback){if(typeof options==="function"){callback=options;options={}}options.cache=options.cache||false;options.data=options.data||{};options.headers=options.headers||{};options.jsonp=options.jsonp||false;options.async=options.async===undefined?true:options.async;var headers=mergeHeaders({accept:"*/*","content-type":"application/x-www-form-urlencoded;charset=UTF-8"},ajax.headers,options.headers);var payload;if(headers["content-type"]==="application/json"){payload=JSON.stringify(options.data)}else{payload=encodeUsingUrlEncoding(options.data)}if(method==="GET"){var queryString=[];if(payload){queryString.push(payload);payload=null}if(!options.cache){queryString.push("_="+(new Date).getTime())}if(options.jsonp){queryString.push("callback="+options.jsonp);queryString.push("jsonp="+options.jsonp)}queryString=queryString.join("&");if(queryString.length>1){if(url.indexOf("?")>-1){url+="&"+queryString}else{url+="?"+queryString}}if(options.jsonp){var head=document.getElementsByTagName("head")[0];var script=document.createElement("script");script.type="text/javascript";script.src=url;head.appendChild(script);return}}getXhr((function(err,xhr){if(err)return callback(err);xhr.open(method,url,options.async);for(var header in headers){if(headers.hasOwnProperty(header)){xhr.setRequestHeader(header,headers[header])}}xhr.onreadystatechange=function(){if(xhr.readyState===4){var data=xhr.responseText||"";if(!callback){return}callback(xhr.status,{text:function(){return data},json:function(){try{return JSON.parse(data)}catch(e){f.error("Can not parse JSON. URL: "+url);return{}}}})}};xhr.send(payload)}))};var http={authBasic:function(username,password){ajax.headers["Authorization"]="Basic "+base64(username+":"+password)},connect:function(url,options,callback){return ajax("CONNECT",url,options,callback)},del:function(url,options,callback){return ajax("DELETE",url,options,callback)},get:function(url,options,callback){return ajax("GET",url,options,callback)},head:function(url,options,callback){return ajax("HEAD",url,options,callback)},headers:function(headers){ajax.headers=headers||{}},isAllowed:function(url,verb,callback){this.options(url,(function(status,data){callback(data.text().indexOf(verb)!==-1)}))},options:function(url,options,callback){return ajax("OPTIONS",url,options,callback)},patch:function(url,options,callback){return ajax("PATCH",url,options,callback)},post:function(url,options,callback){return ajax("POST",url,options,callback)},put:function(url,options,callback){return ajax("PUT",url,options,callback)},trace:function(url,options,callback){return ajax("TRACE",url,options,callback)}};var methode=options.type?options.type.toLowerCase():"get";http[methode](options.url,options,(function(status,data){if(status===200||status===0&&data.text()){options.success(data.json(),status,null)}else{options.error(data.text(),status,null)}}))}var _cookie={create:function(name,value,minutes,domain){var expires;if(minutes){var date=new Date;date.setTime(date.getTime()+minutes*60*1e3);expires="; expires="+date.toGMTString()}else expires="";domain=domain?"domain="+domain+";":"";document.cookie=name+"="+value+expires+";"+domain+"path=/"},read:function(name){var nameEQ=name+"=";var ca=document.cookie.split(";");for(var i=0;i<ca.length;i++){var c=ca[i];while(c.charAt(0)==" ")c=c.substring(1,c.length);if(c.indexOf(nameEQ)===0)return c.substring(nameEQ.length,c.length)}return null},remove:function(name){this.create(name,"",-1)}};var cookie_noop={create:function(name,value,minutes,domain){},read:function(name){return null},remove:function(name){}};var f={extend:$?$.extend:_extend,deepExtend:_deepExtend,each:$?$.each:_each,ajax:$?$.ajax:typeof document!=="undefined"?_ajax:function(){},cookie:typeof document!=="undefined"?_cookie:cookie_noop,detectLanguage:detectLanguage,escape:_escape,log:function(str){if(o.debug&&typeof console!=="undefined")console.log(str)},error:function(str){if(typeof console!=="undefined")console.error(str)},getCountyIndexOfLng:function(lng){var lng_index=0;if(lng==="nb-NO"||lng==="nn-NO"||lng==="nb-no"||lng==="nn-no")lng_index=1;return lng_index},toLanguages:function(lng,fallbackLng){var log=this.log;fallbackLng=fallbackLng||o.fallbackLng;if(typeof fallbackLng==="string")fallbackLng=[fallbackLng];function applyCase(l){var ret=l;if(typeof l==="string"&&l.indexOf("-")>-1){var parts=l.split("-");ret=o.lowerCaseLng?parts[0].toLowerCase()+"-"+parts[1].toLowerCase():parts[0].toLowerCase()+"-"+parts[1].toUpperCase()}else{ret=o.lowerCaseLng?l.toLowerCase():l}return ret}var languages=[];var whitelist=o.lngWhitelist||false;var addLanguage=function(language){if(!whitelist||whitelist.indexOf(language)>-1){languages.push(language)}else{log("rejecting non-whitelisted language: "+language)}};if(typeof lng==="string"&&lng.indexOf("-")>-1){var parts=lng.split("-");if(o.load!=="unspecific")addLanguage(applyCase(lng));if(o.load!=="current")addLanguage(applyCase(parts[this.getCountyIndexOfLng(lng)]))}else{addLanguage(applyCase(lng))}for(var i=0;i<fallbackLng.length;i++){if(languages.indexOf(fallbackLng[i])===-1&&fallbackLng[i])languages.push(applyCase(fallbackLng[i]))}return languages},regexEscape:function(str){return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")},regexReplacementEscape:function(strOrFn){if(typeof strOrFn==="string"){return strOrFn.replace(/\$/g,"$$$$")}else{return strOrFn}},localStorage:{setItem:function(key,value){if(window.localStorage){try{window.localStorage.setItem(key,value)}catch(e){f.log('failed to set value for key "'+key+'" to localStorage.')}}},getItem:function(key,value){if(window.localStorage){try{return window.localStorage.getItem(key,value)}catch(e){f.log('failed to get value for key "'+key+'" from localStorage.');return undefined}}}}};function init(options,cb){if(typeof options==="function"){cb=options;options={}}options=options||{};f.extend(o,options);delete o.fixLng;if(o.functions){delete o.functions;f.extend(f,options.functions)}if(typeof o.ns=="string"){o.ns={namespaces:[o.ns],defaultNs:o.ns}}if(typeof o.fallbackNS=="string"){o.fallbackNS=[o.fallbackNS]}if(typeof o.fallbackLng=="string"||typeof o.fallbackLng=="boolean"){o.fallbackLng=[o.fallbackLng]}o.interpolationPrefixEscaped=f.regexEscape(o.interpolationPrefix);o.interpolationSuffixEscaped=f.regexEscape(o.interpolationSuffix);if(!o.lng)o.lng=f.detectLanguage();languages=f.toLanguages(o.lng);currentLng=languages[0];f.log("currentLng set to: "+currentLng);if(o.useCookie&&f.cookie.read(o.cookieName)!==currentLng){f.cookie.create(o.cookieName,currentLng,o.cookieExpirationTime,o.cookieDomain)}if(o.detectLngFromLocalStorage&&typeof document!=="undefined"&&window.localStorage){f.localStorage.setItem("i18next_lng",currentLng)}var lngTranslate=translate;if(options.fixLng){lngTranslate=function(key,options){options=options||{};options.lng=options.lng||lngTranslate.lng;return translate(key,options)};lngTranslate.lng=currentLng}pluralExtensions.setCurrentLng(currentLng);if($&&o.setJqueryExt){addJqueryFunct&&addJqueryFunct()}else{addJqueryLikeFunctionality&&addJqueryLikeFunctionality()}var deferred;if($&&$.Deferred){deferred=$.Deferred()}if(o.resStore){resStore=o.resStore;initialized=true;if(cb)cb(null,lngTranslate);if(deferred)deferred.resolve(lngTranslate);if(deferred)return deferred.promise();return}var lngsToLoad=f.toLanguages(o.lng);if(typeof o.preload==="string")o.preload=[o.preload];for(var i=0,l=o.preload.length;i<l;i++){var pres=f.toLanguages(o.preload[i]);for(var y=0,len=pres.length;y<len;y++){if(lngsToLoad.indexOf(pres[y])<0){lngsToLoad.push(pres[y])}}}i18n.sync.load(lngsToLoad,o,(function(err,store){resStore=store;initialized=true;if(cb)cb(err,lngTranslate);if(deferred)(!err?deferred.resolve:deferred.reject)(err||lngTranslate)}));if(deferred)return deferred.promise()}function isInitialized(){return initialized}function preload(lngs,cb){if(typeof lngs==="string")lngs=[lngs];for(var i=0,l=lngs.length;i<l;i++){if(o.preload.indexOf(lngs[i])<0){o.preload.push(lngs[i])}}return init(cb)}function addResourceBundle(lng,ns,resources,deep,overwrite){if(typeof ns!=="string"){resources=ns;ns=o.ns.defaultNs}else if(o.ns.namespaces.indexOf(ns)<0){o.ns.namespaces.push(ns)}resStore[lng]=resStore[lng]||{};resStore[lng][ns]=resStore[lng][ns]||{};if(deep){f.deepExtend(resStore[lng][ns],resources,overwrite)}else{f.extend(resStore[lng][ns],resources)}if(o.useLocalStorage){sync._storeLocal(resStore)}}function hasResourceBundle(lng,ns){if(typeof ns!=="string"){ns=o.ns.defaultNs}resStore[lng]=resStore[lng]||{};var res=resStore[lng][ns]||{};var hasValues=false;for(var prop in res){if(res.hasOwnProperty(prop)){hasValues=true}}return hasValues}function getResourceBundle(lng,ns){if(typeof ns!=="string"){ns=o.ns.defaultNs}resStore[lng]=resStore[lng]||{};return f.extend({},resStore[lng][ns])}function removeResourceBundle(lng,ns){if(typeof ns!=="string"){ns=o.ns.defaultNs}resStore[lng]=resStore[lng]||{};resStore[lng][ns]={};if(o.useLocalStorage){sync._storeLocal(resStore)}}function addResource(lng,ns,key,value){if(typeof ns!=="string"){resource=ns;ns=o.ns.defaultNs}else if(o.ns.namespaces.indexOf(ns)<0){o.ns.namespaces.push(ns)}resStore[lng]=resStore[lng]||{};resStore[lng][ns]=resStore[lng][ns]||{};var keys=key.split(o.keyseparator);var x=0;var node=resStore[lng][ns];while(keys[x]){if(x==keys.length-1)node[keys[x]]=value;else{if(node[keys[x]]==null)node[keys[x]]={};node=node[keys[x]]}x++}if(o.useLocalStorage){sync._storeLocal(resStore)}}function addResources(lng,ns,resources){if(typeof ns!=="string"){resources=ns;ns=o.ns.defaultNs}else if(o.ns.namespaces.indexOf(ns)<0){o.ns.namespaces.push(ns)}for(var m in resources){if(typeof resources[m]==="string")addResource(lng,ns,m,resources[m])}}function setDefaultNamespace(ns){o.ns.defaultNs=ns}function loadNamespace(namespace,cb){loadNamespaces([namespace],cb)}function loadNamespaces(namespaces,cb){var opts={dynamicLoad:o.dynamicLoad,resGetPath:o.resGetPath,getAsync:o.getAsync,customLoad:o.customLoad,ns:{namespaces:namespaces,defaultNs:""}};var lngsToLoad=f.toLanguages(o.lng);if(typeof o.preload==="string")o.preload=[o.preload];for(var i=0,l=o.preload.length;i<l;i++){var pres=f.toLanguages(o.preload[i]);for(var y=0,len=pres.length;y<len;y++){if(lngsToLoad.indexOf(pres[y])<0){lngsToLoad.push(pres[y])}}}var lngNeedLoad=[];for(var a=0,lenA=lngsToLoad.length;a<lenA;a++){var needLoad=false;var resSet=resStore[lngsToLoad[a]];if(resSet){for(var b=0,lenB=namespaces.length;b<lenB;b++){if(!resSet[namespaces[b]])needLoad=true}}else{needLoad=true}if(needLoad)lngNeedLoad.push(lngsToLoad[a])}if(lngNeedLoad.length){i18n.sync._fetch(lngNeedLoad,opts,(function(err,store){var todo=namespaces.length*lngNeedLoad.length;f.each(namespaces,(function(nsIndex,nsValue){if(o.ns.namespaces.indexOf(nsValue)<0){o.ns.namespaces.push(nsValue)}f.each(lngNeedLoad,(function(lngIndex,lngValue){resStore[lngValue]=resStore[lngValue]||{};resStore[lngValue][nsValue]=store[lngValue][nsValue];todo--;if(todo===0&&cb){if(o.useLocalStorage)i18n.sync._storeLocal(resStore);cb()}}))}))}))}else{if(cb)cb()}}function setLng(lng,options,cb){if(typeof options==="function"){cb=options;options={}}else if(!options){options={}}options.lng=lng;return init(options,cb)}function lng(){return currentLng}function dir(){var rtlLangs=["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam"];if(rtlLangs.some((function(lang){return new RegExp("^"+lang).test(currentLng)}))){return"rtl"}return"ltr"}function reload(cb){resStore={};setLng(currentLng,cb)}function noConflict(){window.i18next=window.i18n;if(conflictReference){window.i18n=conflictReference}else{delete window.i18n}}function addJqueryFunct(){$.t=$.t||translate;function parse(ele,key,options){if(key.length===0)return;var attr="text";if(key.indexOf("[")===0){var parts=key.split("]");key=parts[1];attr=parts[0].substr(1,parts[0].length-1)}if(key.indexOf(";")===key.length-1){key=key.substr(0,key.length-2)}var optionsToUse;if(attr==="html"){optionsToUse=o.defaultValueFromContent?$.extend({defaultValue:ele.html()},options):options;ele.html($.t(key,optionsToUse))}else if(attr==="text"){optionsToUse=o.defaultValueFromContent?$.extend({defaultValue:ele.text()},options):options;ele.text($.t(key,optionsToUse))}else if(attr==="prepend"){optionsToUse=o.defaultValueFromContent?$.extend({defaultValue:ele.html()},options):options;ele.prepend($.t(key,optionsToUse))}else if(attr==="append"){optionsToUse=o.defaultValueFromContent?$.extend({defaultValue:ele.html()},options):options;ele.append($.t(key,optionsToUse))}else if(attr.indexOf("data-")===0){var dataAttr=attr.substr("data-".length);optionsToUse=o.defaultValueFromContent?$.extend({defaultValue:ele.data(dataAttr)},options):options;var translated=$.t(key,optionsToUse);ele.data(dataAttr,translated);ele.attr(attr,translated)}else{optionsToUse=o.defaultValueFromContent?$.extend({defaultValue:ele.attr(attr)},options):options;ele.attr(attr,$.t(key,optionsToUse))}}function localize(ele,options){var key=ele.attr(o.selectorAttr);if(!key&&typeof key!=="undefined"&&key!==false)key=ele.text()||ele.val();if(!key)return;var target=ele,targetSelector=ele.data("i18n-target");if(targetSelector){target=ele.find(targetSelector)||ele}if(!options&&o.useDataAttrOptions===true){options=ele.data("i18n-options")}options=options||{};if(key.indexOf(";")>=0){var keys=key.split(";");$.each(keys,(function(m,k){if(k!=="")parse(target,k,options)}))}else{parse(target,key,options)}if(o.useDataAttrOptions===true){var clone=$.extend({lng:"non",lngs:[],_origLng:"non"},options);delete clone.lng;delete clone.lngs;delete clone._origLng;ele.data("i18n-options",clone)}}$.fn.i18n=function(options){return this.each((function(){localize($(this),options);var elements=$(this).find("["+o.selectorAttr+"]");elements.each((function(){localize($(this),options)}))}))}}function addJqueryLikeFunctionality(){function parse(ele,key,options){if(key.length===0)return;var attr="text";if(key.indexOf("[")===0){var parts=key.split("]");key=parts[1];attr=parts[0].substr(1,parts[0].length-1)}if(key.indexOf(";")===key.length-1){key=key.substr(0,key.length-2)}if(attr==="html"){ele.innerHTML=translate(key,options)}else if(attr==="text"){ele.textContent=translate(key,options)}else if(attr==="prepend"){ele.insertAdjacentHTML(translate(key,options),"afterbegin")}else if(attr==="append"){ele.insertAdjacentHTML(translate(key,options),"beforeend")}else{ele.setAttribute(attr,translate(key,options))}}function localize(ele,options){var key=ele.getAttribute(o.selectorAttr);if(!key&&typeof key!=="undefined"&&key!==false)key=ele.textContent||ele.value;if(!key)return;var target=ele,targetSelector=ele.getAttribute("i18n-target");if(targetSelector){target=ele.querySelector(targetSelector)||ele}if(key.indexOf(";")>=0){var keys=key.split(";"),index=0,length=keys.length;for(;index<length;index++){if(keys[index]!=="")parse(target,keys[index],options)}}else{parse(target,key,options)}}i18n.translateObject=function(object,options){var elements=object.querySelectorAll("["+o.selectorAttr+"]");var index=0,length=elements.length;for(;index<length;index++){localize(elements[index],options)}}}function applyReplacement(str,replacementHash,nestedKey,options){if(!str)return str;options=options||replacementHash;if(str.indexOf(options.interpolationPrefix||o.interpolationPrefix)<0)return str;var prefix=options.interpolationPrefix?f.regexEscape(options.interpolationPrefix):o.interpolationPrefixEscaped,suffix=options.interpolationSuffix?f.regexEscape(options.interpolationSuffix):o.interpolationSuffixEscaped,keyseparator=options.keyseparator||o.keyseparator;var hash=replacementHash.replace&&typeof replacementHash.replace==="object"?replacementHash.replace:replacementHash;var replacementRegex=new RegExp([prefix,"(.+?)","(HTML)?",suffix].join(""),"g");var escapeInterpolation=options.escapeInterpolation||o.escapeInterpolation;return str.replace(replacementRegex,(function(wholeMatch,keyMatch,htmlMatched){var objectMatching=hash;var keyLeaf=keyMatch;while(keyLeaf.indexOf(keyseparator)>=0&&typeof objectMatching==="object"&&objectMatching){var propName=keyLeaf.slice(0,keyLeaf.indexOf(keyseparator));keyLeaf=keyLeaf.slice(keyLeaf.indexOf(keyseparator)+1);objectMatching=objectMatching[propName]}if(objectMatching&&typeof objectMatching==="object"&&objectMatching.hasOwnProperty(keyLeaf)){var value=objectMatching[keyLeaf];if(escapeInterpolation&&!htmlMatched){return f.escape(objectMatching[keyLeaf])}else{return objectMatching[keyLeaf]}}else{return wholeMatch}}))}f.applyReplacement=applyReplacement;function applyReuse(translated,options){var comma=",";var options_open="{";var options_close="}";var opts=f.extend({},options);delete opts.postProcess;delete opts.isFallbackLookup;while(translated.indexOf(o.reusePrefix)!=-1){replacementCounter++;if(replacementCounter>o.maxRecursion){break}var index_of_opening=translated.lastIndexOf(o.reusePrefix);var index_of_end_of_closing=translated.indexOf(o.reuseSuffix,index_of_opening)+o.reuseSuffix.length;var token=translated.substring(index_of_opening,index_of_end_of_closing);var token_without_symbols=token.replace(o.reusePrefix,"").replace(o.reuseSuffix,"");if(index_of_end_of_closing<=index_of_opening){f.error("there is an missing closing in following translation value",translated);return""}if(token_without_symbols.indexOf(comma)!=-1){var index_of_token_end_of_closing=token_without_symbols.indexOf(comma);if(token_without_symbols.indexOf(options_open,index_of_token_end_of_closing)!=-1&&token_without_symbols.indexOf(options_close,index_of_token_end_of_closing)!=-1){var index_of_opts_opening=token_without_symbols.indexOf(options_open,index_of_token_end_of_closing);var index_of_opts_end_of_closing=token_without_symbols.indexOf(options_close,index_of_opts_opening)+options_close.length;try{opts=f.extend(opts,JSON.parse(token_without_symbols.substring(index_of_opts_opening,index_of_opts_end_of_closing)));token_without_symbols=token_without_symbols.substring(0,index_of_token_end_of_closing)}catch(e){}}}var translated_token=_translate(token_without_symbols,opts);translated=translated.replace(token,f.regexReplacementEscape(translated_token))}return translated}function hasContext(options){return options.context&&(typeof options.context=="string"||typeof options.context=="number")}function needsPlural(options,lng){return options.count!==undefined&&typeof options.count!="string"}function needsIndefiniteArticle(options){return options.indefinite_article!==undefined&&typeof options.indefinite_article!="string"&&options.indefinite_article}function exists(key,options){options=options||{};var notFound=_getDefaultValue(key,options),found=_find(key,options);return found!==undefined||found===notFound}function translate(key,options){if(!initialized){f.log("i18next not finished initialization. you might have called t function before loading resources finished.");if(options&&options.defaultValue){return options.detaultValue}else{return""}}replacementCounter=0;return _translate.apply(null,arguments)}function _getDefaultValue(key,options){return options.defaultValue!==undefined?options.defaultValue:key}function _injectSprintfProcessor(){var values=[];for(var i=1;i<arguments.length;i++){values.push(arguments[i])}return{postProcess:"sprintf",sprintf:values}}function _translate(potentialKeys,options){if(typeof options!=="undefined"&&typeof options!=="object"){if(o.shortcutFunction==="sprintf"){options=_injectSprintfProcessor.apply(null,arguments)}else if(o.shortcutFunction==="defaultValue"){options={defaultValue:options}}}else{options=options||{}}if(typeof o.defaultVariables==="object"){options=f.extend({},o.defaultVariables,options)}if(potentialKeys===undefined||potentialKeys===null||potentialKeys==="")return"";if(typeof potentialKeys==="number"){potentialKeys=String(potentialKeys)}if(typeof potentialKeys==="string"){potentialKeys=[potentialKeys]}var key=potentialKeys[0];if(potentialKeys.length>1){for(var i=0;i<potentialKeys.length;i++){key=potentialKeys[i];if(exists(key,options)){break}}}var notFound=_getDefaultValue(key,options),found=_find(key,options),nsseparator=options.nsseparator||o.nsseparator,lngs=options.lng?f.toLanguages(options.lng,options.fallbackLng):languages,ns=options.ns||o.ns.defaultNs,parts;if(key.indexOf(nsseparator)>-1){parts=key.split(nsseparator);ns=parts[0];key=parts[1]}if(found===undefined&&o.sendMissing&&typeof o.missingKeyHandler==="function"){if(options.lng){o.missingKeyHandler(lngs[0],ns,key,notFound,lngs)}else{o.missingKeyHandler(o.lng,ns,key,notFound,lngs)}}var postProcessorsToApply,postProcessor,j;if(typeof o.postProcess==="string"&&o.postProcess!==""){postProcessorsToApply=[o.postProcess]}else if(typeof o.postProcess==="array"||typeof o.postProcess==="object"){postProcessorsToApply=o.postProcess}else{postProcessorsToApply=[]}if(typeof options.postProcess==="string"&&options.postProcess!==""){postProcessorsToApply=postProcessorsToApply.concat([options.postProcess])}else if(typeof options.postProcess==="array"||typeof options.postProcess==="object"){postProcessorsToApply=postProcessorsToApply.concat(options.postProcess)}if(found!==undefined&&postProcessorsToApply.length){for(j=0;j<postProcessorsToApply.length;j+=1){postProcessor=postProcessorsToApply[j];if(postProcessors[postProcessor]){found=postProcessors[postProcessor](found,key,options)}}}var splitNotFound=notFound;if(notFound.indexOf(nsseparator)>-1){parts=notFound.split(nsseparator);splitNotFound=parts[1]}if(splitNotFound===key&&o.parseMissingKey){notFound=o.parseMissingKey(notFound)}if(found===undefined){notFound=applyReplacement(notFound,options);notFound=applyReuse(notFound,options);if(postProcessorsToApply.length){found=_getDefaultValue(key,options);for(j=0;j<postProcessorsToApply.length;j+=1){postProcessor=postProcessorsToApply[j];if(postProcessors[postProcessor]){found=postProcessors[postProcessor](found,key,options)}}}}return found!==undefined?found:notFound}function _find(key,options){options=options||{};var optionWithoutCount,translated,notFound=_getDefaultValue(key,options),lngs=languages;if(!resStore){return notFound}if(lngs[0].toLowerCase()==="cimode")return notFound;if(options.lngs)lngs=options.lngs;if(options.lng){lngs=f.toLanguages(options.lng,options.fallbackLng);if(!resStore[lngs[0]]){var oldAsync=o.getAsync;o.getAsync=false;i18n.sync.load(lngs,o,(function(err,store){f.extend(resStore,store);o.getAsync=oldAsync}))}}var ns=options.ns||o.ns.defaultNs;var nsseparator=options.nsseparator||o.nsseparator;if(key.indexOf(nsseparator)>-1){var parts=key.split(nsseparator);ns=parts[0];key=parts[1]}if(hasContext(options)){optionWithoutCount=f.extend({},options);delete optionWithoutCount.context;optionWithoutCount.defaultValue=o.contextNotFound;var contextKey=ns+nsseparator+key+"_"+options.context;translated=translate(contextKey,optionWithoutCount);if(translated!=o.contextNotFound){return applyReplacement(translated,{context:options.context})}}if(needsPlural(options,lngs[0])){optionWithoutCount=f.extend({lngs:[lngs[0]]},options);delete optionWithoutCount.count;optionWithoutCount._origLng=optionWithoutCount._origLng||optionWithoutCount.lng||lngs[0];delete optionWithoutCount.lng;optionWithoutCount.defaultValue=o.pluralNotFound;var pluralKey;if(!pluralExtensions.needsPlural(lngs[0],options.count)){pluralKey=ns+nsseparator+key}else{pluralKey=ns+nsseparator+key+o.pluralSuffix;var pluralExtension=pluralExtensions.get(lngs[0],options.count);if(pluralExtension>=0){pluralKey=pluralKey+"_"+pluralExtension}else if(pluralExtension===1){pluralKey=ns+nsseparator+key}}translated=translate(pluralKey,optionWithoutCount);if(translated!=o.pluralNotFound){return applyReplacement(translated,{count:options.count,interpolationPrefix:options.interpolationPrefix,interpolationSuffix:options.interpolationSuffix})}else if(lngs.length>1){var clone=lngs.slice();clone.shift();options=f.extend(options,{lngs:clone});options._origLng=optionWithoutCount._origLng;delete options.lng;translated=translate(ns+nsseparator+key,options);if(translated!=o.pluralNotFound)return translated}else{optionWithoutCount.lng=optionWithoutCount._origLng;delete optionWithoutCount._origLng;translated=translate(ns+nsseparator+key,optionWithoutCount);return applyReplacement(translated,{count:options.count,interpolationPrefix:options.interpolationPrefix,interpolationSuffix:options.interpolationSuffix})}}if(needsIndefiniteArticle(options)){var optionsWithoutIndef=f.extend({},options);delete optionsWithoutIndef.indefinite_article;optionsWithoutIndef.defaultValue=o.indefiniteNotFound;var indefiniteKey=ns+nsseparator+key+(options.count&&!needsPlural(options,lngs[0])||!options.count?o.indefiniteSuffix:"");translated=translate(indefiniteKey,optionsWithoutIndef);if(translated!=o.indefiniteNotFound){return translated}}var found;var keyseparator=options.keyseparator||o.keyseparator;var keys=key.split(keyseparator);for(var i=0,len=lngs.length;i<len;i++){if(found!==undefined)break;var l=lngs[i];var x=0;var value=resStore[l]&&resStore[l][ns];while(keys[x]){value=value&&value[keys[x]];x++}if(value!==undefined&&(!o.showKeyIfEmpty||value!=="")){var valueType=Object.prototype.toString.apply(value);if(typeof value==="string"){value=applyReplacement(value,options);value=applyReuse(value,options)}else if(valueType==="[object Array]"&&!o.returnObjectTrees&&!options.returnObjectTrees){value=value.join("\n");value=applyReplacement(value,options);value=applyReuse(value,options)}else if(value===null&&o.fallbackOnNull===true){value=undefined}else if(value!==null){if(!o.returnObjectTrees&&!options.returnObjectTrees){if(o.objectTreeKeyHandler&&typeof o.objectTreeKeyHandler=="function"){value=o.objectTreeKeyHandler(key,value,l,ns,options)}else{value="key '"+ns+":"+key+" ("+l+")' "+"returned an object instead of string.";f.log(value)}}else if(valueType!=="[object Number]"&&valueType!=="[object Function]"&&valueType!=="[object RegExp]"){var copy=valueType==="[object Array]"?[]:{};f.each(value,(function(m){copy[m]=_translate(ns+nsseparator+key+keyseparator+m,options)}));value=copy}}if(typeof value==="string"&&value.trim()===""&&o.fallbackOnEmpty===true)value=undefined;found=value}}if(found===undefined&&!options.isFallbackLookup&&(o.fallbackToDefaultNS===true||o.fallbackNS&&o.fallbackNS.length>0)){options.isFallbackLookup=true;if(o.fallbackNS.length){for(var y=0,lenY=o.fallbackNS.length;y<lenY;y++){found=_find(o.fallbackNS[y]+nsseparator+key,options);if(found||found===""&&o.fallbackOnEmpty===false){var foundValue=found.indexOf(nsseparator)>-1?found.split(nsseparator)[1]:found,notFoundValue=notFound.indexOf(nsseparator)>-1?notFound.split(nsseparator)[1]:notFound;if(foundValue!==notFoundValue)break}}}else{options.ns=o.ns.defaultNs;found=_find(key,options)}options.isFallbackLookup=false}return found}function detectLanguage(){var detectedLng;var whitelist=o.lngWhitelist||[];var userLngChoices=[];if(typeof window!=="undefined"){(function(){var query=window.location.search.substring(1);var params=query.split("&");for(var i=0;i<params.length;i++){var pos=params[i].indexOf("=");if(pos>0){var key=params[i].substring(0,pos);if(key==o.detectLngQS){userLngChoices.push(params[i].substring(pos+1))}}}})()}if(o.useCookie&&typeof document!=="undefined"){var c=f.cookie.read(o.cookieName);if(c)userLngChoices.push(c)}if(o.detectLngFromLocalStorage&&typeof window!=="undefined"&&window.localStorage){var lang=f.localStorage.getItem("i18next_lng");if(lang){userLngChoices.push(lang)}}if(typeof navigator!=="undefined"){if(navigator.languages){for(var i=0;i<navigator.languages.length;i++){userLngChoices.push(navigator.languages[i])}}if(navigator.userLanguage){userLngChoices.push(navigator.userLanguage)}if(navigator.language){userLngChoices.push(navigator.language)}}(function(){for(var i=0;i<userLngChoices.length;i++){var lng=userLngChoices[i];if(lng.indexOf("-")>-1){var parts=lng.split("-");lng=o.lowerCaseLng?parts[0].toLowerCase()+"-"+parts[1].toLowerCase():parts[0].toLowerCase()+"-"+parts[1].toUpperCase()}if(whitelist.length===0||whitelist.indexOf(lng)>-1){detectedLng=lng;break}}})();if(!detectedLng){detectedLng=o.fallbackLng[0]}return detectedLng}var _rules=[["ach","Acholi",[1,2],1],["af","Afrikaans",[1,2],2],["ak","Akan",[1,2],1],["am","Amharic",[1,2],1],["an","Aragonese",[1,2],2],["ar","Arabic",[0,1,2,3,11,100],5],["arn","Mapudungun",[1,2],1],["ast","Asturian",[1,2],2],["ay","AymarÃ¡",[1],3],["az","Azerbaijani",[1,2],2],["be","Belarusian",[1,2,5],4],["bg","Bulgarian",[1,2],2],["bn","Bengali",[1,2],2],["bo","Tibetan",[1],3],["br","Breton",[1,2],1],["bs","Bosnian",[1,2,5],4],["ca","Catalan",[1,2],2],["cgg","Chiga",[1],3],["cs","Czech",[1,2,5],6],["csb","Kashubian",[1,2,5],7],["cy","Welsh",[1,2,3,8],8],["da","Danish",[1,2],2],["de","German",[1,2],2],["dev","Development Fallback",[1,2],2],["dz","Dzongkha",[1],3],["el","Greek",[1,2],2],["en","English",[1,2],2],["eo","Esperanto",[1,2],2],["es","Spanish",[1,2],2],["es_ar","Argentinean Spanish",[1,2],2],["et","Estonian",[1,2],2],["eu","Basque",[1,2],2],["fa","Persian",[1],3],["fi","Finnish",[1,2],2],["fil","Filipino",[1,2],1],["fo","Faroese",[1,2],2],["fr","French",[1,2],9],["fur","Friulian",[1,2],2],["fy","Frisian",[1,2],2],["ga","Irish",[1,2,3,7,11],10],["gd","Scottish Gaelic",[1,2,3,20],11],["gl","Galician",[1,2],2],["gu","Gujarati",[1,2],2],["gun","Gun",[1,2],1],["ha","Hausa",[1,2],2],["he","Hebrew",[1,2],2],["hi","Hindi",[1,2],2],["hr","Croatian",[1,2,5],4],["hu","Hungarian",[1,2],2],["hy","Armenian",[1,2],2],["ia","Interlingua",[1,2],2],["id","Indonesian",[1],3],["is","Icelandic",[1,2],12],["it","Italian",[1,2],2],["ja","Japanese",[1],3],["jbo","Lojban",[1],3],["jv","Javanese",[0,1],13],["ka","Georgian",[1],3],["kk","Kazakh",[1],3],["km","Khmer",[1],3],["kn","Kannada",[1,2],2],["ko","Korean",[1],3],["ku","Kurdish",[1,2],2],["kw","Cornish",[1,2,3,4],14],["ky","Kyrgyz",[1],3],["lb","Letzeburgesch",[1,2],2],["ln","Lingala",[1,2],1],["lo","Lao",[1],3],["lt","Lithuanian",[1,2,10],15],["lv","Latvian",[1,2,0],16],["mai","Maithili",[1,2],2],["mfe","Mauritian Creole",[1,2],1],["mg","Malagasy",[1,2],1],["mi","Maori",[1,2],1],["mk","Macedonian",[1,2],17],["ml","Malayalam",[1,2],2],["mn","Mongolian",[1,2],2],["mnk","Mandinka",[0,1,2],18],["mr","Marathi",[1,2],2],["ms","Malay",[1],3],["mt","Maltese",[1,2,11,20],19],["nah","Nahuatl",[1,2],2],["nap","Neapolitan",[1,2],2],["nb","Norwegian Bokmal",[1,2],2],["ne","Nepali",[1,2],2],["nl","Dutch",[1,2],2],["nn","Norwegian Nynorsk",[1,2],2],["no","Norwegian",[1,2],2],["nso","Northern Sotho",[1,2],2],["oc","Occitan",[1,2],1],["or","Oriya",[2,1],2],["pa","Punjabi",[1,2],2],["pap","Papiamento",[1,2],2],["pl","Polish",[1,2,5],7],["pms","Piemontese",[1,2],2],["ps","Pashto",[1,2],2],["pt","Portuguese",[1,2],2],["pt_br","Brazilian Portuguese",[1,2],2],["rm","Romansh",[1,2],2],["ro","Romanian",[1,2,20],20],["ru","Russian",[1,2,5],4],["sah","Yakut",[1],3],["sco","Scots",[1,2],2],["se","Northern Sami",[1,2],2],["si","Sinhala",[1,2],2],["sk","Slovak",[1,2,5],6],["sl","Slovenian",[5,1,2,3],21],["so","Somali",[1,2],2],["son","Songhay",[1,2],2],["sq","Albanian",[1,2],2],["sr","Serbian",[1,2,5],4],["su","Sundanese",[1],3],["sv","Swedish",[1,2],2],["sw","Swahili",[1,2],2],["ta","Tamil",[1,2],2],["te","Telugu",[1,2],2],["tg","Tajik",[1,2],1],["th","Thai",[1],3],["ti","Tigrinya",[1,2],1],["tk","Turkmen",[1,2],2],["tr","Turkish",[1,2],1],["tt","Tatar",[1],3],["ug","Uyghur",[1],3],["uk","Ukrainian",[1,2,5],4],["ur","Urdu",[1,2],2],["uz","Uzbek",[1,2],1],["vi","Vietnamese",[1],3],["wa","Walloon",[1,2],1],["wo","Wolof",[1],3],["yo","Yoruba",[1,2],2],["zh","Chinese",[1],3]];var _rulesPluralsTypes={1:function(n){return Number(n>1)},2:function(n){return Number(n!=1)},3:function(n){return 0},4:function(n){return Number(n%10==1&&n%100!=11?0:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2)},5:function(n){return Number(n===0?0:n==1?1:n==2?2:n%100>=3&&n%100<=10?3:n%100>=11?4:5)},6:function(n){return Number(n==1?0:n>=2&&n<=4?1:2)},7:function(n){return Number(n==1?0:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2)},8:function(n){return Number(n==1?0:n==2?1:n!=8&&n!=11?2:3)},9:function(n){return Number(n>=2)},10:function(n){return Number(n==1?0:n==2?1:n<7?2:n<11?3:4)},11:function(n){return Number(n==1||n==11?0:n==2||n==12?1:n>2&&n<20?2:3)},12:function(n){return Number(n%10!=1||n%100==11)},13:function(n){return Number(n!==0)},14:function(n){return Number(n==1?0:n==2?1:n==3?2:3)},15:function(n){return Number(n%10==1&&n%100!=11?0:n%10>=2&&(n%100<10||n%100>=20)?1:2)},16:function(n){return Number(n%10==1&&n%100!=11?0:n!==0?1:2)},17:function(n){return Number(n==1||n%10==1?0:1)},18:function(n){return Number(n==0?0:n==1?1:2)},19:function(n){return Number(n==1?0:n===0||n%100>1&&n%100<11?1:n%100>10&&n%100<20?2:3)},20:function(n){return Number(n==1?0:n===0||n%100>0&&n%100<20?1:2)},21:function(n){return Number(n%100==1?1:n%100==2?2:n%100==3||n%100==4?3:0)}};var pluralExtensions={rules:function(){var l,rules={};for(l=_rules.length;l--;){rules[_rules[l][0]]={name:_rules[l][1],numbers:_rules[l][2],plurals:_rulesPluralsTypes[_rules[l][3]]}}return rules}(),addRule:function(lng,obj){pluralExtensions.rules[lng]=obj},setCurrentLng:function(lng){if(!pluralExtensions.currentRule||pluralExtensions.currentRule.lng!==lng){var parts=lng.split("-");pluralExtensions.currentRule={lng:lng,rule:pluralExtensions.rules[parts[0]]}}},needsPlural:function(lng,count){var parts=lng.split("-");var ext;if(pluralExtensions.currentRule&&pluralExtensions.currentRule.lng===lng){ext=pluralExtensions.currentRule.rule}else{ext=pluralExtensions.rules[parts[f.getCountyIndexOfLng(lng)]]}if(ext&&ext.numbers.length<=1){return false}else{return this.get(lng,count)!==1}},get:function(lng,count){var parts=lng.split("-");function getResult(l,c){var ext;if(pluralExtensions.currentRule&&pluralExtensions.currentRule.lng===lng){ext=pluralExtensions.currentRule.rule}else{ext=pluralExtensions.rules[l]}if(ext){var i;if(ext.noAbs){i=ext.plurals(c)}else{i=ext.plurals(Math.abs(c))}var number=ext.numbers[i];if(ext.numbers.length===2&&ext.numbers[0]===1){if(number===2){number=-1}else if(number===1){number=1}}return number}else{return c===1?"1":"-1"}}return getResult(parts[f.getCountyIndexOfLng(lng)],count)}};var postProcessors={};var addPostProcessor=function(name,fc){postProcessors[name]=fc};var sprintf=function(){function get_type(variable){return Object.prototype.toString.call(variable).slice(8,-1).toLowerCase()}function str_repeat(input,multiplier){for(var output=[];multiplier>0;output[--multiplier]=input){}return output.join("")}var str_format=function(){if(!str_format.cache.hasOwnProperty(arguments[0])){str_format.cache[arguments[0]]=str_format.parse(arguments[0])}return str_format.format.call(null,str_format.cache[arguments[0]],arguments)};str_format.format=function(parse_tree,argv){var cursor=1,tree_length=parse_tree.length,node_type="",arg,output=[],i,k,match,pad,pad_character,pad_length;for(i=0;i<tree_length;i++){node_type=get_type(parse_tree[i]);if(node_type==="string"){output.push(parse_tree[i])}else if(node_type==="array"){match=parse_tree[i];if(match[2]){arg=argv[cursor];for(k=0;k<match[2].length;k++){if(!arg.hasOwnProperty(match[2][k])){throw sprintf('[sprintf] property "%s" does not exist',match[2][k])}arg=arg[match[2][k]]}}else if(match[1]){arg=argv[match[1]]}else{arg=argv[cursor++]}if(/[^s]/.test(match[8])&&get_type(arg)!="number"){throw sprintf("[sprintf] expecting number but found %s",get_type(arg))}switch(match[8]){case"b":arg=arg.toString(2);break;case"c":arg=String.fromCharCode(arg);break;case"d":arg=parseInt(arg,10);break;case"e":arg=match[7]?arg.toExponential(match[7]):arg.toExponential();break;case"f":arg=match[7]?parseFloat(arg).toFixed(match[7]):parseFloat(arg);break;case"o":arg=arg.toString(8);break;case"s":arg=(arg=String(arg))&&match[7]?arg.substring(0,match[7]):arg;break;case"u":arg=Math.abs(arg);break;case"x":arg=arg.toString(16);break;case"X":arg=arg.toString(16).toUpperCase();break}arg=/[def]/.test(match[8])&&match[3]&&arg>=0?"+"+arg:arg;pad_character=match[4]?match[4]=="0"?"0":match[4].charAt(1):" ";pad_length=match[6]-String(arg).length;pad=match[6]?str_repeat(pad_character,pad_length):"";output.push(match[5]?arg+pad:pad+arg)}}return output.join("")};str_format.cache={};str_format.parse=function(fmt){var _fmt=fmt,match=[],parse_tree=[],arg_names=0;while(_fmt){if((match=/^[^\x25]+/.exec(_fmt))!==null){parse_tree.push(match[0])}else if((match=/^\x25{2}/.exec(_fmt))!==null){parse_tree.push("%")}else if((match=/^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(_fmt))!==null){if(match[2]){arg_names|=1;var field_list=[],replacement_field=match[2],field_match=[];if((field_match=/^([a-z_][a-z_\d]*)/i.exec(replacement_field))!==null){field_list.push(field_match[1]);while((replacement_field=replacement_field.substring(field_match[0].length))!==""){if((field_match=/^\.([a-z_][a-z_\d]*)/i.exec(replacement_field))!==null){field_list.push(field_match[1])}else if((field_match=/^\[(\d+)\]/.exec(replacement_field))!==null){field_list.push(field_match[1])}else{throw"[sprintf] huh?"}}}else{throw"[sprintf] huh?"}match[2]=field_list}else{arg_names|=2}if(arg_names===3){throw"[sprintf] mixing positional and named placeholders is not (yet) supported"}parse_tree.push(match)}else{throw"[sprintf] huh?"}_fmt=_fmt.substring(match[0].length)}return parse_tree};return str_format}();var vsprintf=function(fmt,argv){argv.unshift(fmt);return sprintf.apply(null,argv)};addPostProcessor("sprintf",(function(val,key,opts){if(!opts.sprintf)return val;if(Object.prototype.toString.apply(opts.sprintf)==="[object Array]"){return vsprintf(val,opts.sprintf)}else if(typeof opts.sprintf==="object"){return sprintf(val,opts.sprintf)}return val}));i18n.init=init;i18n.isInitialized=isInitialized;i18n.setLng=setLng;i18n.preload=preload;i18n.addResourceBundle=addResourceBundle;i18n.hasResourceBundle=hasResourceBundle;i18n.getResourceBundle=getResourceBundle;i18n.addResource=addResource;i18n.addResources=addResources;i18n.removeResourceBundle=removeResourceBundle;i18n.loadNamespace=loadNamespace;i18n.loadNamespaces=loadNamespaces;i18n.setDefaultNamespace=setDefaultNamespace;i18n.t=translate;i18n.translate=translate;i18n.exists=exists;i18n.detectLanguage=f.detectLanguage;i18n.pluralExtensions=pluralExtensions;i18n.sync=sync;i18n.functions=f;i18n.lng=lng;i18n.dir=dir;i18n.addPostProcessor=addPostProcessor;i18n.applyReplacement=f.applyReplacement;i18n.options=o;i18n.noConflict=noConflict})(exports)}));var data$w={en:{opening_hours:{pretty:{off:"closed",SH:"school holidays",PH:"public holidays"}}},de:{opening_hours:{texts:{"unexpected token":'Unerwartetes Zeichen: "__token__" Das bedeutet, dass die Syntax an dieser Stelle nicht erkannt werden konnte.',"no string":"Der Wert (erster Parameter) ist kein String",nothing:"Der Wert enthÃ¤lt nichts, was ausgewertet werden kÃ¶nnte.","nothing useful":"Diese Regel enthÃ¤lt nichts nÃ¼tzliches. Bitte entferne diese leere Regel.","combine rules":'Getrennte Regeln erkannt welche jeweils nur aus einer Zeit Bereichsdefinition bestehen. Diese Regeln sollten mittels "__ok__" zu einer Regel kombiniert werden.',"value ends with token":'Der Wert endet mit "__token__". Bitte ergÃ¤nze den Wert nach "__token__" oder lÃ¶sche "__token__".',"programmers joke":"Kann es sein, dass du ein Programmierer bist und das HinzufÃ¼gen eines Semikolons nach jedem Statement ist zwanghaft ;) ? Es ist so, dass das Semikolon in der opening_hours-Syntax als Trenner fÃ¼r Regeln definiert ist. Bitte verzichte an dieser Stelle auf ein Semikolon.","interpreted as year":'Die Zahl __number__ wird als Jahr interpretiert. Vermutlich ist das nicht beabsichtigt. Uhrzeiten werden als "12:00" angegeben.',"rule before fallback empty":"Die Regel vor der Fallback-Regel enthÃ¤lt nichts nÃ¼tzliches","hour min separator":'Bitte benutze ":" als Stunden/Minuten-Trenner',"warnings severity":'Der Parameter optional_conf_parm["warnings_severity"] muss eine ganze Zahl zwischen (einschlieÃŸlich) 0 und (einschlieÃŸlich) 7 sein. Gegeben: __severity__, erwartet: Eine der Zahlen: __allowed__.',"optional conf parm type":"Der optional_conf_parm Parameter hat einen unbekannten Typ. Gegeben: __given__","conf param tag key missing":'Der optional_conf_parm["tag_key"] fehlt, ist aber notwendig wegen optional_conf_parm["map_value"].',"conf param mode invalid":'Der optional_conf_parm["mode"]-Parameter ist eine ungÃ¼ltige Zahl. Gegeben: __given__, erwartet: Eine der Zahlen: __allowed__.',"conf param unknown type":'Der optional_conf_parm["__key__"] Parameter hat einen unbekannten Typ. Gegeben: __given__, erwartet: __expected__.',"library bug":'Bei der Auswertung des Wertes "__value__" ist ein Fehler aufgetreten. Bitte melde diesen Fehler oder korrigiere diesen mittels eines Pull Requests oder Patches: __url__.__message__',"library bug PR only":'Bei der Auswertung des Wertes "__value__" ist ein Fehler aufgetreten. Du kannst dies korrigieren, indem du das Problem lÃ¶st und in Form eines Pull Requests oder Patches zum Projekt beitrÃ¤gst: __url__.__message__',"use multi":'Du hast __count__ __part2__ Einzelne Regeln kÃ¶nnen mit ";" getrennt werden.',"selector multi 2a":"__what__ in einer Regel benutzt. Du kannst nur einen davon je Regel verwenden","selector multi 2b":'nicht verbundene __what__ in einer Regel benutzt. Das ist vermutlich ein Fehler. Gleiche Selektoren kÃ¶nnen (und sollten) immer zusammen und durch Kommas getrennt geschrieben werden. Beispiel fÃ¼r Zeitspannen "12:00-13:00,15:00-18:00". Beispiel fÃ¼r Wochentage "Mo-We,Fr".',"selector state":"Status-SchlÃ¼sselwÃ¶rter (offen, geschlossen)",comments:"Kommentare",months:"Monate",weekdays:"Wochentage",ranges:"Zeitspannen","default state":"Diese Regel, welche den Standard-Status (d.h. geschlossen) fÃ¼r alle folgenden Regeln Ã¤ndert, ist nicht die erste Regel. Diese Regel Ã¼berschreibt alle vorherigen Regeln. Es kann legitim sein, den Standard-Status z.B. auf geÃ¶ffnet festzulegen und dann nur die Zeiten, zu denen geschlossen ist, anzugeben.",vague:'Diese Regel ist nicht sehr aussagekrÃ¤ftig, da kein Zeit Selektor angegeben wurde. Ein Zeit Selektor ist die Komponente die angibt, zu welcher Tageszeit ein Objekt geÃ¶ffnet hat, zum Beispiel "10:00-19:00". Bitte fÃ¼ge eine Zeitangabe oder einen Kommentar hinzu, um dies zu verbessern.',"empty comment":'Du hast einen leeren Kommentar verwendet." Bitte schreibe entweder einen Kommentar-Text oder benutze stattdessen das SchlÃ¼sselwort "unknown".',separator_for_readability:"Du hast das optionale Symbol <separator_for_readability> an der falschen Stelle benutzt. Bitte lies die Syntax-Spezifikation um zu sehen, wo es verwendet werden kann, oder entferne es.","strange 24/7":'Du hast 24/7 in einer Art verwendet, welche wahrscheinlich nicht als "24 Stunden, 7 Tage die Woche" interpretiert wird. Der Richtigkeit halber solltest du "open" oder "closed" fÃ¼r diese Regel verwenden und dann die Ausnahmen angeben um das selbe Ziel zu erreichen. So ist es klarer â€“ zum Beispiel "open; Mo 12:00-14:00 off".',"public holiday":'Es wurde keine Regel fÃ¼r "PH" (feiertags) angegeben. Dies ist nicht sehr aussagekrÃ¤ftig.__part2__ Bitte fÃ¼ge die Regel "PH off" an, wenn die Einrichtung an allen Feiertagen geschlossen ist oder schreibe "Sa,Su,PH 12:00-16:00" um auszudrÃ¼cken, dass Samstags, Sonntags und feiertags von 12:00-16:00 geÃ¶ffnet ist. Falls die Einrichtung tÃ¤glich und an Feiertagen geÃ¶ffnet ist, kann dies explizit mittels "Mo-Su,PH" ausgedrÃ¼ckt werden. Wenn du dir im Unklaren bist, versuche die Ã–ffnungszeit zu klÃ¤ren. Falls das nicht mÃ¶glich ist, lass die Angabe weg und ignoriere diese Warnung.',"public holiday part2":' Leider ist der "tag key" (beispielsweise "opening_hours", oder "lit") in opening_hours.js nicht bekannt. Diese Warnung betrifft nur die Keys: __keys__. Falls deine Angabe nicht fÃ¼r einen dieser ist, ignoriere bitte folgenden Hinweis:',"additional_rule_separator not used after time wrapping midnight":'Diese Regel Ã¼berschreibt Teile der vorherigen Regel. Der Grund dafÃ¼r ist, dass normale Regeln auf den ganzen Tag zutreffen und alle Definitionen von vorhergehenden Regeln fÃ¼r diesen Tag Ã¼berschreiben. Du kannst diese Regel als additive Regel deklarieren indem du ein "," anstelle des Ã¼blichen ";" fÃ¼r diese Regel verwendest. Beachte das die Ãœberschreibung auch gewÃ¼nscht sein kann und in so einem Fall diese Warnung ignoriert werden kann.',"additional rule which evaluates to closed":'Diese Regel wird als geschlossen ausgewertet aber wurde als additive Regel angegeben. Sie sollte als normale Regel mittels ";" definiert sein. Siehe https://wiki.openstreetmap.org/wiki/DE:Key:opening_hours/specification#explain:rule_modifier:closed.',switched:'Der Selektor "__first__" wurde fÃ¼r eine bessere Lesbarkeit und der VollstÃ¤ndigkeit halber mit "__second__" getauscht.',"no colon after":'Bitte Benutze kein ":" nach dem Token __token__.',"number -5 to 5":"Zahl zwischen -5 und 5 (auÃŸer 0) erwartet.","one weekday constraint":"Du kannst hÃ¶chstens einen beschrÃ¤nkten Wochentag in einer Monats-Spanne verwenden","range constrained weekdays":"Du kannst keine Wochentags-Spanne als BeschrÃ¤nkung in einer Monats-Spanne verwenden",expected:'"__symbol__" erwartet.',"range zero":'Du kannst keine __type__-Spanne mit Periode "0" verwenden.',"period one year+":'Bitte verwende keine __type__-Spannen mit Periode "1". Wenn du ausdrÃ¼cken willst, das eine Einrichtung ab einem bestimmten Jahr immer offen ist, benutze bitte "<year>+".',"period one":'Bitte verwende keine __type__-Spannen mit Periode "1".',"month 31":"Die Tagesangabe fÃ¼r __month__ muss zwischen 1 und 31 liegen.","month 30":"Der Monat __month__ hat keine 31 Tage. Der letzte Tag von __month__ ist Tag 30.","month feb":'"Der Monat __month__ hat entweder 28 oder 29 Tage (Schaltjahre)."',"point in time":"Erwarte Bindestrich (-) oder offenes Ende (+) in der Zeitspanne __calc__. Um mit Zeitpunkten zu arbeiten, muss der Modus fÃ¼r  __libraryname__ umgestellt werden. Vielleicht falsches OSM-tag verwendet?",calculation:"Berechnung","time range continue":"Die Zeitspanne geht nicht wie erwartet weiter","period continue":'Die Zeitspannen-Periode geht nicht wie erwartet weiter. Beispiel "/01:30".',"time range mode":'__libraryname__ wurde im "Zeitspannen-Modus" aufgerufen. Zeitpunkt gefunden.',"point in time mode":'__libraryname__ wurde im "Zeitpunkt-Modus" aufgerufen. Zeitspanne gefunden.',"outside current day":"Zeitspanne beginnt auÃŸerhalb des aktuellen Tages","two midnights":"Zeitspanne welche mehrmals Mitternacht beinhaltet wird nicht unterstÃ¼tzt","without minutes":'Zeitspanne ohne Minutenangabe angegeben. Das ist nicht sehr eindeutig! Bitte verwende stattdessen folgende Syntax "__syntax__".',"outside day":"Die Zeitspanne beginnt auÃŸerhalb des aktuellen Tages","zero calculation":'Das HinzufÃ¼gen von 0 in einer variablen Zeitberechnung Ã¤ndert die variable Zeit nicht. Bitte entferne die Zeitberechnung (Beispiel: "sunrise-(sunset-00:00)").',"calculation syntax":"Berechnung mit variabler Zeit hat nicht die korrekte Syntax",missing:'Fehlendes "__symbol__"',"(time)":"(Zeit)","bad range":"UngÃ¼ltige Zeitspanne: __from__-__to__","] or more numbers":'"]" oder weitere Zahlen erwartet.',"additional rule no sense":'Eine weitere Regel an dieser Stelle ergibt keinen Sinn. Benutze einfach ";" als Trenner fÃ¼r Regeln. Siehe https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification#explain:additional_rule_separator',"unexpected token weekday range":"Unerwartes Token in Tages-Spanne: __token__","max differ":"Es sollte keinen Grund geben, mehr als __maxdiffer__ Tage von einem __name__ abzuweichen. Wenn nÃ¶tig, teile uns dies bitte mit â€¦","adding 0":"Addition von 0 verÃ¤ndert das Datum nicht. Bitte weglassen.","unexpected token holiday":"Unerwarteter Token (in Feiertags-Auswertung): __token__","no holiday definition":"__name__ ist fÃ¼r das Land __cc__ nicht definiert.","no holiday definition state":"__name__ ist fÃ¼r das Land __cc__ und Bundesland __state__ nicht definiert.","no country code":"Der LÃ¤ndercode fehlt. Dieser wird benÃ¶tigt um die korrekten Feiertage zu bestimmen (siehe in der README wie dieser anzugeben ist)","no SH definition":"Die Schulferien __name__sind fÃ¼r das Jahr __year__ nicht definiert","movable no formula":"Der bewegliche Feiertag __name__ kann nicht berechnet werden. Bitte fÃ¼ge eine entsprechende Formel hinzu.","movable not in year":"Der bewegliche Feiertag __name__ plus __days__ Tage befindet sich nicht mehr im selben Jahr. Aktuell nicht unterstÃ¼tzt.","year range one year":'Eine Jahres-Spanne mit gleichem Jahr als Beginn und Ende ergibt keinen Sinn. Bitte entferne das Ende-Jahr. zum Beispiel: "__year__ May 23"',"year range reverse":"Eine Jahres-Spanne mit Beginn grÃ¶ÃŸer als Ende ergibt keinen Sinn. Bitte umdrehen.","year past":"Das Jahr liegt in der Vergangenheit.","unexpected token year range":"Unerwartetes Token in der Jahres-Spanne: __token__","week range reverse":"Du hast eine Wochen-Spanne in umgekehrter Reihenfolge oder mehrere Jahre umfassende angegeben. Dies ist aktuell nicht unterstÃ¼tzt.","week negative":"Du hast eine Kalenderwoche kleiner 1 angegeben. Korrekte Angaben sind 1-53.","week exceed":"Du hast eine Kalenderwoche grÃ¶ÃŸer als 53 angegeben. Korrekte Angaben sind 1-53.","week period less than 2":'Du hast eine Wochenperiode kleiner 2 angegeben. Wenn du die gesamte Spanne von __weekfrom__ bis __weekto__ angeben willst, lasse "/__period__" einfach weg.',"week period greater than 26":'Du hast eine Wochen-Periode grÃ¶ÃŸer als 26 angegeben. 26,5 ist die HÃ¤lfte des Maximums von 53 Wochen pro Jahr. Damit wÃ¼rde eine Periode grÃ¶ÃŸer als 26 nur einmal pro Jahr auftreten. Bitte gibt den Wochen-Selektor als "week __weekfrom__" an, wenn es das ist, was du ausdrÃ¼cken mÃ¶chtest.',"unexpected token week range":"Unerwartetes Token in Wochen-Spanne: __token__","unexpected token month range":"Unerwartetes Token in Monats-Spanne: __token__","day range reverse":"Zeitspanne in falscher Reihenfolge. Beginn ist grÃ¶ÃŸer als Ende.","open end":'Angegeben als "open end". SchlieÃŸzeit wurde geraten.',"date parameter needed":"Datumsparameter nÃ¶tig.","assuming ok for ko":'"__ko__" wird als "__ok__" interpretiert.',"please use ok for ko":'Bitte verwende "__ok__" anstelle von "__ko__".',"please use ok for similar looking ko":'Please use notation "__ok__" for "__ko__". Those characters look very similar but are not the same!',"rant degree sign used for zero":"Beachte das dies ein Gradzeichen ist, welches als (hochgestellte) Null missbraucht wurde. Eine hochgestellte Null ist in Unicode definiert (Â°) und wÃ¤re angebrachter/einheitlicher an dieser Stelle. Allerdings ist die Verwendung von nicht ASCII Ziffern nicht erlaubt.","please use English written ok for ko":'Bitte benutze die englische Schreibweise "__ok__" fÃ¼r "__ko__".',"please use English abbreviation ok for ko":'Bitte benutze die englische AbkÃ¼rzung "__ok__" fÃ¼r "__ko__".',"please use English abbreviation ok for so":'Bitte benutze die englische AbkÃ¼rzung "__ok__" fÃ¼r "__ko__". Beachte das Samstag in Polnisch gemeint sein kann.',"please use off for ko":'Bitte benutze "__ok__" fÃ¼r "__ko__". Beispiel: "Mo-Fr 08:00-12:00; Tu off".',"please use ok for workday":'"__ko__" wird als "__ok__" interpretiert. Werktag sollte nicht verwendet werden. Siehe https://wiki.openstreetmap.org/wiki/Talk:Key:opening_hours#need_syntax_for_holidays_and_workingdays',"omit hour keyword":'Bitte lasse "__ko__" weg oder verwende einen Doppelpunkt. Beispiel: "12:00-14:00".',"omit ko":'Bitte verzichte auf "__ko__".',"omit tag key":'Bitte lasse "__ko__" weg. Der Tag SchlÃ¼ssel darf nicht im Tag Wert sein.',"omit wrong keyword open end":'Bitte lasse "__ko__" weg. Falls du "open end" ausdrÃ¼cken mÃ¶chtest verwende bitte ein "+". Beispiel: "12:00+".',"assuming open end for ko":'"__ko__" wird als "__ok__" ("open end") interpretiert. Example: "12:00+".',"please use ok for uncertainty":'Bitte verwende "__ok__" fÃ¼r "__ko__". Falls der begrÃ¼ndete Verdacht der Ungewissheit vorliegt ziehe die Verwendung eines Kommentars in Betracht. Beispiel: 12:00-14:00 "only on sunshine".',"please use fallback rule":'Bitte verwende "__ok__" (Fallback Regel) fÃ¼r "__ko__". Beispiel: Mo-Fr 12:00-14:00; PH off || "nach Vereinbarung"',"please use ok for missing data":"Bitte verwende eine FIXME Notiz.","please use 24 hours time for ko":"Bitte verwende 24 Stunden Zeitangaben anstelle der veralteten 12 Stunden Variante. Falls die 12 Stunden Variante verwendet wird ist eventuelle eine Konvertierung notwendig.","please use restriction comment time for ko":'Es sieht so aus also mÃ¶chtest du zusÃ¤tzliche EinschrÃ¤nkungen fÃ¼r eine Ã–ffnungszeit geben. Falls sich dies nicht mit der Syntax ausdrÃ¼cken lÃ¤sst kÃ¶nnen Kommentare verwendet werden. ZusÃ¤tzlich sollte eventuell das SchlÃ¼sselwort `open` benutzt werden. Beispiel: open "Nur Frauen".',"please use ok for typographically correct":'Bitte verwende "__ok__" fÃ¼r "__ko__". Auch wenn "__ko__" typografisch korrekt ist, ist dies in der opening_hours Syntax nicht definiert. Korrekte Typographie sollte auf Anwendungsebene sichergestellt werden â€¦'},pretty:{off:"geschlossen",SH:"Schulferien",PH:"Feiertags"}}},eo:{opening_hours:{texts:{"assuming ok for ko":'"__ko__" estas interpretita kiel "__ok__".',"please use ok for ko":'Bonvolu uzi la esprimon "__ok__" anstataÅ­ "__ko__".',"please use English abbreviation ok for ko":'Bonvolu uzi la anglan mallongigon "__ok__" fÃ¼r "__ko__".'},pretty:{off:"fermita",SH:"lernejaj ferioj",PH:"festotagoj"}}},fi:{opening_hours:{pretty:{off:"suljettu",SH:"koululomat",PH:"lailliset vapaapÃ¤ivÃ¤t"}}},fr:{opening_hours:{texts:{"assuming ok for ko":'S\'il vous plaÃ®t utiliser "<ok>" pour "<ko>".',"please use ok for ko":'S\'il vous plaÃ®t utiliser "__ok__" pour "__ko__".',"please use English abbreviation ok for ko":'S\'il vous plaÃ®t utiliser l\'abrÃ©viation "__ok__" pour "__ko__".'},pretty:{off:"fermÃ©",SH:"vacances scolaires",PH:"vacances publiques"}}},nl:{opening_hours:{texts:{"please use English abbreviation ok for ko":'Neem de engelse afkorting "__ok__" voor "__ko__" alstublieft.'},pretty:{off:"gesloten",SH:"schoolvakantie",PH:"feestdagen"}}},ru:{opening_hours:{pretty:{off:"Ð·Ð°ÐºÑ€Ñ‹Ñ‚Ð¾",SH:"ÐºÐ°Ð½Ð¸ÐºÑƒÐ»Ñ‹",PH:"Ð¿Ñ€Ð°Ð·Ð´Ð½Ð¸Ðº"}}}};if(!i18next.isInitialized()){i18next.init({fallbackLng:"en",resStore:data$w,getAsync:true,useCookie:true})}else{for(var lang in data$w){i18next.addResourceBundle(lang,"opening_hours",data$w[lang]["opening_hours"],true)}}function index(value,nominatim_object,optional_conf_parm){var word_value_replacement={dawn:60*5+30,sunrise:60*6,sunset:60*18,dusk:60*18+30};var months=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];var weekdays=["Su","Mo","Tu","We","Th","Fr","Sa"];var string_to_token_map={su:[0,"weekday"],mo:[1,"weekday"],tu:[2,"weekday"],we:[3,"weekday"],th:[4,"weekday"],fr:[5,"weekday"],sa:[6,"weekday"],jan:[0,"month"],feb:[1,"month"],mar:[2,"month"],apr:[3,"month"],may:[4,"month"],jun:[5,"month"],jul:[6,"month"],aug:[7,"month"],sep:[8,"month"],oct:[9,"month"],nov:[10,"month"],dec:[11,"month"],day:["day","calcday"],days:["days","calcday"],sunrise:["sunrise","timevar"],sunset:["sunset","timevar"],dawn:["dawn","timevar"],dusk:["dusk","timevar"],easter:["easter","event"],week:["week","week"],open:["open","state"],closed:["closed","state"],off:["off","state"],unknown:["unknown","state"]};var default_prettify_conf={zero_pad_hour:true,one_zero_if_hour_zero:false,leave_off_closed:true,keyword_for_off_closed:"off",rule_sep_string:" ",print_semicolon:true,leave_weekday_sep_one_day_betw:true,sep_one_day_between:",",zero_pad_month_and_week_numbers:true,locale:"en"};var osm_tag_defaults={opening_hours:{mode:0,warn_for_PH_missing:true},collection_times:{mode:2},"opening_hours:.+":{mode:0},".+:opening_hours":{mode:0},".+:opening_hours:.+":{mode:0},smoking_hours:{mode:0},service_times:{mode:2},happy_hours:{mode:0},lit:{mode:0,map:{yes:'sunset-sunrise open "specified as yes: At night (unknown time schedule or daylight detection)"',automatic:'unknown "specified as automatic: When someone enters the way the lights are turned on."',no:'off "specified as no: There are no lights installed."',interval:'unknown "specified as interval"',limited:'unknown "specified as limited"'}}};var minutes_in_day=60*24;var msec_in_day=1e3*60*minutes_in_day;var library_name="opening_hours.js";var repository_url="https://github.com/opening-hours/"+library_name;var locale="en";if(typeof i18next==="object"){locale=i18next.lng()}var t=function(str,variables){if(typeof i18next==="object"&&typeof i18next.t==="function"&&typeof locale==="string"&&["de"].indexOf(locale)!==-1){var global_locale=i18next.lng();if(global_locale!==locale){i18next.setLng(locale)}var text=i18next.t("opening_hours:texts."+str,variables);if(global_locale!==locale){i18next.setLng(global_locale)}return text}var text=data$v[str];if(typeof text==="undefined"){text=str}return text.replace(/__([^_]*)__/g,(function(match,c){return typeof variables[c]!=="undefined"?variables[c]:match}))};var location_cc,location_state,lat,lon;if(typeof nominatim_object==="object"&&nominatim_object!==null){if(typeof nominatim_object.address==="object"){if(typeof nominatim_object.address.country_code==="string"){location_cc=nominatim_object.address.country_code}if(typeof nominatim_object.address.state==="string"){location_state=nominatim_object.address.state}else if(typeof nominatim_object.address.county==="string"){location_state=nominatim_object.address.county}}if(typeof nominatim_object.lon==="string"&&typeof nominatim_object.lat==="string"){lat=nominatim_object.lat;lon=nominatim_object.lon}}else if(nominatim_object===null){location_cc="de";location_state="Baden-WÃ¼rttemberg";lat="49.5400039";lon="9.7937133"}else if(typeof nominatim_object!=="undefined"){throw"The nominatim_object parameter is of unknown type."+" Given "+typeof nominatim_object+", expected object."}var warnings_severity=4;var oh_mode;var oh_map_value=false;var oh_key,oh_regex_key;if(typeof optional_conf_parm==="number"){oh_mode=optional_conf_parm}else if(typeof optional_conf_parm==="object"){if(typeof optional_conf_parm["locale"]==="string"){locale=optional_conf_parm["locale"].split("-")[0]}if(checkOptionalConfParm("mode","number")){oh_mode=optional_conf_parm["mode"]}if(checkOptionalConfParm("warnings_severity","number")){warnings_severity=optional_conf_parm["warnings_severity"];if([0,1,2,3,4,5,6,7].indexOf(warnings_severity)===-1){throw t("warnings severity",{severity:warnings_severity,allowed:"[ 0, 1, 2, 3, 4, 5, 6, 7 ]"})}}if(checkOptionalConfParm("tag_key","string")){oh_key=optional_conf_parm["tag_key"]}if(checkOptionalConfParm("map_value","boolean")){oh_map_value=optional_conf_parm.map_value}}else if(typeof optional_conf_parm!=="undefined"){throw t("optional conf parm type",{given:typeof optional_conf_parm})}if(typeof oh_key==="string"){oh_regex_key=getRegexKeyForKeyFromOsmDefaults(oh_key);if(oh_map_value&&typeof osm_tag_defaults[oh_regex_key]==="object"&&typeof osm_tag_defaults[oh_regex_key]["map"]==="object"&&typeof osm_tag_defaults[oh_regex_key]["map"][value]==="string"){value=osm_tag_defaults[oh_regex_key]["map"][value]}}else if(oh_map_value){throw t("conf param tag key missing")}if(typeof oh_mode==="undefined"){if(typeof oh_key==="string"){if(typeof osm_tag_defaults[oh_regex_key]["mode"]==="number"){oh_mode=osm_tag_defaults[oh_regex_key]["mode"]}else{oh_mode=0}}else{oh_mode=0}}else if([0,1,2].indexOf(oh_mode)===-1){throw t("conf param mode invalid",{given:oh_mode,allowed:"[ 0, 1, 2 ]"})}if(typeof value!=="string"){throw t("no string")}if(/^(?:\s*;?)+$/.test(value)){throw t("nothing")}var parsing_warnings=[];var done_with_warnings=false;var done_with_selector_reordering=false;var done_with_selector_reordering_warnings=false;var tokens=tokenize(value);var prettified_value="";var week_stable=true;var rules=[];var rule_infos={};var new_tokens=[];for(var nrule=0;nrule<tokens.length;nrule++){if(tokens[nrule][0].length===0){parsing_warnings.push([nrule,-1,t("nothing useful")+(nrule===tokens.length-1&&nrule>0&&!tokens[nrule][1]?" "+t("programmers joke"):"")]);continue}var continue_at=0;var next_rule_is_additional=false;do{if(continue_at===tokens[nrule][0].length){break}var rule={time:[],wraptime:[],weekday:[],holiday:[],week:[],month:[],monthday:[],year:[],date:[],fallback:tokens[nrule][1],additional:continue_at?true:false,meaning:true,unknown:false,comment:undefined,build_from_token_rule:undefined};rule.build_from_token_rule=[nrule,continue_at,new_tokens.length];continue_at=parseGroup(tokens[nrule][0],continue_at,rule,nrule);if(typeof continue_at==="object"){continue_at=continue_at[0]}else{continue_at=0}new_tokens.push([tokens[nrule][0].slice(rule.build_from_token_rule[1],continue_at===0?tokens[nrule][0].length:continue_at),tokens[nrule][1],tokens[nrule][2]]);if(next_rule_is_additional&&new_tokens.length>1){new_tokens[new_tokens.length-1][0].unshift(new_tokens[new_tokens.length-2][0].pop())}next_rule_is_additional=continue_at===0?false:true;var optimal_selector_order=["year","holiday","month","monthday","week","weekday"];optimal_selector_order.forEach((function(element){if(rule[element].length>0){rule.date.push(rule[element]);rule[element]=[]}}));rules.push(rule);if(rule.wraptime.length>0){var wrapselectors={time:rule.wraptime,date:[],meaning:rule.meaning,unknown:rule.unknown,comment:rule.comment,wrapped:true,build_from_token_rule:rule.build_from_token_rule};for(var dselg=0;dselg<rule.date.length;dselg++){wrapselectors.date.push([]);for(var dsel=0;dsel<rule.date[dselg].length;dsel++){wrapselectors.date[wrapselectors.date.length-1].push(generateDateShifter(rule.date[dselg][dsel],-msec_in_day))}}rules.push(wrapselectors)}}while(continue_at)}function getRegexKeyForKeyFromOsmDefaults(key){var regex_key;var exact_match=false;Object.keys(osm_tag_defaults).forEach((function(osm_key){if(exact_match===true){return}if(key===osm_key){regex_key=osm_key;exact_match=true}else if(new RegExp(osm_key).test(key)){regex_key=osm_key}}));return regex_key}function checkOptionalConfParm(key,expected_type){if(typeof optional_conf_parm[key]===expected_type){return true}else if(typeof optional_conf_parm[key]!=="undefined"){throw t("conf param unknown type",{key:key,given:typeof optional_conf_parm[key],expected:expected_type})}return false}function formatWarnErrorMessage(nrule,at,message,tokens_to_use){if(typeof tokens_to_use==="undefined"){tokens_to_use=tokens}if(typeof nrule==="number"){var pos=0;if(nrule===-1){pos=value.length-at}else{if(typeof tokens_to_use[nrule][0][at]==="undefined"){if(typeof tokens_to_use[nrule][0]&&at===-1){pos=value.length;if(typeof tokens_to_use[nrule+1]==="object"&&typeof tokens_to_use[nrule+1][2]==="number"){pos-=tokens_to_use[nrule+1][2]}else if(typeof tokens_to_use[nrule][2]==="number"){pos-=tokens_to_use[nrule][2]}}else{formatLibraryBugMessage("Bug in warning generation code which could not determine the exact position of the warning or error in value.");pos=value.length;if(typeof tokens_to_use[nrule][2]==="number"){pos-=tokens_to_use[nrule][2];console.warn("Last token for rule: "+JSON.stringify(tokens_to_use[nrule]));console.log(value.substring(0,pos)+" <--- ("+message+")");console.log("\n")}{console.warn("tokens_to_use[nrule][2] is undefined. This is ok if nrule is the last rule.")}}}else{pos=value.length;if(typeof tokens_to_use[nrule][0][at+1]==="object"){pos-=tokens_to_use[nrule][0][at+1][2]}else if(typeof tokens_to_use[nrule][2]==="number"){pos-=tokens_to_use[nrule][2]}}}return value.substring(0,pos)+" <--- ("+message+")"}else if(typeof nrule==="string"){return nrule.substring(0,at)+" <--- ("+message+")"}}function formatLibraryBugMessage(message,text_template){if(typeof message==="undefined"){message=""}else{message=" "+message}if(typeof text_template!=="string"){text_template="library bug"}message=t(text_template,{value:value,url:repository_url,message:message});console.error(message);return message}function tokenize(value){var all_tokens=[];var curr_rule_tokens=[];var last_rule_fallback_terminated=false;while(value!==""){var tmp=value.match(/^([a-z]{2,})\b((?:[.]| before| after)?)/i);var token_from_map=undefined;if(tmp&&tmp[2]===""){token_from_map=string_to_token_map[tmp[1].toLowerCase()]}if(typeof token_from_map==="object"){curr_rule_tokens.push(token_from_map.concat([value.length]));value=value.substr(tmp[1].length)}else if(tmp=value.match(/^\s+/)){value=value.substr(tmp[0].length)}else if(tmp=value.match(/^24\/7/)){curr_rule_tokens.push([tmp[0],tmp[0],value.length]);value=value.substr(tmp[0].length)}else if(/^;/.test(value)){all_tokens.push([curr_rule_tokens,last_rule_fallback_terminated,value.length]);value=value.substr(1);curr_rule_tokens=[];last_rule_fallback_terminated=false}else if(/^[:.]/.test(value)){if(value[0]==="."&&!done_with_warnings){parsing_warnings.push([-1,value.length-1,t("hour min separator")])}curr_rule_tokens.push([":","timesep",value.length]);value=value.substr(1)}else if(tmp=value.match(/^(?:PH|SH)/i)){curr_rule_tokens.push([tmp[0].toUpperCase(),"holiday",value.length]);value=value.substr(2)}else if(tmp=value.match(/^[Â°\u2070-\u209F\u00B2\u00B3\u00B9]{1,2}/)){var unicode_code_point_to_digit={176:0,8304:0,185:1,178:2,179:3};var regular_number=tmp[0].split("").map((function(ch){var code_point=ch.charCodeAt(0);if(typeof unicode_code_point_to_digit[code_point]==="number"){return unicode_code_point_to_digit[code_point]}else if(8308<=code_point&&code_point<=8313){return code_point-8304}else if(8320<=code_point&&code_point<=8329){return code_point-8320}})).join("");var ok="";if(curr_rule_tokens.length>0&&matchTokens(curr_rule_tokens,curr_rule_tokens.length-1,"number")){ok+=":"}ok+=regular_number;if(!done_with_warnings){for(var i=0;i<=tmp[0].length;i++){if(value.charCodeAt(i)===176){parsing_warnings.push([-1,value.length-(1+i),t("rant degree sign used for zero")])}}parsing_warnings.push([-1,value.length-tmp[0].length,t("please use ok for ko",{ko:tmp[0],ok:ok})])}value=ok+value.substr(tmp[0].length)}else if(tmp=value.match(/^(&|_|â†’|â€“|âˆ’|â€”|ãƒ¼|=|Â·|Ã¶ffnungszeit(?:en)?:?|opening_hours\s*=|\?|~|ï½ž|ï¼š|always (?:open|closed)|24x7|24 hours 7 days a week|24 hours|7 ?days(?:(?: a |\/)week)?|7j?\/7|all days?|every day|(?:bis|till?|-|â€“)? ?(?:open ?end|late)|(?:(?:one )?day (?:before|after) )?(?:school|public) holidays?|days?\b|Ð´Ð¾|Ñ€Ð¼|Ð°Ð¼|jours fÃ©riÃ©s|on work days?|sonntags?|(?:nur |an )?sonn-?(?:(?: und |\/)feiertag(?:s|en?)?)?|(?:an )?feiertag(?:s|en?)?|(?:nach|on|by) (?:appointments?|vereinbarung|absprache)|p\.m\.|a\.m\.|[_a-zÃ¤Ã¶ÃŸÃ Ã¡Ã©Ã¸ÄÄ›Ã­ÃºÃ½Å™ÐŸÐ½Ð’ÑÐ¾]+\b|Ã |Ã¡|mo|tu|we|th|fr|sa|su|jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.?)/i)){var correct_val=returnCorrectWordOrToken(tmp[1].toLowerCase(),value.length);if(typeof correct_val==="object"){curr_rule_tokens.push([correct_val[0],correct_val[1],value.length]);value=value.substr(tmp[0].length)}else if(typeof correct_val==="string"){if(correct_val==="am"||correct_val==="pm"){var hours_token_at=curr_rule_tokens.length-1;var hours_token;if(hours_token_at>=0){if(hours_token_at-2>=0&&matchTokens(curr_rule_tokens,hours_token_at-2,"number","timesep","number")){hours_token_at-=2;hours_token=curr_rule_tokens[hours_token_at]}else if(matchTokens(curr_rule_tokens,hours_token_at,"number")){hours_token=curr_rule_tokens[hours_token_at]}if(typeof hours_token==="object"){if(correct_val==="pm"&&hours_token[0]<12){hours_token[0]+=12}if(correct_val==="am"&&hours_token[0]===12){hours_token[0]=0}curr_rule_tokens[hours_token_at]=hours_token}}correct_val=""}var correct_tokens=tokenize(correct_val)[0];if(correct_tokens[1]===true){throw formatLibraryBugMessage()}for(var i=0;i<correct_tokens[0].length;i++){curr_rule_tokens.push([correct_tokens[0][i][0],correct_tokens[0][i][1],value.length])}value=value.substr(tmp[0].length)}else{curr_rule_tokens.push([value[0].toLowerCase(),value[0].toLowerCase(),value.length-1]);value=value.substr(1)}if(typeof tmp[2]==="string"&&tmp[2]!==""&&!done_with_warnings){parsing_warnings.push([-1,value.length,t("omit ko",{ko:tmp[2]})])}}else if(tmp=value.match(/^(\d+)(?:([.])([^\d]))?/)){if(Number(tmp[1])>1900){curr_rule_tokens.push([Number(tmp[1]),"year",value.length]);if(Number(tmp[1])>=2100)parsing_warnings.push([-1,value.length-1,t("interpreted as year",{number:Number(tmp[1])})])}else{curr_rule_tokens.push([Number(tmp[1]),"number",value.length])}value=value.substr(tmp[1].length+(typeof tmp[2]==="string"?tmp[2].length:0));if(typeof tmp[2]==="string"&&tmp[2]!==""&&!done_with_warnings){parsing_warnings.push([-1,value.length,t("omit ko",{ko:tmp[2]})])}}else if(/^\|\|/.test(value)){if(curr_rule_tokens.length===0){throw formatWarnErrorMessage(-1,value.length-2,t("rule before fallback empty"))}all_tokens.push([curr_rule_tokens,last_rule_fallback_terminated,value.length]);curr_rule_tokens=[];value=value.substr(2);last_rule_fallback_terminated=true}else if(tmp=value.match(/^"([^"]+)"/)){curr_rule_tokens.push([tmp[1],"comment",value.length]);value=value.substr(tmp[0].length)}else if(tmp=value.match(/^(["'â€žâ€œâ€šâ€˜â€™Â«ã€Œã€Ž])([^"'â€œâ€â€˜â€™Â»ã€ã€;|]*)(["'â€â€œâ€˜â€™Â»ã€ã€])/)){for(var pos=1;pos<=3;pos+=2){var correct_val=returnCorrectWordOrToken(tmp[pos],value.length-(pos===3?tmp[1].length+tmp[2].length:0));if(typeof correct_val!=="string"&&tmp[pos]!=='"'){throw formatLibraryBugMessage("A character for error tolerance was allowed in the regular expression"+" but is not covered by word_error_correction"+" which is needed to format a proper message for the user.")}}curr_rule_tokens.push([tmp[2],"comment",value.length]);value=value.substr(tmp[0].length)}else if(/^(?:â£|\s)/.test(value)){value=value.substr(1)}else{curr_rule_tokens.push([value[0].toLowerCase(),value[0].toLowerCase(),value.length]);value=value.substr(1)}}all_tokens.push([curr_rule_tokens,last_rule_fallback_terminated]);return all_tokens}function returnCorrectWordOrToken(word,value_length){var correctWordOrToken;var token_from_map=string_to_token_map[word];if(typeof token_from_map==="object"){return token_from_map}Object.keys(data$u).forEach((function(comment){if(correctWordOrToken){return}Object.keys(data$u[comment]).forEach((function(old_val){if(correctWordOrToken){return}if(new RegExp("^"+old_val+"$").test(word)){var val=data$u[comment][old_val];if(!done_with_warnings){parsing_warnings.push([-1,value_length-word.length,t(comment,{ko:word,ok:val})])}correctWordOrToken=val}}))}));return correctWordOrToken}function getWarnings(it){if(warnings_severity<4){return[]}if(!done_with_warnings&&typeof it==="object"){var wide_range_selector_order=["year","month","week","holiday"];var small_range_selector_order=["weekday","time","24/7","state","comment"];var used_selectors=[];var used_selectors_types_array=[];var has_token={};for(var nrule=0;nrule<new_tokens.length;nrule++){if(new_tokens[nrule][0].length===0)continue;var selector_start_end_type=[0,0,undefined];used_selectors[nrule]={};used_selectors_types_array[nrule]=[];do{selector_start_end_type=getSelectorRange(new_tokens[nrule][0],selector_start_end_type[1]);for(var token_pos=0;token_pos<=selector_start_end_type[1];token_pos++){if(typeof new_tokens[nrule][0][token_pos]==="object"&&new_tokens[nrule][0][token_pos][0]==="PH"){has_token["PH"]=true}}if(selector_start_end_type[0]===selector_start_end_type[1]&&new_tokens[nrule][0][selector_start_end_type[0]][0]==="24/7"){has_token["24/7"]=true}if(typeof used_selectors[nrule][selector_start_end_type[2]]!=="object"){used_selectors[nrule][selector_start_end_type[2]]=[selector_start_end_type[1]]}else{used_selectors[nrule][selector_start_end_type[2]].push(selector_start_end_type[1])}used_selectors_types_array[nrule].push(selector_start_end_type[2]);selector_start_end_type[1]++}while(selector_start_end_type[1]<new_tokens[nrule][0].length)}for(var nrule=0;nrule<used_selectors.length;nrule++){Object.keys(used_selectors[nrule]).forEach((function(selector_type){if(used_selectors[nrule][selector_type].length>1){parsing_warnings.push([nrule,used_selectors[nrule][selector_type][used_selectors[nrule][selector_type].length-1],t("use multi",{count:used_selectors[nrule][selector_type].length,part2:/^(?:comment|state)/.test(selector_type)?t("selector multi 2a",{what:selector_type==="state"?t("selector state"):t("comments")}):t("selector multi 2b",{what:t(selector_type+(/^(?:month|weekday)$/.test(selector_type)?"s":" ranges"))})})]);done_with_selector_reordering=true}}));if(typeof used_selectors[nrule].state==="object"&&Object.keys(used_selectors[nrule]).length===1){if(nrule!==0){parsing_warnings.push([nrule,new_tokens[nrule][0].length-1,t("default state")])}}else if(typeof used_selectors[nrule].time==="undefined"){if(typeof used_selectors[nrule].state==="object"&&new_tokens[nrule][0][used_selectors[nrule].state[0]][0]==="open"&&typeof used_selectors[nrule].comment==="undefined"||typeof used_selectors[nrule].comment==="undefined"&&typeof used_selectors[nrule].state==="undefined"&&typeof used_selectors[nrule]["24/7"]==="undefined"){parsing_warnings.push([nrule,new_tokens[nrule][0].length-1,t("vague")])}}if(typeof used_selectors[nrule].comment==="object"&&new_tokens[nrule][0][used_selectors[nrule].comment[0]][0].length===0){parsing_warnings.push([nrule,used_selectors[nrule].comment[0],t("empty comment")])}for(var i=0;i<used_selectors_types_array[nrule].length-1;i++){var selector_type=used_selectors_types_array[nrule][i];var next_selector_type=used_selectors_types_array[nrule][i+1];if(wide_range_selector_order.indexOf(selector_type)!==-1&&wide_range_selector_order.indexOf(next_selector_type)!==-1||small_range_selector_order.indexOf(selector_type)!==-1&&small_range_selector_order.indexOf(next_selector_type)!==-1){if(new_tokens[nrule][0][used_selectors[nrule][selector_type][0]][0]===":"){parsing_warnings.push([nrule,used_selectors[nrule][selector_type][0],t("separator_for_readability")])}}}if(typeof rule_infos[nrule]==="object"&&typeof rule_infos[nrule]["time_wraps_over_midnight"]==="boolean"&&rule_infos[nrule]["time_wraps_over_midnight"]===true&&typeof used_selectors[nrule+1]==="object"&&typeof used_selectors[nrule+1]["rule separator"]==="undefined"&&new_tokens[nrule+1][1]===false){var rules_too_complex=[nrule,nrule+1].map((function(nrule){for(var i=0;i<wide_range_selector_order.length-1;i++){if(typeof used_selectors[nrule][wide_range_selector_order[i]]==="object"){return true}}return false}));var rules_too_complex_count=rules_too_complex.filter((function(el){return el})).length;var next_rule_selects_next_day=false;if(typeof rule_infos[nrule]==="object"&&typeof rule_infos[nrule]==="object"&&typeof rule_infos[nrule]["week_days"]==="object"&&typeof rule_infos[nrule+1]==="object"&&typeof rule_infos[nrule+1]["week_days"]==="object"){for(var i=0;i<rule_infos[nrule]["week_days"].length;i++){var week_day=rule_infos[nrule]["week_days"][i];if(rule_infos[nrule+1]["week_days"].indexOf(week_day===6?0:week_day+1)!==-1){next_rule_selects_next_day=true;break}}}else{next_rule_selects_next_day=true}var additional_rule_separator_enabled=(optional_conf_parm||{}).additional_rule_separator!==false;if(rules_too_complex_count<2&&next_rule_selects_next_day&&additional_rule_separator_enabled){parsing_warnings.push([nrule+1,new_tokens[nrule+1][0].length-1,t("additional_rule_separator not used after time wrapping midnight"),new_tokens])}}if(typeof new_tokens[nrule][0][0]==="object"&&new_tokens[nrule][0][0][0]===","&&new_tokens[nrule][0][0][1]==="rule separator"&&typeof used_selectors[nrule].state==="object"&&(new_tokens[nrule][0][used_selectors[nrule].state[0]][0]==="closed"||new_tokens[nrule][0][used_selectors[nrule].state[0]][0]==="off")){parsing_warnings.push([nrule,new_tokens[nrule][0].length-1,t("additional rule which evaluates to closed"),new_tokens])}}var has_advanced=it.advance();if(has_advanced===true&&has_token["24/7"]&&!done_with_warnings){parsing_warnings.push([-1,0,t("strange 24/7")])}if(warnings_severity>=5&&!has_token["PH"]&&!has_token["24/7"]&&!done_with_warnings&&(typeof oh_key==="string"&&osm_tag_defaults[oh_regex_key]["warn_for_PH_missing"]||typeof oh_key!=="string")){var keys_with_warn_for_PH_missing=[];Object.keys(osm_tag_defaults).forEach((function(key){if(osm_tag_defaults[key]["warn_for_PH_missing"]){keys_with_warn_for_PH_missing.push(key)}}));parsing_warnings.push([-1,0,t("public holiday",{part2:typeof oh_key!=="string"?t("public holiday part2",{keys:keys_with_warn_for_PH_missing.join(", ")}):""})])}if(used_selectors_types_array.length>1&&used_selectors_types_array.filter((function(el){return el.length===1&&el[0]==="time"})).length===used_selectors_types_array.length){parsing_warnings.push([-1,0,t("combine rules",{ok:","})])}prettifyValue()}done_with_warnings=true;var warnings=[];for(var i=0;i<parsing_warnings.length;i++){warnings.push(formatWarnErrorMessage(parsing_warnings[i][0],parsing_warnings[i][1],parsing_warnings[i][2],parsing_warnings[i][3]))}return warnings}function tokenIsTheBeginOfSelector(tokens,at){if(typeof tokens[at][3]==="string"){return 3}else if(tokens[at][1]==="comment"||tokens[at][1]==="state"||tokens[at][1]==="24/7"||tokens[at][1]==="rule separator"){return 1}else{return false}}function getSelectorRange(tokens,at){var selector_start=at,selector_end,pos_in_token_array;for(;selector_start>=0;selector_start--){pos_in_token_array=tokenIsTheBeginOfSelector(tokens,selector_start);if(pos_in_token_array){break}}selector_end=selector_start;if(pos_in_token_array===1){if(selector_end+1<tokens.length&&tokens[selector_end+1][0]===":")selector_end++;return[selector_start,selector_end,tokens[selector_start][pos_in_token_array]]}for(selector_end++;selector_end<tokens.length;selector_end++){if(tokenIsTheBeginOfSelector(tokens,selector_end))return[selector_start,selector_end-1,tokens[selector_start][pos_in_token_array]]}return[selector_start,selector_end-1,tokens[selector_start][pos_in_token_array]]}function prettifyValue(argument_hash){var user_conf={};var get_internals=false;var rule_index;prettified_value="";var prettified_value_array=[];if(typeof argument_hash==="object"){if(typeof argument_hash.conf==="object"){user_conf=argument_hash.conf}if(typeof argument_hash.rule_index==="number"){rule_index=argument_hash.rule_index}if(argument_hash.get_internals===true){get_internals=true}}Object.keys(default_prettify_conf).forEach((function(key){if(typeof user_conf[key]==="undefined"){user_conf[key]=default_prettify_conf[key]}}));var _is_en_or_all=user_conf["locale"]==="en"||user_conf["locale"]==="all";var months_local=_is_en_or_all?months:[1,2,3,4,5,6,7,8,9,10,11,12].map((function(month){return new Date(2018,month-1,1).toLocaleString(user_conf["locale"],{month:"short"})}));var weekdays_local=_is_en_or_all?weekdays:[1,2,3,4,5,6,7].map((function(weekday){return new Date(2017,0,weekday).toLocaleString(user_conf["locale"],{weekday:"short"})}));for(var nrule=0;nrule<new_tokens.length;nrule++){if(new_tokens[nrule][0].length===0)continue;if(typeof rule_index==="number"){if(rule_index!==nrule)continue}else{if(nrule!==0)prettified_value+=new_tokens[nrule][1]?user_conf.rule_sep_string+"|| ":(new_tokens[nrule][0][0][1]==="rule separator"?",":user_conf.print_semicolon?";":"")+user_conf.rule_sep_string}var selector_start_end_type=[0,0,undefined];var prettified_group_value=[];var count=0;do{selector_start_end_type=getSelectorRange(new_tokens[nrule][0],selector_start_end_type[1]);if(count>50){throw formatLibraryBugMessage("Infinite loop.")}if(selector_start_end_type[2]!=="rule separator"){prettified_group_value.push([selector_start_end_type,prettifySelector(new_tokens[nrule][0],selector_start_end_type[0],selector_start_end_type[1],selector_start_end_type[2],user_conf)])}selector_start_end_type[1]++;count++}while(selector_start_end_type[1]<new_tokens[nrule][0].length);var not_sorted_prettified_group_value=prettified_group_value.slice();if(!done_with_selector_reordering){prettified_group_value.sort((function(a,b){var selector_order=["year","month","week","holiday","weekday","time","24/7","state","comment"];return selector_order.indexOf(a[0][2])-selector_order.indexOf(b[0][2])}))}var old_prettified_value_length=prettified_value.length;if(typeof user_conf["locale"]==="string"&&user_conf["locale"]!=="en"){var global_locale=i18next.lng();if(global_locale!==user_conf["locale"]){i18next.setLng(user_conf["locale"])}for(var i=0;i<prettified_group_value.length;i++){var type=prettified_group_value[i][0][2];if(type==="weekday"){weekdays.forEach((function(weekday,key){prettified_group_value[i][1]=prettified_group_value[i][1].replace(new RegExp(weekday,"g"),weekdays_local[key])}))}else if(type==="month"){months.forEach((function(month,key){prettified_group_value[i][1]=prettified_group_value[i][1].replace(new RegExp(month,"g"),months_local[key])}))}else{prettified_group_value[i][1]=i18next.t(["opening_hours:pretty."+prettified_group_value[i][1],prettified_group_value[i][1]])}}if(global_locale!==locale){i18next.setLng(global_locale)}}prettified_value+=prettified_group_value.map((function(array){return array[1]})).join(" ");prettified_value_array.push(prettified_group_value);if(!done_with_selector_reordering_warnings){for(var i=0,l=not_sorted_prettified_group_value.length;i<l;i++){if(not_sorted_prettified_group_value[i]!==prettified_group_value[i]){var length=i+old_prettified_value_length;for(var x=0;x<=i;x++){length+=prettified_group_value[x][1].length}parsing_warnings.push([prettified_value,length,t("switched",{first:prettified_group_value[i][0][2],second:not_sorted_prettified_group_value[i][0][2]})])}}}}done_with_selector_reordering_warnings=true;if(get_internals){return[prettified_value_array,new_tokens]}else{return prettified_value}}function matchTokens(tokens,at){if(at+arguments.length-2>tokens.length)return false;for(var i=0;i<arguments.length-2;i++){if(tokens[at+i][1]!==arguments[i+2]){return false}}return true}function generateDateShifter(func,shift){return function(date){var res=func(new Date(date.getTime()+shift));if(typeof res[1]==="undefined")return res;return[res[0],new Date(res[1].getTime()-shift)]}}function parseGroup(tokens,at,rule,nrule){var rule_modifier_specified=false;var last_selector=[];while(at<tokens.length){if(matchTokens(tokens,at,"weekday")){at=parseWeekdayRange(tokens,at,rule,undefined,nrule)}else if(matchTokens(tokens,at,"24/7")){rule.time.push((function(){return[true]}));at++}else if(matchTokens(tokens,at,"holiday")){if(matchTokens(tokens,at+1,",")){at=parseHoliday(tokens,at,rule,true)}else{at=parseHoliday(tokens,at,rule,false)}week_stable=false}else if(matchTokens(tokens,at,"month","number")||matchTokens(tokens,at,"month","weekday")||matchTokens(tokens,at,"year","month","number")||matchTokens(tokens,at,"year","event")||matchTokens(tokens,at,"event")){at=parseMonthdayRange(tokens,at,nrule);week_stable=false}else if(matchTokens(tokens,at,"year")){at=parseYearRange(tokens,at);week_stable=false}else if(matchTokens(tokens,at,"month")){at=parseMonthRange(tokens,at)}else if(matchTokens(tokens,at,"week")){tokens[at][3]="week";at=parseWeekRange(tokens,at)}else if(at!==0&&at!==tokens.length-1&&tokens[at][0]===":"&&!(typeof last_selector[1]==="string"&&last_selector[1]==="time")){if(!done_with_warnings&&matchTokens(tokens,at-1,"holiday")){parsing_warnings.push([nrule,at,t("no colon after",{token:tokens[at-1][1]})])}at++}else if(matchTokens(tokens,at,"number","timesep")||matchTokens(tokens,at,"timevar")||matchTokens(tokens,at,"(","timevar")||matchTokens(tokens,at,"number","-")){at=parseTimeRange(tokens,at,rule,false,nrule);last_selector=[at,"time"]}else if(matchTokens(tokens,at,"state")){if(tokens[at][0]==="open"){rule.meaning=true}else if(tokens[at][0]==="closed"||tokens[at][0]==="off"){rule.meaning=false}else{rule.meaning=false;rule.unknown=true}rule_modifier_specified=true;at++;if(typeof tokens[at]==="object"&&tokens[at][0]===",")at=[at+1]}else if(matchTokens(tokens,at,"comment")){rule.comment=tokens[at][0];if(!rule_modifier_specified){rule.meaning=false;rule.unknown=true}rule_modifier_specified=true;at++;if(typeof tokens[at]==="object"&&tokens[at][0]===","){at=[at+1]}}else if((at===0||at===tokens.length-1)&&matchTokens(tokens,at,"rule separator")){at++}else{var warnings=getWarnings();throw formatWarnErrorMessage(nrule,at,t("unexpected token",{token:tokens[at][1]}))+(warnings?" "+warnings.join("; "):"")}if(typeof at==="object"){tokens[at[0]-1][1]="rule separator";break}if(typeof last_selector[0]==="number"&&last_selector[0]!==at){last_selector=[]}}return at}function dateAtDayMinutes(date,minutes){return new Date(date.getFullYear(),date.getMonth(),date.getDate(),0,minutes)}function dateAtNextWeekday(date,weekday){var delta=weekday-date.getDay();return new Date(date.getFullYear(),date.getMonth(),date.getDate()+delta+(delta<0?7:0))}function parseNumRange(tokens,at,func){for(;at<tokens.length;at++){if(matchTokens(tokens,at,"number","-","number")){func(tokens[at][0],tokens[at+2][0],at);at+=3}else if(matchTokens(tokens,at,"-","number")){func(-tokens[at+1][0],-tokens[at+1][0],at);at+=2}else if(matchTokens(tokens,at,"number")){func(tokens[at][0],tokens[at][0],at);at++}else{throw formatWarnErrorMessage(nrule,at+matchTokens(tokens,at,"-"),"Unexpected token in number range: "+tokens[at][1])}if(!matchTokens(tokens,at,","))break}return at}function getConstrainedWeekday(tokens,at){var number=0;var endat=parseNumRange(tokens,at,(function(from,to,at){if(from===0||from<-5||from>5)throw formatWarnErrorMessage(nrule,at,t("number -5 to 5"));if(from===to){if(number!==0)throw formatWarnErrorMessage(nrule,at,t("one weekday constraint"));number=from}else{throw formatWarnErrorMessage(nrule,at+2,t("range constrained weekdays"))}}));for(var i=at;i<endat;i++){tokens[i][4]="positive_number"}if(!matchTokens(tokens,endat,"]"))throw formatWarnErrorMessage(nrule,endat,t("expected",{symbol:"]"}));return[number,endat+1]}function checkPeriod(at,period,period_type,parm_string){if(done_with_warnings)return;if(period===0){throw formatWarnErrorMessage(nrule,at,t("range zero",{type:period_type}))}else if(period===1){if(typeof parm_string==="string"&&parm_string==="no_end_year")parsing_warnings.push([nrule,at,t("period one year+",{type:period_type})]);else parsing_warnings.push([nrule,at,t("period one",{type:period_type})])}}function getDateForConstrainedWeekday(year,month,weekday,constrained_weekday,add_days){var tmp_date=dateAtNextWeekday(new Date(year,month+(constrained_weekday[0]>0?0:1),1),weekday);tmp_date.setDate(tmp_date.getDate()+(constrained_weekday[0]+(constrained_weekday[0]>0?-1:0))*7);if(typeof add_days==="object"&&add_days[1])tmp_date.setDate(tmp_date.getDate()+add_days[0]);return tmp_date}function checkIfDateIsValid(month,day,nrule,at){if(day<1||day>31){throw formatWarnErrorMessage(nrule,at,t("month 31",{month:months[month]}))}else if((month===3||month===5||month===8||month===10)&&day===31){throw formatWarnErrorMessage(nrule,at,t("month 30",{month:months[month]}))}else if(month===1&&day===30){throw formatWarnErrorMessage(nrule,at,t("month feb",{month:months[month]}))}}function parseTimeRange(tokens,at,rule,extended_open_end,nrule){if(!extended_open_end)tokens[at][3]="time";for(;at<tokens.length;at++){var has_time_var_calc=[],has_normal_time=[];has_normal_time[0]=matchTokens(tokens,at,"number","timesep","number");has_time_var_calc[0]=matchTokens(tokens,at,"(","timevar");var minutes_from,minutes_to;if(has_normal_time[0]||matchTokens(tokens,at,"timevar")||has_time_var_calc[0]){var is_point_in_time=false;var has_open_end=false;var timevar_add=[0,0];var timevar_string=[];var point_in_time_period;if(has_normal_time[0]){minutes_from=getMinutesByHoursMinutes(tokens,nrule,at+has_time_var_calc[0])}else{timevar_string[0]=tokens[at+has_time_var_calc[0]][0];minutes_from=word_value_replacement[timevar_string[0]];if(has_time_var_calc[0]){timevar_add[0]=parseTimevarCalc(tokens,at);minutes_from+=timevar_add[0]}}var at_end_time=at+(has_normal_time[0]?3:has_time_var_calc[0]?7:1)+1;if(!matchTokens(tokens,at_end_time-1,"-")){if(matchTokens(tokens,at_end_time-1,"+")){has_open_end=true}else{if(oh_mode===0){throw formatWarnErrorMessage(nrule,at+(has_normal_time[0]?typeof tokens[at+3]==="object"?3:2:has_time_var_calc[0]?2:typeof tokens[at+1]==="object"?1:0),t("point in time",{calc:has_time_var_calc[0]?t("calculation")+" ":"",libraryname:library_name}))}else{minutes_to=minutes_from+1;is_point_in_time=true}}}if(has_open_end){if(extended_open_end===1){minutes_from+=minutes_in_day}if(minutes_from>=22*60){minutes_to=minutes_from+8*60}else if(minutes_from>=17*60){minutes_to=minutes_from+10*60}else{minutes_to=minutes_in_day}}else if(!is_point_in_time){has_normal_time[1]=matchTokens(tokens,at_end_time,"number","timesep","number");has_time_var_calc[1]=matchTokens(tokens,at_end_time,"(","timevar");if(!has_normal_time[1]&&!matchTokens(tokens,at_end_time,"timevar")&&!has_time_var_calc[1]){throw formatWarnErrorMessage(nrule,at_end_time-(typeof tokens[at_end_time]==="object"?0:1),t("time range continue"))}else{if(has_normal_time[1]){minutes_to=getMinutesByHoursMinutes(tokens,nrule,at_end_time)}else{timevar_string[1]=tokens[at_end_time+has_time_var_calc[1]][0];minutes_to=word_value_replacement[timevar_string[1]]}if(has_time_var_calc[1]){timevar_add[1]=parseTimevarCalc(tokens,at_end_time);minutes_to+=timevar_add[1]}}}at=at_end_time+(is_point_in_time?-1:has_normal_time[1]?3:has_time_var_calc[1]?7:!has_open_end);if(matchTokens(tokens,at,"/","number")){if(matchTokens(tokens,at+2,"timesep","number")){point_in_time_period=getMinutesByHoursMinutes(tokens,nrule,at+1);at+=4}else{point_in_time_period=tokens[at+1][0];at+=2;if(matchTokens(tokens,at,"timesep"))throw formatWarnErrorMessage(nrule,at,t("period continue"))}if(oh_mode===0){throw formatWarnErrorMessage(nrule,at-1,t("time range mode",{libraryname:library_name}))}is_point_in_time=true}else if(matchTokens(tokens,at,"+")){parseTimeRange(tokens,at_end_time,rule,minutes_to<minutes_from?1:true,nrule);at++}else if(oh_mode===1&&!is_point_in_time){throw formatWarnErrorMessage(nrule,at_end_time,t("point in time mode",{libraryname:library_name}))}if(typeof lat==="string"){if(!has_normal_time[0]||!(has_normal_time[1]||has_open_end||is_point_in_time)){week_stable=false}}else{timevar_string=[]}if(!extended_open_end&&minutes_from>=minutes_in_day){throw formatWarnErrorMessage(nrule,at_end_time-2,t("outside current day"))}if(minutes_to<minutes_from||has_normal_time[0]&&has_normal_time[1]&&minutes_from===minutes_to){minutes_to+=minutes_in_day}if(minutes_to>minutes_in_day*2){throw formatWarnErrorMessage(nrule,at_end_time+(has_normal_time[1]?4:has_time_var_calc[1]?7:1)-2,t("two midnights"))}if(minutes_from===0&&minutes_to===minutes_in_day){rule.time.push((function(){return[true]}))}else{if(minutes_to>minutes_in_day){rule.time.push(function(minutes_from,minutes_to,timevar_string,timevar_add,has_open_end,is_point_in_time,point_in_time_period,extended_open_end){return function(date){var ourminutes=date.getHours()*60+date.getMinutes();if(timevar_string[0]){var date_from=suncalc.getTimes(date,lat,lon)[timevar_string[0]];minutes_from=date_from.getHours()*60+date_from.getMinutes()+timevar_add[0]}if(timevar_string[1]){var date_to=suncalc.getTimes(date,lat,lon)[timevar_string[1]];minutes_to=date_to.getHours()*60+date_to.getMinutes()+timevar_add[1];minutes_to+=minutes_in_day}else if(is_point_in_time&&typeof point_in_time_period!=="number"){minutes_to=minutes_from+1}if(typeof point_in_time_period==="number"){if(ourminutes<minutes_from){return[false,dateAtDayMinutes(date,minutes_from)]}else if(ourminutes<=minutes_to){for(var cur_min=minutes_from;ourminutes+point_in_time_period>=cur_min;cur_min+=point_in_time_period){if(cur_min===ourminutes){return[true,dateAtDayMinutes(date,ourminutes+1)]}else if(ourminutes<cur_min){return[false,dateAtDayMinutes(date,cur_min)]}}}return[false,dateAtDayMinutes(date,minutes_in_day)]}else{if(ourminutes<minutes_from)return[false,dateAtDayMinutes(date,minutes_from)];else return[true,dateAtDayMinutes(date,minutes_to),has_open_end,extended_open_end]}}}(minutes_from,minutes_to,timevar_string,timevar_add,has_open_end,is_point_in_time,point_in_time_period,extended_open_end));if(minutes_to-minutes_in_day>0){if(typeof rule_infos[nrule]==="undefined"){rule_infos[nrule]={}}rule_infos[nrule]["time_wraps_over_midnight"]=true;rule.wraptime.push(function(minutes_from,minutes_to,timevar_string,timevar_add,has_open_end,point_in_time_period,extended_open_end){return function(date){var ourminutes=date.getHours()*60+date.getMinutes();if(timevar_string[0]){var date_from=suncalc.getTimes(date,lat,lon)[timevar_string[0]];minutes_from=date_from.getHours()*60+date_from.getMinutes()+timevar_add[0]}if(timevar_string[1]){var date_to=suncalc.getTimes(date,lat,lon)[timevar_string[1]];minutes_to=date_to.getHours()*60+date_to.getMinutes()+timevar_add[1]}if(typeof point_in_time_period==="number"){if(ourminutes<=minutes_to){for(var cur_min=0;ourminutes+point_in_time_period>=cur_min;cur_min+=point_in_time_period){if(cur_min===ourminutes){return[true,dateAtDayMinutes(date,ourminutes+1)]}else if(ourminutes<cur_min){return[false,dateAtDayMinutes(date,cur_min)]}}}}else{if(ourminutes<minutes_to)return[true,dateAtDayMinutes(date,minutes_to),has_open_end,extended_open_end]}return[false,undefined]}}(minutes_from,minutes_to-minutes_in_day,timevar_string,timevar_add,has_open_end,point_in_time_period,extended_open_end))}}else{rule.time.push(function(minutes_from,minutes_to,timevar_string,timevar_add,has_open_end,is_point_in_time,point_in_time_period){return function(date){var ourminutes=date.getHours()*60+date.getMinutes();if(timevar_string[0]){var date_from=suncalc.getTimes(date,lat,lon)[timevar_string[0]];minutes_from=date_from.getHours()*60+date_from.getMinutes()+timevar_add[0]}if(timevar_string[1]){var date_to=suncalc.getTimes(date,lat,lon)[timevar_string[1]];minutes_to=date_to.getHours()*60+date_to.getMinutes()+timevar_add[1]}else if(is_point_in_time&&typeof point_in_time_period!=="number"){minutes_to=minutes_from+1}if(typeof point_in_time_period==="number"){if(ourminutes<minutes_from){return[false,dateAtDayMinutes(date,minutes_from)]}else if(ourminutes<=minutes_to){for(var cur_min=minutes_from;ourminutes+point_in_time_period>=cur_min;cur_min+=point_in_time_period){if(cur_min===ourminutes){return[true,dateAtDayMinutes(date,ourminutes+1)]}else if(ourminutes<cur_min){return[false,dateAtDayMinutes(date,cur_min)]}}}return[false,dateAtDayMinutes(date,minutes_in_day)]}else{if(ourminutes<minutes_from)return[false,dateAtDayMinutes(date,minutes_from)];else if(ourminutes<minutes_to)return[true,dateAtDayMinutes(date,minutes_to),has_open_end];else return[false,dateAtDayMinutes(date,minutes_from+minutes_in_day)]}}}(minutes_from,minutes_to,timevar_string,timevar_add,has_open_end,is_point_in_time,point_in_time_period))}}}else if(matchTokens(tokens,at,"number","-","number")){minutes_from=tokens[at][0]*60;minutes_to=tokens[at+2][0]*60;if(!done_with_warnings){parsing_warnings.push([nrule,at+2,t("without minutes",{syntax:(tokens[at][0]<10?"0":"")+tokens[at][0]+":00-"+(tokens[at+2][0]<10?"0":"")+tokens[at+2][0]+":00"})])}if(minutes_from>=minutes_in_day)throw formatWarnErrorMessage(nrule,at,t("outside day"));if(minutes_to<minutes_from)minutes_to+=minutes_in_day;if(minutes_to>minutes_in_day*2)throw formatWarnErrorMessage(nrule,at+2,t("two midnights"));if(minutes_to>minutes_in_day){rule.time.push(function(minutes_from,minutes_to){return function(date){var ourminutes=date.getHours()*60+date.getMinutes();if(ourminutes<minutes_from)return[false,dateAtDayMinutes(date,minutes_from)];else return[true,dateAtDayMinutes(date,minutes_to)]}}(minutes_from,minutes_to));if(minutes_to-minutes_in_day>0){if(typeof rule_infos[nrule]==="undefined"){rule_infos[nrule]={}}rule_infos[nrule]["time_wraps_over_midnight"]=true;rule.wraptime.push(function(minutes_to){return function(date){var ourminutes=date.getHours()*60+date.getMinutes();if(ourminutes<minutes_to){return[true,dateAtDayMinutes(date,minutes_to)]}else{return[false,undefined]}}}(minutes_to-minutes_in_day))}}else{rule.time.push(function(minutes_from,minutes_to){return function(date){var ourminutes=date.getHours()*60+date.getMinutes();if(ourminutes<minutes_from)return[false,dateAtDayMinutes(date,minutes_from)];else if(ourminutes<minutes_to)return[true,dateAtDayMinutes(date,minutes_to),has_open_end];else return[false,dateAtDayMinutes(date,minutes_from+minutes_in_day)]}}(minutes_from,minutes_to))}at+=3}else{if(matchTokens(tokens,at,"("))throw formatWarnErrorMessage(nrule,at,'Missing variable time (e.g. sunrise) after: "'+tokens[at][1]+'"');if(matchTokens(tokens,at,"number","timesep"))throw formatWarnErrorMessage(nrule,at+1,'Missing minutes in time range after: "'+tokens[at+1][1]+'"');if(matchTokens(tokens,at,"number"))throw formatWarnErrorMessage(nrule,at+(typeof tokens[at+1]==="object"?1:0),'Missing time separator in time range after: "'+tokens[at][1]+'"');return[at]}if(!matchTokens(tokens,at,",")){break}if(typeof tokens[at+1]==="undefined"&&!done_with_warnings){parsing_warnings.push([nrule,at,t("value ends with token",{token:tokens[at][1]})])}}return at}function getMinutesByHoursMinutes(tokens,nrule,at){if(tokens[at+2][0]>59)throw formatWarnErrorMessage(nrule,at+2,"Minutes are greater than 59.");return tokens[at][0]*60+tokens[at+2][0]}function parseTimevarCalc(tokens,at){var error;if(matchTokens(tokens,at+2,"+")||matchTokens(tokens,at+2,"-")){if(matchTokens(tokens,at+3,"number","timesep","number")){if(matchTokens(tokens,at+6,")")){var add_or_subtract=tokens[at+2][0]==="+"?"1":"-1";var minutes=getMinutesByHoursMinutes(tokens,nrule,at+3)*add_or_subtract;if(minutes===0)parsing_warnings.push([nrule,at+5,t("zero calculation")]);return minutes}else{error=[at+6,". "+t("missing",{symbol:")"})+"."]}}else{error=[at+5," "+t("(time)")+"."]}}else{error=[at+2,". "+t("expected",{symbol:'+" or "-'})]}if(error)throw formatWarnErrorMessage(nrule,error[0],t("calculation syntax")+error[1])}function parseWeekdayRange(tokens,at,rule,in_holiday_selector,nrule){if(!in_holiday_selector){in_holiday_selector=true;tokens[at][3]="weekday"}for(;at<tokens.length;at++){if(matchTokens(tokens,at,"weekday","[")){var numbers=[];var endat=parseNumRange(tokens,at+2,(function(from,to,at){if(from===0||from<-5||from>5)throw formatWarnErrorMessage(nrule,at,t("number -5 to 5"));if(from===to){numbers.push(from)}else if(from<to){for(var i=from;i<=to;i++){if(i===0||i<-5||i>5)throw formatWarnErrorMessage(nrule,at+2,t("number -5 to 5"));numbers.push(i)}}else{throw formatWarnErrorMessage(nrule,at+2,t("bad range",{from:from,to:to}))}}));if(!matchTokens(tokens,endat,"]")){throw formatWarnErrorMessage(nrule,endat+(typeof tokens[endat]==="object"?0:-1),t("] or more numbers"))}var add_days=getMoveDays(tokens,endat+1,6,"constrained weekdays");week_stable=false;for(var nnumber=0;nnumber<numbers.length;nnumber++){rule.weekday.push(function(weekday,number,add_days){return function(date){var date_num=getValueForDate(date,false);var start_of_this_month=new Date(date.getFullYear(),date.getMonth(),1);var start_of_next_month=new Date(date.getFullYear(),date.getMonth()+1,1);var target_day_this_month;target_day_this_month=getDateForConstrainedWeekday(date.getFullYear(),date.getMonth(),weekday,[number]);var target_day_with_added_days_this_month=new Date(target_day_this_month.getFullYear(),target_day_this_month.getMonth(),target_day_this_month.getDate()+add_days);if(target_day_with_added_days_this_month.getTime()<start_of_this_month.getTime()){if(target_day_this_month.getTime()>=start_of_this_month.getTime()){target_day_with_added_days_this_month=dateAtNextWeekday(new Date(date.getFullYear(),date.getMonth()+(number>0?0:1)+1,1),weekday);target_day_this_month.setDate(target_day_with_added_days_this_month.getDate()+(number+(number>0?-1:0))*7+add_days)}else{return[false,start_of_next_month]}}else if(target_day_with_added_days_this_month.getTime()>=start_of_next_month.getTime()){if(target_day_this_month.getTime()>=start_of_next_month.getTime())return[false,start_of_next_month]}var target_day_with_added_moved_days_this_month;if(add_days>0){target_day_with_added_moved_days_this_month=dateAtNextWeekday(new Date(date.getFullYear(),date.getMonth()+(number>0?0:1)-1,1),weekday);target_day_with_added_moved_days_this_month.setDate(target_day_with_added_moved_days_this_month.getDate()+(number+(number>0?-1:0))*7+add_days);if(date_num===getValueForDate(target_day_with_added_moved_days_this_month,false))return[true,dateAtDayMinutes(date,minutes_in_day)]}else if(add_days<0){target_day_with_added_moved_days_this_month=dateAtNextWeekday(new Date(date.getFullYear(),date.getMonth()+(number>0?0:1)+1,1),weekday);target_day_with_added_moved_days_this_month.setDate(target_day_with_added_moved_days_this_month.getDate()+(number+(number>0?-1:0))*7+add_days);if(target_day_with_added_moved_days_this_month.getTime()>=start_of_next_month.getTime()){if(target_day_with_added_days_this_month.getTime()>=start_of_next_month.getTime())return[false,target_day_with_added_moved_days_this_month]}else{if(target_day_with_added_days_this_month.getTime()<start_of_next_month.getTime()&&getValueForDate(target_day_with_added_days_this_month,false)===date_num)return[true,dateAtDayMinutes(date,minutes_in_day)];target_day_with_added_days_this_month=target_day_with_added_moved_days_this_month}}if(date.getDate()===target_day_with_added_days_this_month.getDate()){return[true,dateAtDayMinutes(date,minutes_in_day)]}if(date.getDate()<target_day_with_added_days_this_month.getDate()){return[false,target_day_with_added_days_this_month]}return[false,start_of_next_month]}}(tokens[at][0],numbers[nnumber],add_days[0]))}at=endat+1+add_days[1]}else if(matchTokens(tokens,at,"weekday")){var is_range=matchTokens(tokens,at+1,"-","weekday");var weekday_from=tokens[at][0];var weekday_to=is_range?tokens[at+2][0]:weekday_from;var inside=true;if(weekday_to<weekday_from){var tmp=weekday_to;weekday_to=weekday_from-1;weekday_from=tmp+1;inside=false}var weekday_list=Array.apply(0,Array(weekday_to-weekday_from+1)).map((function(_,index){return index+weekday_to}));if(typeof rule_infos[nrule]==="undefined"){rule_infos[nrule]={}}if(typeof rule_infos[nrule]["week_days"]==="object"){Array.prototype.push.apply(rule_infos[nrule]["week_days"],weekday_list)}else{rule_infos[nrule]["week_days"]=weekday_list}if(weekday_to<weekday_from){rule.weekday.push((function(){return[true]}))}else{rule.weekday.push(function(weekday_from,weekday_to,inside){return function(date){var ourweekday=date.getDay();if(ourweekday<weekday_from||ourweekday>weekday_to){return[!inside,dateAtNextWeekday(date,weekday_from)]}else{return[inside,dateAtNextWeekday(date,weekday_to+1)]}}}(weekday_from,weekday_to,inside))}at+=is_range?3:1}else if(matchTokens(tokens,at,"holiday")){week_stable=false;return parseHoliday(tokens,at,rule,true,in_holiday_selector)}else if(matchTokens(tokens,at-1,",")){throw formatWarnErrorMessage(nrule,at-1,t("additional rule no sense"))}else{throw formatWarnErrorMessage(nrule,at,t("unexpected token weekday range",{token:tokens[at][1]}))}if(!matchTokens(tokens,at,",")){break}}return at}function getMoveDays(tokens,at,max_differ,name){var add_days=[0,0];add_days[0]=matchTokens(tokens,at,"+")||(matchTokens(tokens,at,"-")?-1:0);if(add_days[0]!==0&&matchTokens(tokens,at+1,"number","calcday")){if(tokens[at+1][0]>max_differ)throw formatWarnErrorMessage(nrule,at+2,t("max differ",{maxdiffer:max_differ,name:name}));add_days[0]*=tokens[at+1][0];if(add_days[0]===0&&!done_with_warnings)parsing_warnings.push([nrule,at+2,t("adding 0")]);add_days[1]=3}else{add_days[0]=0}return add_days}function parseHoliday(tokens,at,rule,push_to_weekday,in_holiday_selector){if(!in_holiday_selector){if(push_to_weekday)tokens[at][3]="weekday";else tokens[at][3]="holiday"}for(;at<tokens.length;at++){if(matchTokens(tokens,at,"holiday")){if(tokens[at][0]==="PH"){var applying_holidays=getMatchingHoliday(tokens[at][0]);var add_days=getMoveDays(tokens,at+1,1,"public holiday");var selector=function(applying_holidays,add_days){return function(date){var holidays=getApplyingHolidaysForYear(applying_holidays,date.getFullYear(),add_days);var date_num=getValueForDate(date,true);for(var i=0;i<holidays.length;i++){var next_holiday_date_num=getValueForDate(holidays[i][0],true);if(date_num<next_holiday_date_num){if(add_days[0]>0){var holidays_last_year=getApplyingHolidaysForYear(applying_holidays,date.getFullYear()-1,add_days);var last_holiday_last_year=holidays_last_year[holidays_last_year.length-1];var last_holiday_last_year_num=getValueForDate(last_holiday_last_year[0],true);if(date_num<last_holiday_last_year_num){return[false,last_holiday_last_year[0]]}else if(date_num===last_holiday_last_year_num){return[true,dateAtDayMinutes(last_holiday_last_year[0],minutes_in_day),"Day after "+last_holiday_last_year[1]]}}return[false,holidays[i][0]]}else if(date_num===next_holiday_date_num){return[true,new Date(date.getFullYear(),date.getMonth(),date.getDate()+1),(add_days[0]>0?"Day after ":add_days[0]<0?"Day before ":"")+holidays[i][1]]}}if(add_days[0]<0){var holidays_next_year=getApplyingHolidaysForYear(applying_holidays,date.getFullYear()+1,add_days);var first_holidays_next_year=holidays_next_year[0];var first_holidays_next_year_num=getValueForDate(first_holidays_next_year[0],true);if(date_num===first_holidays_next_year_num){return[true,dateAtDayMinutes(first_holidays_next_year[0],minutes_in_day),"Day before "+first_holidays_next_year[1]]}}return[false,new Date(holidays[0][0].getFullYear()+1,holidays[0][0].getMonth(),holidays[0][0].getDate())]}}(applying_holidays,add_days);if(push_to_weekday)rule.weekday.push(selector);else rule.holiday.push(selector);at+=1+add_days[1]}else if(tokens[at][0]==="SH"){var applying_holidays=getMatchingHoliday(tokens[at][0]);var selector=function(applying_holidays){return function(date){var date_num=getValueForDate(date);for(var i=0;i<applying_holidays.length;i++){var holiday=getSHForYear(applying_holidays[i],date.getFullYear(),false);if(typeof holiday==="undefined"){continue}for(var h=0;h<holiday.length;h+=4){var holiday_to_plus=new Date(date.getFullYear(),holiday[2+h]-1,holiday[3+h]+1);var holiday_from=(holiday[0+h]-1)*100+holiday[1+h];var holiday_to=(holiday[2+h]-1)*100+holiday[3+h];holiday_to_plus=getValueForDate(holiday_to_plus);var holiday_ends_next_year=holiday_to<holiday_from;if(date_num<holiday_from){var last_year_holiday=getSHForYear(applying_holidays[applying_holidays.length-1],date.getFullYear()-1,false);if(typeof last_year_holiday==="object"){var last_year_holiday_from=(last_year_holiday[last_year_holiday.length-4]-1)*100+last_year_holiday[last_year_holiday.length-3];var last_year_holiday_to=(last_year_holiday[last_year_holiday.length-2]-1)*100+last_year_holiday[last_year_holiday.length-1];if(last_year_holiday_from>last_year_holiday_to&&date_num<=last_year_holiday_to){return[true,new Date(date.getFullYear(),last_year_holiday[last_year_holiday.length-2]-1,last_year_holiday[last_year_holiday.length-1]+1),applying_holidays[applying_holidays.length-1].name]}else{return[false,new Date(date.getFullYear(),holiday[0+h]-1,holiday[1+h])]}}else{return[false,new Date(date.getFullYear(),holiday[0+h]-1,holiday[1+h])]}}else if(holiday_from<=date_num&&(date_num<=holiday_to||holiday_ends_next_year)){return[true,new Date(date.getFullYear()+holiday_ends_next_year,holiday[2+h]-1,holiday[3+h]+1),applying_holidays[i].name]}else if(holiday_to_plus===date_num){if(h+4<holiday.length){h+=4;return[false,new Date(date.getFullYear(),holiday[0+h]-1,holiday[1+h])]}else{return[false,new Date(date.getFullYear(),holiday[2+h]-1,holiday[3+h]+2)]}}}}throw formatLibraryBugMessage(t("no SH definition",{name:"",year:date.getFullYear()}),"library bug PR only")}}(applying_holidays);if(push_to_weekday)rule.weekday.push(selector);else rule.holiday.push(selector);at+=1}}else if(matchTokens(tokens,at,"weekday")){return parseWeekdayRange(tokens,at,rule,true,nrule)}else if(matchTokens(tokens,at-1,",")){throw formatWarnErrorMessage(nrule,at-1,t("additional rule no sense"))}else{throw formatWarnErrorMessage(nrule,at,t("unexpected token holiday",{token:tokens[at][1]}))}if(!matchTokens(tokens,at,","))break}return at}function getValueForDate(date,include_year){return(include_year?date.getFullYear()*1e4:0)+date.getMonth()*100+date.getDate()}function getSHForYear(SH_hash,year,fatal){if(typeof fatal!=="boolean"){fatal=true}var holiday=SH_hash[year];if(typeof holiday==="undefined"){holiday=SH_hash["default"];if(typeof holiday==="undefined"){if(fatal){throw formatLibraryBugMessage(t("no SH definition",{name:SH_hash.name+" ",year:year}),"library bug PR only")}else{return undefined}}}return holiday}function getMatchingHoliday(type_of_holidays){if(typeof location_cc!=="string"){throw t("no country code")}if(!holiday_definitions[location_cc]){throw formatLibraryBugMessage(t("no holiday definition",{name:type_of_holidays,cc:location_cc}),"library bug PR only")}var matching_holiday=[];if(typeof location_state==="string"&&typeof holiday_definitions[location_cc][location_state]==="object"&&typeof holiday_definitions[location_cc][location_state][type_of_holidays]==="object"){var country_holidays=holiday_definitions[location_cc][type_of_holidays]||[];var state_holidays=holiday_definitions[location_cc][location_state][type_of_holidays];if(type_of_holidays==="PH"){matching_holiday=state_holidays}else if(!country_holidays.length){matching_holiday=state_holidays}else{var country_holiday_names=country_holidays.map((function(country_holiday){return country_holiday.name}));var matching_holiday=[];matching_holiday.push.apply(matching_holiday,country_holidays);matching_holiday.push.apply(matching_holiday,state_holidays.filter((function is_not_a_country_holiday(state_holiday){return country_holiday_names.indexOf(state_holiday.name)===-1})));matching_holiday.sort((function(h1,h2){var h1_year=Object.keys(h1).find((function(k){return k!=="name"}));var h2_year=Object.keys(h2).find((function(k){return k!=="name"}));var h1_date=h1[h1_year];var h2_date=h2[h2_year];return h1_date[0]-h2_date[0]||h1_date[1]-h2_date[1]}))}}else if(holiday_definitions[location_cc][type_of_holidays]){var applying_holidays_for_country=holiday_definitions[location_cc][type_of_holidays];switch(type_of_holidays){case"PH":applying_holidays_for_country.forEach((function(holiday_item){if("only_states"in holiday_item){if(-1===holiday_item.only_states.indexOf(location_state)){return}}matching_holiday.push(holiday_item)}));break;case"SH":matching_holiday=applying_holidays_for_country;break}}else{throw formatLibraryBugMessage(t("no holiday definition state",{name:type_of_holidays,cc:location_cc,state:location_state}),"library bug PR only")}if(matching_holiday.length===0){throw formatLibraryBugMessage(t("no holiday definition",{name:type_of_holidays,cc:location_cc}),"library bug PR only")}return matching_holiday}function getMovableEventsForYear(year){var C=Math.floor(year/100);var N=year-19*Math.floor(year/19);var K=Math.floor((C-17)/25);var I=C-Math.floor(C/4)-Math.floor((C-K)/3)+19*N+15;I=I-30*Math.floor(I/30);I=I-Math.floor(I/28)*(1-Math.floor(I/28)*Math.floor(29/(I+1))*Math.floor((21-N)/11));var J=year+Math.floor(year/4)+I+2-C+Math.floor(C/4);J=J-7*Math.floor(J/7);var L=I-J;var M=3+Math.floor((L+40)/44);var D=L+28-31*Math.floor(M/4);var oA=year%4;var oB=year%7;var oC=year%19;var oD=(19*oC+15)%30;var oE=(2*oA+4*oB-oD+34)%7;var oF=oD+oE;var oDate;if(oF<9){oDate=new Date(year,4-1,oF+4)}else{if(oF+4<31){oDate=new Date(year,4-1,oF+4)}else{oDate=new Date(year,5-1,oF-26)}}var lastFebruaryDay=new Date(year,2,0);var lastFebruarySunday=lastFebruaryDay.getDate()-lastFebruaryDay.getDay();var may_24=new Date(year,4,24);var victoriaDay=24-(6+may_24.getDay())%7;var july_1=new Date(year,6,1);var canadaDay=july_1.getDay()===0?2:1;function firstWeekdayOfMonth(month,weekday){var first=new Date(year,month,1);return 1+(7+weekday-first.getDay())%7}function lastWeekdayOfMonth(month,weekday){var last=new Date(year,month+1,0);var offset=(7+last.getDay()-weekday)%7;return last.getDate()-offset}function getDateOfWeekdayInDateRange(weekday,start_date){var days_to_dest_date=weekday-start_date.getDay();if(days_to_dest_date<0){days_to_dest_date+=7}start_date.setDate(start_date.getDate()+days_to_dest_date);return start_date}function getDateOfNextWeekdayRange(first_weekday,last_weekday,start_date){if(first_weekday>=last_weekday){throw formatLibraryBugMessage("Not implemented yet.")}if(first_weekday<=start_date.getDay()&&start_date.getDay()<=last_weekday){return start_date}else{var days_to_dest_date=first_weekday-start_date.getDay();if(days_to_dest_date<0){days_to_dest_date+=7}start_date.setDate(start_date.getDate()+days_to_dest_date);return start_date}}return{easter:new Date(year,M-1,D),"orthodox easter":oDate,victoriaDay:new Date(year,4,victoriaDay),canadaDay:new Date(year,6,canadaDay),firstJanuaryMonday:new Date(year,0,firstWeekdayOfMonth(0,1)),firstFebruaryMonday:new Date(year,1,firstWeekdayOfMonth(1,1)),lastFebruarySunday:new Date(year,1,lastFebruarySunday),firstMarchMonday:new Date(year,2,firstWeekdayOfMonth(2,1)),firstAprilMonday:new Date(year,3,firstWeekdayOfMonth(3,1)),firstMayMonday:new Date(year,4,firstWeekdayOfMonth(4,1)),firstJuneMonday:new Date(year,5,firstWeekdayOfMonth(5,1)),firstJulyMonday:new Date(year,6,firstWeekdayOfMonth(6,1)),firstAugustMonday:new Date(year,7,firstWeekdayOfMonth(7,1)),firstSeptemberMonday:new Date(year,8,firstWeekdayOfMonth(8,1)),firstSeptemberTuesday:new Date(year,8,firstWeekdayOfMonth(8,2)),firstSeptemberSunday:new Date(year,8,firstWeekdayOfMonth(8,0)),firstOctoberMonday:new Date(year,9,firstWeekdayOfMonth(9,1)),firstNovemberMonday:new Date(year,10,firstWeekdayOfMonth(10,1)),firstNovemberTuesday:new Date(year,10,firstWeekdayOfMonth(10,2)),firstMarchTuesday:new Date(year,2,firstWeekdayOfMonth(2,2)),firstAugustTuesday:new Date(year,7,firstWeekdayOfMonth(7,2)),firstAugustFriday:new Date(year,7,firstWeekdayOfMonth(7,5)),firstNovemberThursday:new Date(year,10,firstWeekdayOfMonth(10,4)),lastMayMonday:new Date(year,4,lastWeekdayOfMonth(4,1)),lastMarchMonday:new Date(year,2,lastWeekdayOfMonth(2,1)),lastAprilMonday:new Date(year,3,lastWeekdayOfMonth(3,1)),lastAprilFriday:new Date(year,3,lastWeekdayOfMonth(3,5)),lastAugustMonday:new Date(year,7,lastWeekdayOfMonth(7,1)),lastSeptemberMonday:new Date(year,8,lastWeekdayOfMonth(8,1)),lastSeptemberFriday:new Date(year,8,lastWeekdayOfMonth(8,5)),lastOctoberMonday:new Date(year,9,lastWeekdayOfMonth(9,1)),lastOctoberFriday:new Date(year,9,lastWeekdayOfMonth(9,5)),nextSaturday20Jun:getDateOfWeekdayInDateRange(6,new Date(year,5,20)),nextSaturday31Oct:getDateOfWeekdayInDateRange(6,new Date(year,9,31)),nextWednesday16Nov:getDateOfWeekdayInDateRange(3,new Date(year,10,16)),"nextMo-Fr17March":getDateOfNextWeekdayRange(1,5,new Date(year,2,17)),"nextMo-Sa01May":getDateOfNextWeekdayRange(1,6,new Date(year,4,1)),"nextMo-Sa07August":getDateOfNextWeekdayRange(1,6,new Date(year,7,7)),"nextMo-Sa25December":getDateOfNextWeekdayRange(1,6,new Date(year,11,25))}}function getApplyingHolidaysForYear(applying_holidays,year,add_days){var movableDays=getMovableEventsForYear(year);var sorted_holidays=[];var next_holiday;applying_holidays.forEach((function(holiday_item){if("fixed_date"in holiday_item){next_holiday=new Date(year,holiday_item.fixed_date[0]-1,holiday_item.fixed_date[1])}else if("variable_date"in holiday_item){var selected_movableDay=movableDays[holiday_item.variable_date];if(!selected_movableDay){throw t("movable no formula",{name:holiday_item.name})}var date_offset=0;if("offset"in holiday_item){date_offset=holiday_item.offset}next_holiday=new Date(selected_movableDay.getFullYear(),selected_movableDay.getMonth(),selected_movableDay.getDate()+date_offset);if(year!==next_holiday.getFullYear()){throw t("movable not in year",{name:holiday_item.variable_date,days:date_offset})}}else{throw formatLibraryBugMessage("Unexpected object: "+JSON.stringify(holiday_item,null,"    "))}if(add_days[0]){next_holiday.setDate(next_holiday.getDate()+add_days[0])}sorted_holidays.push([next_holiday,holiday_item.name])}));sorted_holidays=sorted_holidays.sort((function(a,b){if(a[0].getTime()<b[0].getTime())return-1;if(a[0].getTime()>b[0].getTime())return 1;return 0}));return sorted_holidays}function parseYearRange(tokens,at){tokens[at][3]="year";for(;at<tokens.length;at++){if(matchTokens(tokens,at,"year")){var is_range=false,has_period,period;if(matchTokens(tokens,at+1,"-","year","/","number")){is_range=true;has_period=true;period=parseInt(tokens[at+4][0]);checkPeriod(at+4,period,"year")}else{is_range=matchTokens(tokens,at+1,"-","year");has_period=matchTokens(tokens,at+1,"/","number");if(has_period){period=parseInt(tokens[at+2][0]);checkPeriod(at+2,period,"year","no_end_year")}else if(matchTokens(tokens,at+1,"+")){period=1;has_period=2}}var year_from=parseInt(tokens[at][0]);if(is_range&&tokens[at+2][0]<=year_from){if(tokens[at+2][0]===year_from){throw formatWarnErrorMessage(nrule,at,t("year range one year",{year:year_from}))}else{throw formatWarnErrorMessage(nrule,at,t("year range reverse"))}}if(!is_range&&year_from<(new Date).getFullYear()){parsing_warnings.push([nrule,at,t("year past")])}if(is_range&&tokens[at+2][0]<(new Date).getFullYear()){parsing_warnings.push([nrule,at+2,t("year past")])}rule.year.push(function(tokens,at,year_from,is_range,has_period,period){return function(date){var ouryear=date.getFullYear();var year_to=is_range?parseInt(tokens[at+2][0]):year_from;if(ouryear<year_from){return[false,new Date(year_from,0,1)]}else if(has_period){if(year_from<=ouryear){if(is_range&&ouryear>year_to)return[false];if(period>0){if((ouryear-year_from)%period===0){return[true,new Date(ouryear+1,0,1)]}else{return[false,new Date(ouryear+period-1,0,1)]}}}}else if(is_range){if(ouryear<=year_to)return[true,new Date(year_to+1,0,1)]}else if(ouryear===year_from){return[true]}return[false]}}(tokens,at,year_from,is_range,has_period,period));at+=1+(is_range?2:0)+(has_period?has_period===2?1:2:0)}else if(matchTokens(tokens,at-1,",")){throw formatWarnErrorMessage(nrule,at-1,t("additional rule no sense"))}else{throw formatWarnErrorMessage(nrule,at,t("unexpected token year range",{token:tokens[at][1]}))}if(!matchTokens(tokens,at,","))break}return at}function parseWeekRange(tokens,at){for(;at<tokens.length;at++){if(matchTokens(tokens,at,"week")){at++}if(matchTokens(tokens,at,"number")){var is_range=matchTokens(tokens,at+1,"-","number"),period=0;var week_from=tokens[at][0];var week_to=is_range?tokens[at+2][0]:week_from;if(week_from>week_to){throw formatWarnErrorMessage(nrule,at+2,t("week range reverse"))}if(week_from<1){throw formatWarnErrorMessage(nrule,at,t("week negative"))}if(week_to>53){throw formatWarnErrorMessage(nrule,is_range?at+2:at,t("week exceed"))}if(is_range){period=matchTokens(tokens,at+3,"/","number");if(period){period=tokens[at+4][0];tokens[at+4][4]="positive_number";if(period<2){throw formatWarnErrorMessage(nrule,at+4,t("week period less than 2",{weekfrom:week_from,weekto:week_to,period:period}))}else if(period>26){throw formatWarnErrorMessage(nrule,at+4,t("week period greater than 26",{weekfrom:week_from}))}}}if(week_stable&&(!(week_from<=1&&week_to>=53)||period)){week_stable=false}if(!period&&week_from===1&&week_to===53){rule.week.push((function(){return[true]}))}else{rule.week.push(function(week_from,week_to,period){return function(date){var ourweek=getWeekNumber(date);if(ourweek<week_from){return[false,getNextDateOfISOWeek(week_from,date)]}if(ourweek>week_to){return[false,getNextDateOfISOWeek(week_from,date)]}if(period){var in_period=(ourweek-week_from)%period===0;if(in_period){return[true,getNextDateOfISOWeek(ourweek+1,date)]}else{return[false,getNextDateOfISOWeek(ourweek+period-1,date)]}}return[true,getNextDateOfISOWeek(week_to===53?1:week_to+1,date)]}}(week_from,week_to,period))}at+=1+(is_range?2:0)+(period?2:0)}else if(matchTokens(tokens,at-1,",")){throw formatWarnErrorMessage(nrule,at-1,t("additional rule no sense"))}else{throw formatWarnErrorMessage(nrule,at,t("unexpected token week range",{token:tokens[at][1]}))}if(!matchTokens(tokens,at,","))break}return at}function getWeekNumber(d){d=new Date(+d);d.setHours(0,0,0,0);d.setDate(d.getDate()+4-(d.getDay()||7));var yearStart=new Date(d.getFullYear(),0,1);return Math.ceil(((d-yearStart)/864e5+1)/7)}function getDateOfISOWeek(w,year){var simple=new Date(year,0,1+(w-1)*7);var dow=simple.getDay();var ISOweekStart=simple;if(dow<=4)ISOweekStart.setDate(simple.getDate()-simple.getDay()+1);else ISOweekStart.setDate(simple.getDate()+8-simple.getDay());return ISOweekStart}function getNextDateOfISOWeek(week,date){var next_date;for(var i=-1;i<=1;i++){next_date=getDateOfISOWeek(week,date.getFullYear()+i);if(next_date.getTime()>date.getTime()){return next_date}}throw formatLibraryBugMessage()}function parseMonthRange(tokens,at,push_to_monthday,in_selector){if(!in_selector)tokens[at][3]="month";for(;at<tokens.length;at++){if(matchTokens(tokens,at,"month","number")&&!matchTokens(tokens,at+2,"timesep","number")){return parseMonthdayRange(tokens,at,nrule,true)}else if(matchTokens(tokens,at,"month")){var is_range=matchTokens(tokens,at+1,"-","month");var month_from=tokens[at][0];var month_to=is_range?tokens[at+2][0]:month_from;if(is_range&&week_stable){if(month_from!==(month_to+1)%12)week_stable=false}else{week_stable=false}var inside=true;if(month_to<month_from){var tmp=month_to;month_to=month_from-1;month_from=tmp+1;inside=false}var selector=function(month_from,month_to,inside){return function(date){var ourmonth=date.getMonth();if(month_to<month_from){return[!inside]}if(ourmonth<month_from||ourmonth>month_to){return[!inside,dateAtNextMonth(date,month_from)]}else{return[inside,dateAtNextMonth(date,month_to+1)]}}}(month_from,month_to,inside);if(push_to_monthday===true)rule.monthday.push(selector);else rule.month.push(selector);at+=is_range?3:1}else{throw formatWarnErrorMessage(nrule,at,t("unexpected token month range",{token:tokens[at][1]}))}if(!matchTokens(tokens,at,","))break}return at}function dateAtNextMonth(date,month){return new Date(date.getFullYear(),month<date.getMonth()?month+12:month)}function parseMonthdayRange(tokens,at,nrule,push_to_month){if(!push_to_month)tokens[at][3]="month";for(;at<tokens.length;at++){var has_year=[],has_month=[],has_event=[],has_calc=[],has_constrained_weekday=[];has_year[0]=matchTokens(tokens,at,"year");has_month[0]=matchTokens(tokens,at+has_year[0],"month","number");has_event[0]=matchTokens(tokens,at+has_year[0],"event");if(has_event[0])has_calc[0]=getMoveDays(tokens,at+has_year[0]+1,200,"event like easter");var at_range_sep;if(matchTokens(tokens,at+has_year[0],"month","weekday","[")){has_constrained_weekday[0]=getConstrainedWeekday(tokens,at+has_year[0]+3);has_calc[0]=getMoveDays(tokens,has_constrained_weekday[0][1],6,"constrained weekdays");at_range_sep=has_constrained_weekday[0][1]+(typeof has_calc[0]==="object"&&has_calc[0][1]?3:0)}else{at_range_sep=at+has_year[0]+(has_event[0]?typeof has_calc[0]==="object"&&has_calc[0][1]?4:1:2)}var at_sec_event_or_month;if((has_month[0]||has_event[0]||has_constrained_weekday[0])&&matchTokens(tokens,at_range_sep,"-")){has_year[1]=matchTokens(tokens,at_range_sep+1,"year");at_sec_event_or_month=at_range_sep+1+has_year[1];has_month[1]=matchTokens(tokens,at_sec_event_or_month,"month","number");if(!has_month[1]){has_event[1]=matchTokens(tokens,at_sec_event_or_month,"event");if(has_event[1]){has_calc[1]=getMoveDays(tokens,at_sec_event_or_month+1,366,"event like easter")}else if(matchTokens(tokens,at_sec_event_or_month,"month","weekday","[")){has_constrained_weekday[1]=getConstrainedWeekday(tokens,at_sec_event_or_month+3);has_calc[1]=getMoveDays(tokens,has_constrained_weekday[1][1],6,"constrained weekdays")}}}if(has_year[0]===has_year[1]&&(has_month[1]||has_event[1]||has_constrained_weekday[1])){if(has_month[0])checkIfDateIsValid(tokens[at+has_year[0]][0],tokens[at+has_year[0]+1][0],nrule,at+has_year[0]+1);if(has_month[1])checkIfDateIsValid(tokens[at_sec_event_or_month][0],tokens[at_sec_event_or_month+1][0],nrule,at_sec_event_or_month+1);var selector=function(tokens,at,nrule,has_year,has_event,has_calc,at_sec_event_or_month,has_constrained_weekday){return function(date){var start_of_next_year=new Date(date.getFullYear()+1,0,1);var movableDays,from_date;if(has_event[0]){movableDays=getMovableEventsForYear(has_year[0]?parseInt(tokens[at][0]):date.getFullYear());from_date=movableDays[tokens[at+has_year[0]][0]];if(typeof has_calc[0]==="object"&&has_calc[0][1]){var from_year_before_calc=from_date.getFullYear();from_date.setDate(from_date.getDate()+has_calc[0][0]);if(from_year_before_calc!==from_date.getFullYear())throw formatWarnErrorMessage(nrule,at+has_year[0]+has_calc[0][1]*3,t("movable not in year",{name:tokens[at+has_year[0]][0],days:has_calc[0][0]}))}}else if(has_constrained_weekday[0]){from_date=getDateForConstrainedWeekday(has_year[0]?tokens[at][0]:date.getFullYear(),tokens[at+has_year[0]][0],tokens[at+has_year[0]+1][0],has_constrained_weekday[0],has_calc[0])}else{from_date=new Date(has_year[0]?tokens[at][0]:date.getFullYear(),tokens[at+has_year[0]][0],tokens[at+has_year[0]+1][0])}var to_date;if(has_event[1]){movableDays=getMovableEventsForYear(has_year[1]?parseInt(tokens[at_sec_event_or_month-1][0]):date.getFullYear());to_date=movableDays[tokens[at_sec_event_or_month][0]];if(typeof has_calc[1]==="object"&&has_calc[1][1]){var to_year_before_calc=to_date.getFullYear();to_date.setDate(to_date.getDate()+has_calc[1][0]);if(to_year_before_calc!==to_date.getFullYear()){throw formatWarnErrorMessage(nrule,at_sec_event_or_month+has_calc[1][1],t("movable not in year",{name:tokens[at_sec_event_or_month][0],days:has_calc[1][0]}))}}}else if(has_constrained_weekday[1]){to_date=getDateForConstrainedWeekday(has_year[1]?tokens[at_sec_event_or_month-1][0]:date.getFullYear(),tokens[at_sec_event_or_month][0],tokens[at_sec_event_or_month+1][0],has_constrained_weekday[1],has_calc[1])}else{to_date=new Date(has_year[1]?tokens[at_sec_event_or_month-1][0]:date.getFullYear(),tokens[at_sec_event_or_month][0],tokens[at_sec_event_or_month+1][0]+1)}var inside=true;if(to_date<from_date){var tmp=to_date;to_date=from_date;from_date=tmp;inside=false}if(date.getTime()<from_date.getTime()){return[!inside,from_date]}else if(date.getTime()<to_date.getTime()){return[inside,to_date]}else{if(has_year[0]){return[!inside]}else{return[!inside,start_of_next_year]}}}}(tokens,at,nrule,has_year,has_event,has_calc,at_sec_event_or_month,has_constrained_weekday);if(push_to_month===true)rule.month.push(selector);else rule.monthday.push(selector);at=(has_constrained_weekday[1]?has_constrained_weekday[1][1]:at_sec_event_or_month+(has_event[1]?1:2))+(typeof has_calc[1]==="object"?has_calc[1][1]:0)}else if(has_month[0]){has_year=has_year[0];var year=tokens[at][0];var month=tokens[at+has_year][0];var first_round=true;do{var range_from=tokens[at+1+has_year][0];var is_range=matchTokens(tokens,at+2+has_year,"-","number");var period=undefined;var range_to=tokens[at+has_year+(is_range?3:1)][0]+1;if(is_range&&matchTokens(tokens,at+has_year+4,"/","number")){period=tokens[at+has_year+5][0];tokens[at+has_year+5][4]="positive_number";checkPeriod(at+has_year+5,period,"day")}if(first_round){var at_timesep_if_monthRange=at+has_year+1+(is_range?2:0)+(period?2:0)+!(is_range||period);if(matchTokens(tokens,at_timesep_if_monthRange,"timesep","number")&&(matchTokens(tokens,at_timesep_if_monthRange+2,"+")||matchTokens(tokens,at_timesep_if_monthRange+2,"-")||oh_mode!==0)){return parseMonthRange(tokens,at,true,true)}}if(range_to<range_from)throw formatWarnErrorMessage(nrule,at+has_year+3,t("day range reverse"));checkIfDateIsValid(month,range_from,nrule,at+1+has_year);checkIfDateIsValid(month,range_to-1,nrule,at+has_year+(is_range?3:1));var selector=function(year,has_year,month,range_from,range_to,period){return function(date){var start_of_next_year=new Date(date.getFullYear()+1,0,1);var from_date=new Date(has_year?year:date.getFullYear(),month,range_from);if(month===1&&range_from!==from_date.getDate())return[false];var to_date=new Date(from_date.getFullYear(),month,range_to);if(month===1&&is_range&&range_to!==to_date.getDate())return[false];if(date.getTime()<from_date.getTime())return[false,from_date];else if(date.getTime()>=to_date.getTime())return[false,start_of_next_year];else if(!period)return[true,to_date];var nday=Math.floor((date.getTime()-from_date.getTime())/msec_in_day);var in_period=nday%period;if(in_period===0)return[true,new Date(date.getFullYear(),date.getMonth(),date.getDate()+1)];else return[false,new Date(date.getFullYear(),date.getMonth(),date.getDate()+period-in_period)]}}(year,has_year,month,range_from,range_to,period);if(push_to_month===true)rule.month.push(selector);else rule.monthday.push(selector);at+=2+has_year+(is_range?2:0)+(period?2:0);first_round=false}while(matchTokens(tokens,at,",","number"))}else if(has_event[0]){var selector=function(tokens,at,nrule,has_year,add_days){return function(date){var movableDays=getMovableEventsForYear(has_year?tokens[at][0]:date.getFullYear());var event_date=movableDays[tokens[at+has_year][0]];if(!event_date)throw t("movable no formula",{name:tokens[at+has_year][0]});if(add_days[0]){event_date.setDate(event_date.getDate()+add_days[0]);if(date.getFullYear()!==event_date.getFullYear())throw formatWarnErrorMessage(nrule,at+has_year+add_days[1],t("movable not in year",{name:tokens[at+has_year][0],days:add_days[0]}))}if(date.getTime()<event_date.getTime())return[false,event_date];else if(event_date.getMonth()*100+event_date.getDate()===date.getMonth()*100+date.getDate())return[true,new Date(date.getFullYear(),date.getMonth(),date.getDate()+1)];else return[false,new Date(date.getFullYear()+1,0,1)]}}(tokens,at,nrule,has_year[0],has_calc[0]);if(push_to_month===true)rule.month.push(selector);else rule.monthday.push(selector);at+=has_year[0]+has_event[0]+(typeof has_calc[0][1]==="number"&&has_calc[0][1]?3:0)}else if(has_constrained_weekday[0]){at=parseMonthRange(tokens,at)}else if(matchTokens(tokens,at,"month")){return parseMonthRange(tokens,at,true,true)}else{return at}if(!matchTokens(tokens,at,","))break}return at}this.getStatePair=function(date){var resultstate=false;var changedate;var unknown=false;var comment;var match_rule;var date_matching_rules=[];for(var nrule=0;nrule<rules.length;nrule++){var matching_date_rule=true;for(var ndateselector=0;ndateselector<rules[nrule].date.length;ndateselector++){var dateselectors=rules[nrule].date[ndateselector];var has_matching_selector=false;for(var datesel=0;datesel<dateselectors.length;datesel++){var res=dateselectors[datesel](date);if(res[0]){has_matching_selector=true;if(typeof res[2]==="string"){comment=[res[2],nrule]}}if(typeof changedate==="undefined"||typeof res[1]==="object"&&res[1].getTime()<changedate.getTime())changedate=res[1]}if(!has_matching_selector){matching_date_rule=false;break}}if(matching_date_rule){if((rules[nrule].date.length>0||nrule>0&&rules[nrule].meaning&&rules[nrule-1].date.length===0)&&(rules[nrule].meaning||rules[nrule].unknown)&&!rules[nrule].wrapped&&!rules[nrule].additional&&!rules[nrule].fallback){date_matching_rules=[]}date_matching_rules.push(nrule)}}for(var nrule=0;nrule<date_matching_rules.length;nrule++){var rule=date_matching_rules[nrule];if(rules[rule].time.length===0){if(!rules[rule].fallback||rules[rule].fallback&&!(resultstate||unknown)){resultstate=rules[rule].meaning;unknown=rules[rule].unknown;match_rule=rule}}for(var timesel=0;timesel<rules[rule].time.length;timesel++){var res=rules[rule].time[timesel](date);if(res[0]){if(!rules[rule].fallback||rules[rule].fallback&&!(resultstate||unknown)){resultstate=rules[rule].meaning;unknown=rules[rule].unknown;match_rule=rule;if(typeof comment==="object"&&comment[0]===t("open end"))comment=undefined;if(res[2]===true&&(resultstate||unknown)){comment=[t("open end"),match_rule];resultstate=false;unknown=true;if(typeof rules[rule].time[timesel+1]==="function"){var next_res=rules[rule].time[timesel+1](date);if(!next_res[0]&&typeof next_res[1]==="object"&&rules[rule].time[timesel](new Date(date.getTime()-1))[0]){resultstate=false;unknown=false}}}if(rules[rule].fallback){if(typeof changedate==="undefined"||typeof res[1]!=="undefined"&&res[1]<changedate){changedate=res[1]}}}}if(typeof changedate==="undefined"||typeof res[1]==="object"&&res[1]<changedate)changedate=res[1]}}if(typeof rules[match_rule]==="object"&&typeof rules[match_rule].comment==="string"){comment=rules[match_rule].comment}else if(typeof comment==="object"){if(comment[1]===match_rule){comment=comment[0]}else{comment=undefined}}return[resultstate,changedate,unknown,comment,match_rule]};function prettifySelector(tokens,selector_start,selector_end,selector_type,conf){var prettified_value="";var at=selector_start;while(at<=selector_end){if(matchTokens(tokens,at,"weekday")){if(!conf.leave_weekday_sep_one_day_betw&&at-selector_start>1&&(matchTokens(tokens,at-1,",")||matchTokens(tokens,at-1,"-"))&&matchTokens(tokens,at-2,"weekday")&&tokens[at][0]===(tokens[at-2][0]+1)%7){prettified_value=prettified_value.substring(0,prettified_value.length-1)+conf.sep_one_day_between}prettified_value+=weekdays[tokens[at][0]]}else if(at-selector_start>0&&selector_type==="time"&&matchTokens(tokens,at-1,"timesep")&&matchTokens(tokens,at,"number")){prettified_value+=(tokens[at][0]<10?"0":"")+tokens[at][0].toString()}else if(selector_type==="time"&&conf.zero_pad_hour&&at!==tokens.length&&matchTokens(tokens,at,"number")&&matchTokens(tokens,at+1,"timesep")){prettified_value+=(tokens[at][0]<10?tokens[at][0]===0&&conf.one_zero_if_hour_zero?"":"0":"")+tokens[at][0].toString()}else if(selector_type==="time"&&at+2<=selector_end&&matchTokens(tokens,at,"number")&&matchTokens(tokens,at+1,"-")&&matchTokens(tokens,at+2,"number")){prettified_value+=(tokens[at][0]<10?tokens[at][0]===0&&conf.one_zero_if_hour_zero?"":"0":"")+tokens[at][0].toString();prettified_value+=":00-"+(tokens[at+2][0]<10?"0":"")+tokens[at+2][0].toString()+":00";at+=2}else if(matchTokens(tokens,at,"comment")){prettified_value+='"'+tokens[at][0].toString()+'"'}else if(matchTokens(tokens,at,"closed")){prettified_value+=conf.leave_off_closed?tokens[at][0]:conf.keyword_for_off_closed}else if(at-selector_start>0&&matchTokens(tokens,at,"number")&&(selector_type==="month"||selector_type==="week")){prettified_value+=(matchTokens(tokens,at-1,"month")||matchTokens(tokens,at-1,"week")?" ":"")+(conf.zero_pad_month_and_week_numbers&&tokens[at][4]!=="positive_number"&&tokens[at][0]<10?"0":"")+tokens[at][0]}else if(at-selector_start>0&&matchTokens(tokens,at,"month")&&matchTokens(tokens,at-1,"year")){prettified_value+=" "+months[[tokens[at][0]]]}else if(at-selector_start>0&&matchTokens(tokens,at,"event")&&matchTokens(tokens,at-1,"year")){prettified_value+=" "+tokens[at][0]}else if(matchTokens(tokens,at,"month")){prettified_value+=months[[tokens[at][0]]];if(at+1<=selector_end&&matchTokens(tokens,at+1,"weekday"))prettified_value+=" "}else if(at+2<=selector_end&&(matchTokens(tokens,at,"-")||matchTokens(tokens,at,"+"))&&matchTokens(tokens,at+1,"number","calcday")){prettified_value+=" "+tokens[at][0]+tokens[at+1][0]+" day"+(Math.abs(tokens[at+1][0])===1?"":"s");at+=2}else if(at===selector_end&&selector_type==="weekday"&&tokens[at][0]===":");else if(at===selector_end&&selector_type==="time"&&tokens[at][0]===",");else{prettified_value+=tokens[at][0].toString()}at++}return prettified_value}this.getState=function(date){var it=this.getIterator(date);return it.getState()};this.getUnknown=function(date){var it=this.getIterator(date);return it.getUnknown()};this.getStateString=function(date,past){var it=this.getIterator(date);return it.getStateString(past)};this.getComment=function(date){var it=this.getIterator(date);return it.getComment()};this.getMatchingRule=function(date){var it=this.getIterator(date);return it.getMatchingRule()};this.getWarnings=function(){var it=this.getIterator();return getWarnings(it)};this.prettifyValue=function(argument_hash){this.getWarnings();return prettifyValue(argument_hash)};this.getNextChange=function(date,maxdate){var it=this.getIterator(date);if(!it.advance(maxdate))return undefined;return it.getDate()};this.isWeekStable=function(){return week_stable};this.isEqualTo=function(second_oh_object,start_date){if(typeof start_date==="undefined"){var start_date=new Date}var datelimit;if(this.isWeekStable()&&second_oh_object.isWeekStable()){datelimit=new Date(start_date.getTime()+msec_in_day*10)}else{datelimit=new Date(start_date.getTime()+msec_in_day*366*5)}var first_it=this.getIterator(start_date);var second_it=second_oh_object.getIterator(start_date);while(first_it.advance(datelimit)){second_it.advance(datelimit);var not_equal=[];if(first_it.getDate().getTime()!==second_it.getDate().getTime()){not_equal.push("getDate")}if(first_it.getState()!==second_it.getState()){not_equal.push("getState")}if(first_it.getUnknown()!==second_it.getUnknown()){not_equal.push("getUnknown")}if(first_it.getComment()!==second_it.getComment()){not_equal.push("getComment")}if(not_equal.length){var deviation_for_time={};deviation_for_time[first_it.getDate().getTime()]=not_equal;return[false,{matching_rule:first_it.getMatchingRule(),matching_rule_other:second_it.getMatchingRule(),deviation_for_time:deviation_for_time}]}}return[true]};this.getOpenIntervals=function(from,to){var res=[];var it=this.getIterator(from);if(it.getState()||it.getUnknown()){res.push([from,undefined,it.getUnknown(),it.getComment()])}while(it.advance(to)){if(it.getState()||it.getUnknown()){if(res.length!==0&&typeof res[res.length-1][1]==="undefined"){res[res.length-1][1]=it.getDate()}res.push([it.getDate(),undefined,it.getUnknown(),it.getComment()])}else{if(res.length!==0&&typeof res[res.length-1][1]==="undefined"){res[res.length-1][1]=it.getDate()}}}if(res.length>0&&typeof res[res.length-1][1]==="undefined"){res[res.length-1][1]=to}return res};this.getOpenDuration=function(from,to){var open=0;var unknown=0;var it=this.getIterator(from);var prevdate=it.getState()||it.getUnknown()?from:undefined;var prevstate=it.getState();var prevunknown=it.getUnknown();while(it.advance(to)){if(it.getState()||it.getUnknown()){if(typeof prevdate==="object"){if(prevunknown)unknown+=it.getDate().getTime()-prevdate.getTime();else if(prevstate)open+=it.getDate().getTime()-prevdate.getTime()}prevdate=it.getDate();prevstate=it.getState();prevunknown=it.getUnknown()}else{if(typeof prevdate==="object"){if(prevunknown)unknown+=it.getDate().getTime()-prevdate.getTime();else open+=it.getDate().getTime()-prevdate.getTime();prevdate=undefined}}}if(typeof prevdate==="object"){if(prevunknown)unknown+=to.getTime()-prevdate.getTime();else open+=to.getTime()-prevdate.getTime()}return[open,unknown]};this.getIterator=function(date){return new function(oh){if(typeof date==="undefined")date=new Date;var prevstate=[undefined,date,undefined,undefined,undefined];var state=oh.getStatePair(date);this.getDate=function(){return prevstate[1]};this.setDate=function(date){if(typeof date!=="object")throw t("date parameter needed");prevstate=[undefined,date,undefined,undefined,undefined];state=oh.getStatePair(date)};this.getState=function(){return state[0]};this.getUnknown=function(){return state[2]};this.getStateString=function(past){return state[0]?"open":state[2]?"unknown":past?"closed":"close"};this.getComment=function(){return state[3]};this.getMatchingRule=function(){if(typeof state[4]==="undefined")return undefined;return rules[state[4]].build_from_token_rule[2]};this.advance=function(datelimit){if(typeof datelimit==="undefined"){datelimit=new Date(prevstate[1].getTime()+msec_in_day*366*5)}else if(datelimit.getTime()<=prevstate[1].getTime()){return false}do{if(typeof state[1]==="undefined"){return false}if(state[1].getTime()<=prevstate[1].getTime()){throw"Fatal: infinite loop in nextChange"}if(state[1].getTime()>=datelimit.getTime()){return false}prevstate=state;state=oh.getStatePair(prevstate[1])}while(state[0]===prevstate[0]&&state[2]===prevstate[2]&&state[3]===prevstate[3]);return true}}(this)}}return index}));