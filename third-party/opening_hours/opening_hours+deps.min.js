!function(e,a){"object"==typeof exports&&"undefined"!=typeof module?module.exports=a():"function"==typeof define&&define.amd?define(a):(e="undefined"!=typeof globalThis?globalThis:e||self).opening_hours=a()}(this,(function(){"use strict";var e={PH:[{name:"Año Nuevo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-48},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Día Nacional de la Memoria por la Verdad y la Justicia",fixed_date:[3,24]},{name:"Viernes Santo",variable_date:"easter",offset:-2},{name:"Feriado con fines turísticos",fixed_date:[4,1]},{name:"Día del Veterano y de los Caídos en la Guerra de Malvinas",fixed_date:[4,2]},{name:"Día del Trabajador",fixed_date:[5,1]},{name:"Día de la Revolución de Mayo",fixed_date:[5,25]},{name:"Paso a la Inmortalidad del Gral. Don Martín Miguel de Güemes",fixed_date:[6,17]},{name:"Paso a la Inmortalidad del General Manuel Belgrano",fixed_date:[6,20]},{name:"Feriado con fines turísticos",fixed_date:[6,21]},{name:"Día de la Independencia",fixed_date:[7,9]},{name:"Paso a la Inmortalidad del Gral. José de San Martín",fixed_date:[8,17]},{name:"Feriado con fines turísticos",fixed_date:[10,11]},{name:"Día del Respeto a la Diversidad Cultural",fixed_date:[10,12]},{name:"Día de la Soberanía Nacional",fixed_date:[11,18]},{name:"Inmaculada Concepción de María",fixed_date:[12,8]},{name:"Navidad",fixed_date:[12,25]}]},a={PH:[{name:"Neujahrstag",fixed_date:[1,1]},{name:"Heilige Drei Könige",fixed_date:[1,6]},{name:"Ostermontag",variable_date:"easter",offset:1},{name:"Staatsfeiertag",fixed_date:[5,1]},{name:"Christi Himmelfahrt",variable_date:"easter",offset:39},{name:"Pfingstmontag",variable_date:"easter",offset:50},{name:"Fronleichnam",variable_date:"easter",offset:60},{name:"Mariä Himmelfahrt",fixed_date:[8,15]},{name:"Nationalfeiertag",fixed_date:[10,26]},{name:"Allerheiligen",fixed_date:[11,1]},{name:"Mariä Empfängnis",fixed_date:[12,8]},{name:"Christtag",fixed_date:[12,25]},{name:"Stefanitag",fixed_date:[12,26]}],SH:[{2017:[4,8,4,18],2018:[3,24,4,3],2019:[4,13,4,23],2020:[4,4,4,14],2021:[3,27,4,6],2022:[4,9,4,19],2023:[4,1,4,11],2024:[3,23,4,2],name:"Osterferien"},{2017:[6,3,6,6],2018:[5,19,5,22],2019:[6,8,6,11],2020:[5,30,6,2],2021:[5,22,5,25],2022:[6,4,6,7],2023:[5,57,5,30],2024:[5,18,5,21],name:"Pfingstferien"},{2016:[11,2],2017:[11,2],2018:[11,2],2019:[11,2],2020:[11,2],2021:[11,2],2022:[11,2],2023:[11,2],name:"Allerseelen"},{2016:[12,24,1,7],2017:[12,24,1,6],2018:[12,24,1,6],2019:[12,23,1,6],2020:[12,24,1,6],2021:[12,24,1,6],2022:[12,24,1,6],2023:[12,24,1,6],name:"Weihnachtsferien"}],Burgenland:{_state_code:1,SH:[{2016:[2,8,2,13],2017:[2,13,2,18],2018:[2,12,2,17],2019:[2,11,2,16],2020:[2,10,2,15],2021:[2,8,2,13],name:"Semesterferien"},{2016:[7,2,9,3],2017:[7,1,9,3],2018:[6,30,9,2],2019:[6,29,9,1],2020:[7,4,9,6],2021:[7,3,9,4],name:"Sommerferien"}]},"Kärnten":{_state_code:2,SH:[{2016:[2,8,2,13],2017:[2,13,2,18],2018:[2,12,2,17],2019:[2,11,2,16],2020:[2,10,2,15],2021:[2,8,2,13],name:"Semesterferien"},{2016:[7,9,9,10],2017:[7,8,9,10],2018:[7,7,9,9],2019:[7,6,9,8],2020:[7,11,9,13],2021:[7,10,9,11],name:"Sommerferien"}]},"Niederösterreich":{_state_code:3,SH:[{2016:[2,1,2,6],2017:[2,6,2,11],2018:[2,5,2,10],2019:[2,4,2,9],2020:[2,3,2,8],2021:[2,1,2,6],name:"Semesterferien"},{2016:[7,2,9,3],2017:[7,1,9,3],2018:[6,30,9,2],2019:[6,29,9,1],2020:[7,4,9,6],2021:[7,3,9,4],name:"Sommerferien"}]},"Oberösterreich":{_state_code:4,SH:[{2016:[2,15,2,20],2017:[2,20,2,25],2018:[2,19,2,24],2019:[2,18,2,23],2020:[2,17,2,22],2021:[2,15,2,20],name:"Semesterferien"},{2016:[7,9,9,10],2017:[7,8,9,10],2018:[7,7,9,9],2019:[7,6,9,8],2020:[7,11,9,13],2021:[7,10,9,11],name:"Sommerferien"}]},Salzburg:{_state_code:5,SH:[{2016:[2,8,2,13],2017:[2,13,2,18],2018:[2,12,2,17],2019:[2,11,2,16],2020:[2,10,2,15],2021:[2,8,2,13],name:"Semesterferien"},{2016:[7,9,9,10],2017:[7,8,9,10],2018:[7,7,9,9],2019:[7,6,9,8],2020:[7,11,9,13],2021:[7,10,9,11],name:"Sommerferien"}]},Steiermark:{_state_code:6,SH:[{2016:[2,15,2,20],2017:[2,20,2,25],2018:[2,19,2,24],2019:[2,18,2,23],2020:[2,17,2,22],2021:[2,15,2,20],name:"Semesterferien"},{2016:[7,9,9,10],2017:[7,8,9,10],2018:[7,7,9,9],2019:[7,6,9,8],2020:[7,11,9,13],2021:[7,10,9,12],name:"Sommerferien"}]},Tirol:{_state_code:7,SH:[{2016:[2,8,2,13],2017:[2,13,2,18],2018:[2,12,2,17],2019:[2,11,2,16],2020:[2,10,2,15],2021:[2,8,2,13],name:"Semesterferien"},{2016:[7,9,9,10],2017:[7,8,9,10],2018:[7,7,9,9],2019:[7,6,9,8],2020:[7,11,9,13],2021:[7,10,9,11],name:"Sommerferien"}]},Vorarlberg:{_state_code:8,SH:[{2016:[2,15,2,20],2017:[2,13,2,18],2018:[2,5,2,10],2019:[2,11,2,16],2020:[2,10,2,15],2021:[2,8,2,13],name:"Semesterferien"},{2016:[7,9,9,10],2017:[7,8,9,10],2018:[7,7,9,9],2019:[7,6,9,8],2020:[7,11,9,13],2021:[7,10,9,11],name:"Sommerferien"}]},Wien:{_state_code:9,SH:[{2016:[2,1,2,6],2017:[2,6,2,11],2018:[2,5,2,10],2019:[2,4,2,9],2020:[2,3,2,8],2021:[2,1,2,6],name:"Semesterferien"},{2016:[7,2,9,3],2017:[7,1,9,3],2018:[6,30,9,2],2019:[6,29,9,1],2020:[7,4,9,6],2021:[7,3,9,4],name:"Sommerferien"}]}},t={PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}],"Australian Capital Territory":{_state_code:"act",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Canberra Day",variable_date:"firstMarchMonday",offset:7},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Saturday",variable_date:"easter",offset:-1},{name:"Easter Sunday",variable_date:"easter"},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Reconciliation Day",variable_date:"lastMayMonday"},{name:"Queens Birthday",variable_date:"firstJuneMonday",offset:7},{name:"Family and Community Day",variable_date:"lastSeptemberMonday"},{name:"Labour Day",variable_date:"firstOctoberMonday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"New South Wales":{_state_code:"nsw",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Saturday",variable_date:"easter",offset:-1},{name:"Easter Sunday",variable_date:"easter"},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Queens Birthday",variable_date:"firstJuneMonday",offset:7},{name:"Labour Day",variable_date:"firstOctoberMonday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"Northern Territory":{_state_code:"nt",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Saturday",variable_date:"easter",offset:-1},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"May Day",variable_date:"firstMayMonday"},{name:"Queens Birthday",variable_date:"firstJuneMonday",offset:7},{name:"Picnic Day",variable_date:"firstAugustMonday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},Queensland:{_state_code:"qld",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Saturday",variable_date:"easter",offset:-1},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Labour Day",variable_date:"firstMayMonday"},{name:"Queens Birthday",variable_date:"firstOctoberMonday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"South Australia":{_state_code:"sa",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Adelaide Cup",variable_date:"firstMarchMonday",offset:7},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Saturday",variable_date:"easter",offset:-1},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Queens Birthday",variable_date:"firstJuneMonday",offset:7},{name:"Labour Day",variable_date:"firstOctoberMonday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},Tasmania:{_state_code:"tas",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Eight Hours Day",variable_date:"firstMarchMonday",offset:7},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Queens Birthday",variable_date:"firstJuneMonday",offset:7},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},Victoria:{_state_code:"vic",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Labour Day",variable_date:"firstMarchMonday",offset:7},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Saturday",variable_date:"easter",offset:-1},{name:"Easter Sunday",variable_date:"easter"},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Queens Birthday",variable_date:"firstJuneMonday",offset:7},{name:"AFL Grand Final",variable_date:"lastSeptemberFriday"},{name:"Melbourne Cup",variable_date:"firstNovemberTuesday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"Western Australia":{_state_code:"wa",PH:[{name:"New Years Day",fixed_date:[1,1]},{name:"Australia Day",fixed_date:[1,26]},{name:"Labour Day",variable_date:"firstMarchMonday"},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"ANZAC Day",fixed_date:[4,25]},{name:"Western Australia Day",variable_date:"firstJuneMonday"},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]}},n={PH:[{name:"Nieuwjaar - Jour de l'an",fixed_date:[1,1]},{name:"Paasmaandag - Lundi de Pâques",variable_date:"easter",offset:1},{name:"Dag van de Arbeid - Fête du Travail",fixed_date:[5,1]},{name:"Onze-Lieve-Heer-Hemelvaart - Jeudi de l'Ascensionn",variable_date:"easter",offset:39},{name:"Pinkstermaandag - Lundi de Pentecôte",variable_date:"easter",offset:50},{name:"Nationale feestdag van België - Fête nationale",fixed_date:[7,21]},{name:"Onze-Lieve-Vrouw-Hemelvaart - Assomption",fixed_date:[8,15]},{name:"Allerheiligen - Toussaint",fixed_date:[11,1]},{name:"Wapenstilstand - Armistice",fixed_date:[11,11]},{name:"Kerstmis - Noël",fixed_date:[12,25]}],SH:[{2020:[2,24,3,1],2021:[2,15,2,21],2022:[2,28,3,6],2023:[2,20,2,26],2024:[2,12,2,18],2025:[3,3,3,9],2026:[2,16,2,22],name:"Krokusvakantie - Vacances de carnaval"},{2020:[4,6,4,19],2021:[4,5,4,18],2022:[4,4,4,18],2023:[4,3,4,16],2024:[4,1,4,14],2025:[4,7,4,21],2026:[4,6,4,19],name:"Paasvakantie - Vacances de pâques"},{2020:[7,1,8,31],2021:[7,1,8,31],2022:[7,1,8,31],2023:[7,1,8,31],2024:[7,1,8,31],2025:[7,1,8,31],2026:[7,1,8,31],name:"Zomervakantie - Vacances d'été"},{2019:[10,28,11,3],2020:[11,2,11,15],2021:[11,1,11,7],2022:[10,31,11,6],2023:[10,30,11,5],2024:[10,28,11,3],2025:[10,27,11,2],name:"Herfstvakantie - Vacances automne"},{2019:[12,23,1,5],2020:[12,21,1,3],2021:[12,27,1,9],2022:[12,26,1,8],2023:[12,25,1,7],2024:[12,23,1,5],2025:[12,22,1,4],name:"Kerstvakantie - Vacances de Noël"}]},i={PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}],Acre:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Dia do evangélico",fixed_date:[1,23]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Alusivo ao Dia Internacional da Mulher",fixed_date:[3,8]},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Aniversário do estado",fixed_date:[6,15]},{name:"Dia da Amazônia",fixed_date:[9,5]},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Assinatura do Tratado de Petrópolis",fixed_date:[11,17]},{name:"Natal",fixed_date:[12,25]}]},Alagoas:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"São João",fixed_date:[6,24]},{name:"São Pedro",fixed_date:[6,29]},{name:"Independência",fixed_date:[9,7]},{name:"Emancipação política",fixed_date:[9,16]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Morte de Zumbi dos Palmares",fixed_date:[11,20]},{name:"Natal",fixed_date:[12,25]}]},"Amapá":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Dia de São José",fixed_date:[3,19]},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Data Magna do estado",fixed_date:[9,13]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},Amazonas:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Data Magna do estado",fixed_date:[9,5]},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Dia da Consciência Negra",fixed_date:[11,20]},{name:"Natal",fixed_date:[12,25]}]},Bahia:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Data magna do estado",fixed_date:[2,7]},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Ceará":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Data magna do estado",fixed_date:[3,25]},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Distrito Federal":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Dia do evangélico",fixed_date:[11,30]},{name:"Natal",fixed_date:[12,25]}]},"Espírito Santo":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Data magna do estado",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Goiás":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Maranhão":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Data magna do estado",fixed_date:[7,28]},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Mato Grosso":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Dia da Consciência Negra",fixed_date:[11,20]},{name:"Natal",fixed_date:[12,25]}]},"Mato Grosso do Sul":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Criação do estado",fixed_date:[10,11]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Minas Gerais":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Data magna do estado",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Pará":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Data magna do estado",fixed_date:[8,15]},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Paraíba":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Homenagem a João Pessoa",fixed_date:[7,26]},{name:"Data magna do estado",fixed_date:[8,5]},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Paraná":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Data magna do estado",fixed_date:[12,19]},{name:"Natal",fixed_date:[12,25]}]},Pernambuco:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Data magna do estado",variable_date:"firstMarchSunday"},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Piauí":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Data magna do estado",fixed_date:[10,19]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Rio de Janeiro":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Dia da Consciência Negra",fixed_date:[11,20]},{name:"Natal",fixed_date:[12,25]}]},"Rio Grande do Norte":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"São Jorge",fixed_date:[4,23]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Mártires de Cunhaú e Uruaçu",fixed_date:[10,3]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Rio Grande do Sul":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Proclamação da República Rio-Grandense",fixed_date:[9,20]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Rondônia":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Data magna do estado",fixed_date:[1,4]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Dia do evangélico",fixed_date:[6,18]},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},Roraima:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Data magna do estado",fixed_date:[10,5]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},"Santa Catarina":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Data magna do estado",fixed_date:[8,11]},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Santa Catarina de Alexandria",fixed_date:[11,25]},{name:"Natal",fixed_date:[12,25]}]},"São Paulo":{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Data magna do estado",fixed_date:[7,9]},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]},Sergipe:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Aniversário de Aracaju",fixed_date:[3,17]},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"São João",fixed_date:[6,24]},{name:"Data magna do estado",fixed_date:[7,8]},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Nossa Senhora da Conceição",fixed_date:[12,8]},{name:"Natal",fixed_date:[12,25]}]},Tocantins:{PH:[{name:"Ano Novo",fixed_date:[1,1]},{name:"Carnaval",variable_date:"easter",offset:-47},{name:"Autonomia do estado",fixed_date:[3,18]},{name:"Sexta-feira santa",variable_date:"easter",offset:-2},{name:"Tiradentes",fixed_date:[4,21]},{name:"Dia do Trabalhador",fixed_date:[5,1]},{name:"Corpus Christi",variable_date:"easter",offset:60},{name:"Independência",fixed_date:[9,7]},{name:"Nossa Senhora da Natividade",fixed_date:[9,8]},{name:"Criação do estado",fixed_date:[10,5]},{name:"Nossa Senhora Aparecida",fixed_date:[10,12]},{name:"Finados",fixed_date:[11,2]},{name:"Proclamação da República",fixed_date:[11,15]},{name:"Natal",fixed_date:[12,25]}]}},r={PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Canada Day",variable_date:"canadaDay"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Christmas Day",fixed_date:[12,25]}],Alberta:{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Alberta Family Day",variable_date:"firstFebruaryMonday",offset:14},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Heritage Day",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"British Columbia":{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Family Day",variable_date:"firstFebruaryMonday",offset:7},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"British Columbia Day",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]}]},Manitoba:{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Louis Riel Day",variable_date:"firstFebruaryMonday",offset:14},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Civic Holiday",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]}]},"New Brunswick":{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"New Brunswick Day",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"Newfoundland and Labrador":{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Saint Patrick's Day",fixed_date:[3,17]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Saint George's Day",fixed_date:[4,23]},{name:"Discovery Day",fixed_date:[6,24]},{name:"Memorial Day",fixed_date:[7,1]},{name:"Orangemen's Day",fixed_date:[7,12]},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Armistice Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]}]},"Northwest Territories":{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"National Aboriginal Day",fixed_date:[6,21]},{name:"Canada Day",variable_date:"canadaDay"},{name:"Civic Holiday",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]}]},"Nova Scotia":{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Natal Day",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},Nunavut:{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Nunavut Day",fixed_date:[7,9]},{name:"Civic Holiday",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]}]},Ontario:{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Family Day",variable_date:"firstFebruaryMonday",offset:14},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"August Civic Public Holiday",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},"Prince Edward Island":{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Islander Day",variable_date:"firstFebruaryMonday",offset:14},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Civic Holiday",variable_date:"firstAugustMonday"},{name:"Gold Cup Parade Day",variable_date:"firstAugustMonday",offset:18},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},Quebec:{PH:[{name:"Jour de l'an",fixed_date:[1,1]},{name:"Vendredi saint",variable_date:"easter",offset:-2},{name:"Lundi de Pâques",variable_date:"easter",offset:1},{name:"Journée nationale des patriotes",variable_date:"victoriaDay"},{name:"Fête nationale du Québec",fixed_date:[6,24]},{name:"Fête du Canada",variable_date:"canadaDay"},{name:"Fête du Travail",variable_date:"firstSeptemberMonday"},{name:"Jour de l'Action de grâce",variable_date:"firstOctoberMonday",offset:7},{name:"Noël",fixed_date:[12,25]}]},Saskatchewan:{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Family Day",variable_date:"firstFebruaryMonday",offset:14},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Saskatchewan Day",variable_date:"firstAugustMonday"},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]}]},Yukon:{PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Heritage Day",variable_date:"lastFebruarySunday",offset:-2},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Victoria Day",variable_date:"victoriaDay"},{name:"Canada Day",variable_date:"canadaDay"},{name:"Discovery Day",variable_date:"firstAugustMonday",offset:14},{name:"Labour Day",variable_date:"firstSeptemberMonday"},{name:"Thanksgiving",variable_date:"firstOctoberMonday",offset:7},{name:"Remembrance Day",fixed_date:[11,11]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]}},s={PH:[{name:"Neujahrstag/Nouvel an/Capo d'anno",fixed_date:[1,1]},{name:"Berchtoldstag/2 janvier",fixed_date:[1,2],only_states:["Zürich","Bern","Luzern","Obwalden","Nidwalden","Glarus","Zug","Freiburg","Solothurn","Schaffhausen","Graubünden","Aargau","Thurgau","Waadt","Neuenburg","Genf","Jura","Sankt Gallen","Wallis"]},{name:"Heilige Drei Könige/Epifania",fixed_date:[1,6],only_states:["Uri","Schwyz","Graubünden","Tessin"]},{name:"Instauration de la République",fixed_date:[3,1],only_states:["Neuenburg"]},{name:"Josefstag/Saint-Joseph/San Giuseppe",fixed_date:[3,19],only_states:["Luzern","Uri","Schwyz","Nidwalden","Zug","Graubünden","Tessin","Wallis"]},{name:"Karfreitag/Vendredi saint",variable_date:"easter",offset:-2,only_states:["Zürich","Bern","Luzern","Uri","Schwyz","Obwalden","Nidwalden","Glarus","Zug","Freiburg","Solothurn","Basel-Stadt","Basel-Landschaft","Schaffhausen","Appenzell Ausserrhoden","Appenzell Innerrhoden","Sankt Gallen","Graubünden","Aargau","Thurgau","Waadt","Neuenburg","Genf","Jura"]},{name:"Ostermontag/Lundi de Pâques/Lunedi di Pasqua",variable_date:"easter",offset:1,only_states:["Zürich","Bern","Luzern","Uri","Schwyz","Obwalden","Nidwalden","Glarus","Zug","Freiburg","Solothurn","Basel-Stadt","Basel-Landschaft","Schaffhausen","Appenzell Ausserrhoden","Appenzell Innerrhoden","Sankt Gallen","Graubünden","Aargau","Thurgau","Tessin","Waadt","Neuenburg","Genf","Jura","Wallis"]},{name:"Tag der Arbeit/Festa dei lavoratori",fixed_date:[5,1],only_states:["Zürich","Freiburg","Solothurn","Basel-Stadt","Basel-Landschaft","Schaffhausen","Aargau","Thurgau","Tessin","Neuenburg","Jura"]},{name:"Auffahrt/Ascension/Ascensione",variable_date:"easter",offset:39},{name:"Pfingstmontag/Lundi de Pentecôte/Lunedi di Pentecoste",variable_date:"easter",offset:50,only_states:["Zürich","Bern","Luzern","Uri","Schwyz","Obwalden","Nidwalden","Glarus","Zug","Freiburg","Solothurn","Basel-Stadt","Basel-Landschaft","Schaffhausen","Appenzell Ausserrhoden","Appenzell Innerrhoden","Sankt Gallen","Graubünden","Aargau","Thurgau","Tessin","Waadt","Neuenburg","Genf","Jura","Wallis"]},{name:"Fronleichnam/Fête-Dieu/Corpus domini",variable_date:"easter",offset:60,only_states:["Luzern","Uri","Schwyz","Obwalden","Nidwalden","Zug","Freiburg","Solothurn","Basel-Landschaft","Appenzell Innerrhoden","Graubünden","Aargau","Tessin","Wallis","Neuenburg","Jura"]},{name:"Commémoration du plébiscite jurassien",fixed_date:[6,23],only_states:["Jura"]},{name:"San Pietro e Paolo",fixed_date:[6,29],only_states:["Tessin"]},{name:"Bundesfeiertag/Jour de la fête nationale/Giorno festivo federale",fixed_date:[8,1]},{name:"Mariä Himmelfahrt/Assomption/Assunzione",fixed_date:[8,15],only_states:["Luzern","Uri","Schwyz","Obwalden","Nidwalden","Zug","Freiburg","Solothurn","Basel-Landschaft","Appenzell Innerrhoden","Graubünden","Aargau","Tessin","Wallis","Jura"]},{name:"Mauritiustag",fixed_date:[9,22],only_states:["Appenzell Innerrhoden"]},{name:"Bruderklausenfest",fixed_date:[9,25],only_states:["Obwalden"]},{name:"Allerheiligen/Toussaint/Ognissanti",fixed_date:[11,1],only_states:["Luzern","Uri","Schwyz","Obwalden","Nidwalden","Glarus","Zug","Freiburg","Solothurn","Appenzell Innerrhoden","Sankt Gallen","Graubünden","Aargau","Tessin","Wallis","Jura"]},{name:"Mariä Empfängnis/Immaculée Conception/Ognissanti",fixed_date:[12,8],only_states:["Luzern","Uri","Schwyz","Obwalden","Nidwalden","Zug","Freiburg","Solothurn","Appenzell Innerrhoden","Graubünden","Aargau","Tessin","Wallis"]},{name:"Weihnachtstag/Noël/Natale",fixed_date:[12,25]},{name:"Stephanstag/Saint-Etienne/Santo Stefano",fixed_date:[12,26],only_states:["Zürich","Bern","Luzern","Uri","Schwyz","Obwalden","Nidwalden","Glarus","Zug","Freiburg","Solothurn","Basel-Stadt","Basel-Landschaft","Schaffhausen","Appenzell Ausserrhoden","Appenzell Innerrhoden","Sankt Gallen","Graubünden","Aargau","Thurgau","Tessin","Wallis"]},{name:"Restauration de la République",fixed_date:[12,31],only_states:["Genf"]}],Aargau:{_state_code:"ag"},"Appenzell Ausserrhoden":{_state_code:"ar"},"Appenzell Innerrhoden":{_state_code:"ai"},"Basel-Landschaft":{_state_code:"bl"},"Basel-Stadt":{_state_code:"bs"},Bern:{_state_code:"be"},Freiburg:{_state_code:"fr"},Genf:{_state_code:"ge"},Glarus:{_state_code:"gl"},"Graubünden":{_state_code:"gr"},Jura:{_state_code:"ju"},Luzern:{_state_code:"lu"},Neuenburg:{_state_code:"ne"},Nidwalden:{_state_code:"nw"},Obwalden:{_state_code:"ow"},Schaffhausen:{_state_code:"sh"},Schwyz:{_state_code:"sz"},Solothurn:{_state_code:"so"},"Sankt Gallen":{_state_code:"sg"},Tessin:{_state_code:"ti"},Thurgau:{_state_code:"tg"},Uri:{_state_code:"ur"},Waadt:{_state_code:"vd"},Wallis:{_state_code:"vs"},Zug:{_state_code:"zg"},"Zürich":{_state_code:"zh"}},o={PH:[{name:"Fête du 1ᵉʳ janvier",fixed_date:[1,1]},{name:"Lundi de Pâques",variable_date:"easter",offset:1},{name:"Fête du travail",fixed_date:[5,1]},{name:"Lendemain de la Fête du travail",variable_date:"nextMo-Sa01May"},{name:"Jour de l’Ascension",variable_date:"easter",offset:39},{name:"Lundi de la Pentecôte",variable_date:"easter",offset:50},{name:"Fête nationale",fixed_date:[8,7]},{name:"Lendemain de la Fête nationale",variable_date:"nextMo-Sa07August"},{name:"Fête de l’Assomption",fixed_date:[8,15]},{name:"Fête de la Toussaint",fixed_date:[11,1]},{name:"Journée Nationale de la Paix",fixed_date:[11,15]},{name:"Fête de Noël",fixed_date:[12,25]},{name:"Lendemain de la Fête de Noël",variable_date:"nextMo-Sa25December"}]},d={PH:[{name:"Den obnovy samostatného českého státu",fixed_date:[1,1]},{name:"Velký pátek",variable_date:"easter",offset:-2},{name:"Velikonoční pondělí",variable_date:"easter",offset:1},{name:"Svátek práce",fixed_date:[5,1]},{name:"Den vítězství",fixed_date:[5,8]},{name:"Den slovanských věrozvěstů Cyrila a Metoděje",fixed_date:[7,5]},{name:"Den upálení mistra Jana Husa",fixed_date:[7,6]},{name:"Den české státnosti",fixed_date:[9,28]},{name:"Den vzniku samostatného československého státu",fixed_date:[10,28]},{name:"Den boje za svobodu a demokracii",fixed_date:[11,17]},{name:"Štědrý den",fixed_date:[12,24]},{name:"1. svátek vánoční",fixed_date:[12,25]},{name:"2. svátek vánoční",fixed_date:[12,26]}]},f={PH:[{name:"Neujahrstag",fixed_date:[1,1]},{name:"Heilige Drei Könige",fixed_date:[1,6],only_states:["Baden-Württemberg","Bayern","Sachsen-Anhalt"]},{name:"Frauentag",fixed_date:[3,8],only_states:["Berlin"]},{name:"Tag der Arbeit",fixed_date:[5,1]},{name:"Karfreitag",variable_date:"easter",offset:-2},{name:"Ostersonntag",variable_date:"easter",only_states:["Brandenburg"]},{name:"Ostermontag",variable_date:"easter",offset:1},{name:"Christi Himmelfahrt",variable_date:"easter",offset:39},{name:"Pfingstsonntag",variable_date:"easter",offset:49,only_states:["Brandenburg"]},{name:"Pfingstmontag",variable_date:"easter",offset:50},{name:"Fronleichnam",variable_date:"easter",offset:60,only_states:["Baden-Württemberg","Bayern","Hessen","Nordrhein-Westfalen","Rheinland-Pfalz","Saarland"]},{name:"Mariä Himmelfahrt",fixed_date:[8,15],only_states:["Saarland"]},{name:"Weltkindertag",fixed_date:[9,20],only_states:["Thüringen"]},{name:"Tag der Deutschen Einheit",fixed_date:[10,3]},{name:"Reformationstag",fixed_date:[10,31],only_states:["Brandenburg","Bremen","Hamburg","Mecklenburg-Vorpommern","Niedersachsen","Sachsen","Sachsen-Anhalt","Schleswig-Holstein","Thüringen"]},{name:"Allerheiligen",fixed_date:[11,1],only_states:["Baden-Württemberg","Bayern","Nordrhein-Westfalen","Rheinland-Pfalz","Saarland"]},{name:"Buß- und Bettag",variable_date:"nextWednesday16Nov",only_states:["Sachsen"]},{name:"1. Weihnachtstag",fixed_date:[12,25]},{name:"2. Weihnachtstag",fixed_date:[12,26]}],"Baden-Württemberg":{_state_code:"bw",SH:[{2012:[4,2,4,13],2013:[3,25,4,5],2014:[4,14,4,25],2015:[3,30,4,10],2016:[3,24,3,24,3,29,4,2],2017:[4,10,4,21],2018:[3,26,4,6],2019:[4,15,4,27],2020:[4,6,4,18],2024:[3,23,4,5],2025:[4,14,4,26],name:"Osterferien"},{2012:[5,29,6,9],2013:[5,21,6,1],2014:[6,10,6,21],2015:[5,26,6,6],2016:[5,17,5,28],2017:[6,6,6,16],2018:[5,22,6,2],2019:[6,11,6,21],2020:[6,2,6,13],2024:[5,21,5,31],2025:[6,10,6,20],name:"Pfingstferien"},{2012:[7,26,9,8],2013:[7,25,9,7],2014:[7,31,9,13],2015:[7,30,9,12],2016:[7,28,9,10],2017:[7,27,9,9],2018:[7,26,9,8],2019:[7,29,9,10],2020:[7,30,9,12],2021:[7,29,9,11],2022:[7,28,9,10],2023:[7,27,9,9],2024:[7,25,9,7],2025:[7,31,9,13],name:"Sommerferien"},{2012:[10,29,11,2],2013:[10,28,10,30],2014:[10,27,10,30],2015:[10,31,10,31,11,2,11,6],2016:[10,31,10,31,11,2,11,4],2017:[10,30,11,3],2018:[10,29,11,2],2019:[10,28,10,30],2024:[10,28,10,30,10,31,10,31],2025:[10,27,10,30,10,31,10,31],name:"Herbstferien"},{2011:[12,23,1,5],2012:[12,24,1,5],2013:[12,23,1,4],2014:[12,22,1,5],2015:[12,23,1,9],2016:[12,23,1,7],2017:[12,22,1,5],2018:[12,24,1,5],2019:[12,23,1,4],2024:[12,23,1,4],2025:[12,22,1,5],name:"Weihnachtsferien"}]},Bayern:{_state_code:"by",SH:[{2012:[2,20,2,24],2013:[2,11,2,15],2014:[3,3,3,7],2015:[2,16,2,20],2016:[2,8,2,12],2017:[2,27,3,3],2018:[2,12,2,16],2019:[3,4,3,8],2020:[2,24,2,28],2021:[2,15,2,19],2022:[2,28,3,4],2023:[2,20,2,24],2024:[2,12,2,16],2025:[3,3,3,7],name:"Winterferien"},{2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,21,4,1],2017:[4,10,4,22],2018:[3,26,4,7],2019:[4,15,4,27],2020:[4,6,4,18],2021:[3,29,4,10],2022:[4,11,4,23],2023:[4,3,4,15],2024:[3,25,4,6],2025:[4,14,4,25],name:"Osterferien"},{2012:[5,29,6,9],2013:[5,21,5,31],2014:[6,10,6,21],2015:[5,26,6,5],2016:[5,17,5,28],2017:[6,6,6,16],2018:[5,22,6,2],2019:[6,11,6,21],2020:[6,2,6,13],2021:[5,25,6,4],2022:[6,7,6,18],2023:[5,30,6,9],2024:[5,21,6,1],2025:[6,10,6,20],name:"Pfingstferien"},{2012:[8,1,9,12],2013:[7,31,9,11],2014:[7,30,9,15],2015:[8,1,9,14],2016:[7,30,9,12],2017:[7,29,9,11],2018:[7,30,9,10],2019:[7,29,9,9],2020:[7,27,9,7],2021:[7,30,9,13],2022:[8,1,9,12],2023:[7,31,9,11],2024:[7,29,9,9],2025:[8,1,9,15],name:"Sommerferien"},{2012:[10,29,11,3],2013:[10,28,10,31],2014:[10,27,10,31,11,19,11,19],2015:[11,2,11,7,11,18,11,18],2016:[10,31,11,4,11,16,11,16],2017:[10,30,11,3,11,22,11,22],2018:[10,29,11,2,11,21,11,21],2019:[10,28,10,31,11,20,11,20],2020:[10,31,11,6,11,18,11,18],2021:[11,2,11,5,11,17,11,17],2022:[10,31,11,4,11,16,11,16],2023:[10,30,11,3,11,22,11,22],2024:[10,28,10,31,11,20,11,20],2025:[11,3,11,7,11,19,11,19],name:"Herbstferien"},{2011:[12,27,1,5],2012:[12,24,1,5],2013:[12,23,1,4],2014:[12,24,1,5],2015:[12,24,1,5],2016:[12,24,1,5],2017:[12,23,1,5],2018:[12,22,1,5],2019:[12,23,1,4],2020:[12,23,1,9],2021:[12,24,1,8],2022:[12,24,1,7],2023:[12,23,1,5],2024:[12,23,1,3],2025:[12,22,1,5],name:"Weihnachtsferien"}]},Berlin:{_state_code:"be",SH:[{2012:[1,30,2,4],2013:[2,4,2,9],2014:[2,3,2,8],2015:[2,2,2,7],2016:[2,1,2,6],2017:[1,30,2,3],2018:[2,5,2,10],2019:[2,4,2,9],2020:[2,3,2,8],2021:[2,1,2,6],2022:[1,29,2,5],2023:[1,30,2,4],2024:[2,5,2,10],2025:[2,3,2,8],name:"Winterferien"},{2012:[4,2,4,14,4,30,4,30],2013:[3,25,4,6],2014:[4,14,4,26,5,2,5,2],2015:[3,30,4,11],2016:[3,21,4,2],2017:[4,10,4,18],2018:[3,26,4,6],2019:[4,15,4,26],2020:[4,6,4,17],2021:[3,29,4,10],2022:[4,11,4,23],2023:[4,3,4,14],2024:[3,25,4,5],2025:[4,14,4,25,5,2,5,2,5,30,5,30],name:"Osterferien"},{2012:[5,18,5,18],2013:[5,10,5,10,5,21,5,21],2014:[5,30,5,30],2015:[5,15,5,15,5,26,5,26],2016:[5,6,5,6,5,17,5,18],2017:[5,24,5,24,5,26,5,26,6,6,6,9],2018:[4,30,4,30,5,11,5,11,5,22,5,22],2019:[5,31,5,31,6,11,6,11],2020:[5,22,5,22],2021:[5,14,5,14],2022:[5,27,5,27,6,7,6,7],2023:[5,19,5,19,5,30,5,30],2024:[5,10,5,10],2025:[6,10,6,10],name:"Pfingstferien"},{2012:[6,20,8,3],2013:[6,19,8,2],2014:[7,9,8,22],2015:[7,16,8,28],2016:[7,21,9,2],2017:[7,20,9,1],2018:[7,5,8,17],2019:[6,20,8,2],2020:[6,25,8,7],2021:[6,24,8,6],2022:[7,7,8,19],2023:[7,13,8,25],2024:[7,18,8,30],2025:[7,24,9,6],name:"Sommerferien"},{2012:[10,1,10,13],2013:[9,30,10,12],2014:[10,20,11,1],2015:[10,19,10,31],2016:[10,17,10,28],2017:[10,2,10,2,10,23,11,4],2018:[10,22,11,2],2019:[10,4,10,4,10,7,10,19],2020:[10,12,10,24],2021:[10,11,10,23],2022:[10,24,11,5],2023:[10,2,10,2,10,23,11,4],2024:[10,4,10,4,10,21,11,2],2025:[10,20,11,1],name:"Herbstferien"},{2011:[12,23,1,3],2012:[12,24,1,4],2013:[12,23,1,3],2014:[12,22,1,2],2015:[12,23,1,2],2016:[12,23,1,3],2017:[12,21,1,2],2018:[12,22,1,5],2019:[12,23,1,4],2020:[12,21,1,2],2021:[12,23,12,31],2022:[12,22,1,2],2023:[12,23,1,5],2024:[12,23,12,31],2025:[12,22,1,2],name:"Weihnachtsferien"}]},Brandenburg:{_state_code:"bb",SH:[{2012:[1,30,2,4],2013:[2,4,2,9],2014:[2,3,2,8],2015:[2,2,2,7],2016:[2,1,2,6],2017:[1,30,2,4],2018:[2,5,2,10],2019:[2,4,2,9],2020:[2,3,2,8],2021:[2,1,2,6],2022:[1,31,2,5],2023:[1,30,2,3],2024:[2,5,2,9],2025:[2,3,2,8],name:"Winterferien"},{2012:[4,4,4,14,4,30,4,30],2013:[3,27,4,6],2014:[4,16,4,26,5,2,5,2],2015:[4,1,4,11],2016:[3,23,4,2],2017:[4,10,4,22],2018:[3,26,4,6],2019:[4,15,4,26],2020:[4,6,4,17],2021:[3,29,4,9],2022:[4,11,4,23],2023:[4,3,4,14],2024:[3,25,4,5],2025:[4,14,4,25,5,2,5,2,5,30,5,30],name:"Osterferien"},{2012:[5,18,5,18],2013:[5,10,5,10],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26],2018:[4,30,4,30,5,11,5,11],2019:[5,31,5,31],2020:[5,22,5,22],2021:[5,14,5,14],2022:[5,27,5,27],2023:[5,19,5,19],2024:[5,10,5,10],2025:[6,10,6,10],name:"Pfingstferien"},{2012:[6,21,8,3],2013:[6,20,8,2],2014:[7,10,8,22],2015:[7,16,8,28],2016:[7,21,9,3],2017:[7,20,9,1],2018:[7,5,8,18],2019:[6,20,8,3],2020:[6,25,8,8],2021:[6,24,8,7],2022:[7,7,8,20],2023:[7,13,8,26],2024:[7,18,8,31],2025:[7,24,9,6],name:"Sommerferien"},{2012:[10,1,10,13],2013:[9,30,10,12,11,1,11,1],2014:[10,20,11,1],2015:[10,19,10,30],2016:[10,17,10,28],2017:[10,2,10,2,10,23,11,4],2018:[10,22,11,2],2019:[10,4,10,18,11,1,11,1],2020:[10,12,10,24],2021:[10,11,10,23],2022:[10,24,11,5],2023:[10,2,10,2,10,23,11,4],2024:[10,4,10,4,10,21,11,2],2025:[10,20,11,1],name:"Herbstferien"},{2011:[12,23,1,3],2012:[12,24,1,4],2013:[12,23,1,3],2014:[12,22,1,2],2015:[12,23,1,2],2016:[12,23,1,3],2017:[12,21,1,2],2018:[12,21,1,5],2019:[12,23,1,3],2020:[12,21,1,2],2021:[12,23,12,31],2022:[12,22,1,3],2023:[12,23,1,5],2024:[12,23,12,31],2025:[12,22,1,2],name:"Weihnachtsferien"}]},Bremen:{_state_code:"hb",SH:[{2012:[1,30,1,31],2013:[1,31,2,1],2014:[1,30,1,31],2015:[2,2,2,3],2016:[1,28,1,29],2017:[1,30,1,31],2018:[2,1,2,2],2019:[1,31,2,1],2020:[2,3,2,4],2021:[2,1,2,2],2022:[1,31,2,1],2023:[1,30,1,31],2024:[2,1,2,2],2025:[2,3,2,4],name:"Winterferien"},{2012:[3,26,4,11,4,30,4,30],2013:[3,16,4,2],2014:[4,3,4,22,5,2,5,2],2015:[3,25,4,10],2016:[3,18,4,2],2017:[4,10,4,22],2018:[3,19,4,3],2019:[4,6,4,23],2020:[3,28,4,14],2021:[3,27,4,10],2022:[4,4,4,19],2023:[3,27,4,11],2024:[3,18,4,2],2025:[4,7,4,19],name:"Osterferien"},{2012:[5,18,5,18,5,29,5,29],2013:[5,10,5,10,5,21,5,21],2014:[5,30,5,30,6,10,6,10],2015:[5,15,5,15,5,26,5,26],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26,6,6,6,6],2018:[4,30,4,30,5,11,5,11,5,22,5,22],2019:[5,31,5,31,6,11,6,11],2020:[5,22,5,22,6,2,6,2],2021:[5,14,5,14,5,25,5,25],2022:[5,27,5,27,6,7,6,7],2023:[5,19,5,19,5,30,5,30],2024:[5,10,5,10,5,21,5,21],2025:[4,30,4,30,5,2,5,2,5,30,5,30,6,10,6,10],name:"Pfingstferien"},{2012:[7,23,8,31],2013:[6,27,8,7],2014:[7,31,9,10],2015:[7,23,9,2],2016:[6,23,8,3],2017:[6,22,8,2],2018:[6,28,8,8],2019:[7,4,8,14],2020:[7,16,8,26],2021:[7,22,9,1],2022:[7,14,8,24],2023:[7,6,8,16],2024:[6,24,8,2],2025:[7,3,8,13],name:"Sommerferien"},{2012:[10,22,11,3],2013:[10,4,10,18],2014:[10,27,11,8],2015:[10,19,10,31],2016:[10,4,10,15],2017:[10,2,10,14,10,30,10,30],2018:[10,1,10,13],2019:[10,4,10,18],2020:[10,12,10,24],2021:[10,18,10,30],2022:[10,17,10,29],2023:[10,2,10,2,10,16,10,28],2024:[10,4,10,19,11,1,11,1],2025:[10,13,10,25],name:"Herbstferien"},{2011:[12,23,1,4],2012:[12,24,1,5],2013:[12,23,1,3],2014:[12,22,1,5],2015:[12,23,1,6],2016:[12,21,1,6],2017:[12,22,1,6],2018:[12,24,1,4],2019:[12,21,1,6],2020:[12,23,1,8],2021:[12,23,1,8],2022:[12,23,1,6],2023:[12,23,1,5],2024:[12,23,1,4],2025:[12,22,1,5],name:"Weihnachtsferien"}]},Hamburg:{_state_code:"hh",SH:[{2012:[1,30,1,30],2013:[2,1,2,1],2014:[1,31,1,31],2015:[1,30,1,30],2016:[1,29,1,29],2017:[1,30,1,30],2018:[2,2,2,2],2019:[2,1,2,1],2020:[1,31,1,31],2021:[1,29,1,29],2022:[1,28,1,28],2023:[1,27,1,27],2024:[2,2,2,2],2025:[1,31,1,31],name:"Winterferien"},{2012:[3,5,3,16],2013:[3,4,3,15],2014:[3,3,3,14],2015:[3,2,3,13],2016:[3,7,3,18],2017:[3,6,3,17],2018:[3,5,3,16,4,30,4,30],2019:[3,4,3,15],2020:[3,2,3,13],2021:[3,1,3,12],2022:[3,7,3,18],2023:[3,6,3,17],2024:[3,18,3,28],2025:[3,10,3,21],name:"Osterferien"},{2012:[4,30,5,4,5,18,5,18],2013:[5,2,5,10],2014:[4,28,5,2,5,30,5,30],2015:[5,11,5,15],2016:[5,6,5,6,5,17,5,20],2017:[5,22,5,26],2018:[5,7,5,11],2019:[5,13,5,17,5,31,5,31],2020:[5,4,5,8],2021:[5,10,5,14],2022:[5,23,5,27],2023:[5,15,5,19],2024:[5,21,5,24],2025:[5,2,5,2,5,26,5,30],name:"Pfingstferien"},{2012:[6,21,8,1],2013:[6,20,7,31],2014:[7,10,8,20],2015:[7,16,8,26],2016:[7,21,8,31],2017:[7,20,8,30],2018:[7,5,8,15],2019:[6,27,8,7],2020:[6,25,8,5],2021:[6,24,8,4],2022:[7,7,8,17],2023:[7,13,8,23],2024:[7,18,8,28],2025:[7,24,9,3],name:"Sommerferien"},{2012:[10,1,10,12],2013:[9,30,10,11],2014:[10,13,10,24],2015:[10,19,10,30],2016:[10,17,10,28],2017:[10,2,10,2,10,16,10,27],2018:[10,1,10,12],2019:[10,4,10,18],2020:[10,5,10,16],2021:[10,4,10,15],2022:[10,10,10,21],2023:[10,2,10,2,10,16,10,27],2024:[10,4,10,4,10,21,11,1],2025:[10,20,10,31],name:"Herbstferien"},{2011:[12,27,1,6],2012:[12,21,1,4],2013:[12,19,1,3],2014:[12,22,1,6],2015:[12,21,1,1],2016:[12,27,1,6],2017:[12,22,1,5],2018:[12,20,1,4],2019:[12,23,1,3],2020:[12,21,1,4],2021:[12,23,1,4],2022:[12,23,1,6],2023:[12,22,1,5],2024:[12,20,1,3],2025:[12,17,1,2],name:"Weihnachtsferien"}]},Hessen:{_state_code:"he",SH:[{2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,29,4,9],2017:[4,3,4,15],2018:[3,26,4,7],2019:[4,14,4,27],2020:[4,6,4,18],2021:[4,6,4,16],2022:[4,11,4,23],2023:[4,3,4,22],2024:[3,25,4,13],2025:[4,7,4,21],name:"Osterferien"},{2012:[7,2,8,10],2013:[7,8,8,16],2014:[7,28,9,5],2015:[7,27,9,4],2016:[7,18,8,26],2017:[7,3,8,11],2018:[6,25,8,3],2019:[7,1,8,9],2020:[7,6,8,14],2021:[7,19,8,27],2022:[7,25,9,2],2023:[7,24,9,1],2024:[7,15,8,23],2025:[7,7,8,15],name:"Sommerferien"},{2012:[10,15,10,27],2013:[10,14,10,26],2014:[10,20,11,1],2015:[10,19,10,31],2016:[10,17,10,29],2017:[10,9,10,21],2018:[10,1,10,13],2019:[9,30,10,12],2020:[10,5,10,17],2021:[10,11,10,23],2022:[10,24,10,29],2023:[10,23,10,28],2024:[],2025:[10,6,10,18],name:"Herbstferien"},{2011:[12,21,1,6],2012:[12,24,1,12],2013:[12,23,1,11],2014:[12,22,1,10],2015:[12,23,1,9],2016:[12,22,1,7],2017:[12,24,1,13],2018:[12,24,1,12],2019:[12,23,1,11],2020:[12,21,1,9],2021:[12,23,1,8],2022:[12,22,1,7],2023:[12,27,1,13],2024:[],2025:[12,22,1,10],name:"Weihnachtsferien"}]},"Mecklenburg-Vorpommern":{_state_code:"mv",SH:[{2012:[2,6,2,17],2013:[2,4,2,15],2014:[2,3,2,15],2015:[2,2,2,14],2016:[2,1,2,13],2017:[2,6,2,18],2018:[2,5,2,16],2019:[2,4,2,15],2020:[2,10,2,21],2021:[2,6,2,19],2022:[2,5,2,17],2023:[2,6,2,18],2024:[2,5,2,16],2025:[2,3,2,14],name:"Winterferien"},{2012:[4,2,4,11],2013:[3,25,4,3],2014:[4,14,4,23],2015:[3,30,4,8],2016:[3,21,3,30],2017:[4,10,4,19],2018:[3,26,4,4],2019:[4,15,4,24],2020:[4,6,4,15],2021:[3,29,4,7],2022:[4,11,4,20],2023:[4,3,4,12],2024:[3,25,4,3],2025:[4,14,4,23,5,30,5,30],name:"Osterferien"},{2012:[5,25,5,29],2013:[5,17,5,21],2014:[6,6,6,10],2015:[5,22,5,26],2016:[5,14,5,17],2017:[6,2,6,6],2018:[5,11,5,11,5,18,5,22],2019:[5,22,5,22,6,7,6,11],2020:[5,22,5,22,5,29,6,2],2021:[5,14,5,14,5,21,5,25],2022:[5,27,5,27,6,3,6,7],2023:[5,19,5,19,5,26,5,30],2024:[5,10,5,10,5,17,5,21],2025:[6,6,6,10],name:"Pfingstferien"},{2012:[6,23,8,4],2013:[6,22,8,3],2014:[7,14,8,23],2015:[7,20,8,29],2016:[7,25,9,3],2017:[7,24,9,2],2018:[7,9,8,18],2019:[7,1,8,10],2020:[6,22,8,1],2021:[6,21,7,31],2022:[7,4,8,13],2023:[7,17,8,26],2024:[7,22,8,31],2025:[7,28,9,6],name:"Sommerferien"},{2012:[10,1,10,5],2013:[10,14,10,19],2014:[10,20,10,25],2015:[10,24,10,30],2016:[10,24,10,28],2017:[10,2,10,2,10,23,10,30],2018:[10,8,10,13,11,1,11,2],2019:[10,4,10,4,10,7,10,12,11,1,11,1],2020:[10,5,10,10,11,2,11,3],2021:[10,2,10,9,11,1,11,2],2022:[10,10,10,14,11,1,11,2],2023:[10,9,10,14,10,30,10,30,11,1,11,1],2024:[10,4,10,4,10,21,10,26,11,1,11,1],2025:[10,2,10,2,10,20,10,25,11,3,11,3],name:"Herbstferien"},{2011:[12,23,1,3],2012:[12,21,1,4],2013:[12,23,1,3],2014:[12,22,1,2],2015:[12,21,1,2],2016:[12,22,1,2],2017:[12,21,1,3],2018:[12,24,1,5],2019:[12,23,1,4],2020:[12,21,1,2],2021:[12,22,12,31],2022:[12,22,1,2],2023:[12,21,1,3],2024:[12,23,1,6],2025:[12,22,1,5],name:"Weihnachtsferien"}]},Niedersachsen:{_state_code:"ni",SH:[{2012:[1,30,1,31],2013:[1,31,2,1],2014:[1,30,1,31],2015:[2,2,2,3],2016:[1,28,1,29],2017:[1,30,1,31],2018:[2,1,2,2],2019:[1,31,2,1],2020:[2,3,2,4],2021:[2,1,2,2],2022:[1,31,2,1],2023:[1,30,1,31],2024:[2,1,2,2],2025:[2,3,2,4],name:"Winterferien"},{2012:[3,26,4,11,4,30,4,30],2013:[3,16,4,2],2014:[4,3,4,22,5,2,5,2],2015:[3,25,4,10],2016:[3,18,4,2],2017:[4,10,4,22],2018:[3,19,4,3],2019:[4,8,4,23],2020:[3,30,4,14],2021:[3,29,4,9],2022:[4,4,4,19],2023:[3,27,4,11],2024:[3,18,4,2],2025:[4,7,4,19,4,30,4,30],name:"Osterferien"},{2012:[5,18,5,18,5,29,5,29],2013:[5,10,5,10,5,21,5,21],2014:[5,30,5,30,6,10,6,10],2015:[5,15,5,15,5,26,5,26],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26,6,6,6,6],2018:[4,30,4,30,5,11,5,11,5,22,5,22],2019:[5,31,5,31,6,11,6,11],2020:[5,22,5,22,6,2,6,2],2021:[5,14,5,14,5,25,5,25],2022:[5,27,5,27,6,7,6,7],2023:[5,19,5,19,5,30,5,30],2024:[5,10,5,10,5,21,5,21],2025:[5,2,5,2,5,30,5,30,6,10,6,10],name:"Pfingstferien"},{2012:[7,23,8,31],2013:[6,27,8,7],2014:[7,31,9,10],2015:[7,23,9,2],2016:[6,23,8,3],2017:[6,22,8,2],2018:[6,28,8,8],2019:[7,4,8,14],2020:[7,16,8,26],2021:[7,22,9,1],2022:[7,14,8,24],2023:[7,6,8,16],2024:[6,24,8,2],2025:[7,3,8,13],name:"Sommerferien"},{2012:[10,22,11,3],2013:[10,4,10,18],2014:[10,27,11,8],2015:[10,19,10,31],2016:[10,4,10,15],2017:[10,2,10,13,10,30,10,30],2018:[10,1,10,12],2019:[10,4,10,18],2020:[10,12,10,23],2021:[10,18,10,29],2022:[10,17,10,28],2023:[10,2,10,2,10,16,10,27],2024:[10,4,10,19,11,1,11,1],2025:[10,13,10,25],name:"Herbstferien"},{2011:[12,23,1,4],2012:[12,24,1,5],2013:[12,23,1,3],2014:[12,22,1,5],2015:[12,23,1,6],2016:[12,21,1,6],2017:[12,22,1,5],2018:[12,24,1,4],2019:[12,23,1,6],2020:[12,23,1,8],2021:[12,23,1,7],2022:[12,23,1,6],2023:[12,27,1,5],2024:[12,23,1,4],2025:[12,22,1,5],name:"Weihnachtsferien"}]},"Nordrhein-Westfalen":{_state_code:"nw",SH:[{2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,21,4,2],2017:[4,10,4,22],2018:[3,26,4,7],2019:[4,15,4,27],2020:[4,6,4,18],2021:[3,29,4,10],2022:[4,11,4,23],2023:[4,3,4,15],2024:[3,25,4,6],2025:[4,14,4,26],name:"Osterferien"},{2012:[5,29,5,29],2013:[5,21,5,21],2014:[6,10,6,10],2015:[5,26,5,26],2016:[5,17,5,17],2017:[6,6,6,6],2018:[5,22,5,25],2019:[6,11,6,11],2020:[6,2,6,2],2021:[5,25,5,25],2023:[5,30,5,30],2024:[5,21,5,21],2025:[6,10,6,10],name:"Pfingstferien"},{2012:[7,9,8,21],2013:[7,22,9,3],2014:[7,7,8,19],2015:[6,29,8,11],2016:[7,11,8,23],2017:[7,17,8,29],2018:[7,16,8,28],2019:[7,15,8,27],2020:[6,29,8,11],2021:[7,5,8,17],2022:[6,27,8,9],2023:[6,22,8,4],2024:[7,8,8,20],2025:[7,14,8,26],name:"Sommerferien"},{2012:[10,8,10,20],2013:[10,21,11,2],2014:[10,6,10,18],2015:[10,5,10,17],2016:[10,10,10,21],2017:[10,23,11,4],2018:[10,15,10,27],2019:[10,14,10,26],2020:[10,12,10,24],2021:[10,11,10,23],2022:[10,4,10,15],2023:[10,2,10,14],2024:[10,14,10,26],2025:[10,13,10,25],name:"Herbstferien"},{2011:[12,23,1,6],2012:[12,21,1,4],2013:[12,23,1,7],2014:[12,22,1,6],2015:[12,23,1,6],2016:[12,23,1,6],2017:[12,27,1,6],2018:[12,21,1,4],2019:[12,23,1,6],2020:[12,23,1,6],2021:[12,24,1,8],2022:[12,23,1,6],2023:[12,21,1,5],2024:[12,23,1,6],2025:[12,22,1,6],name:"Weihnachtsferien"}]},"Rheinland-Pfalz":{_state_code:"rp",SH:[{2019:[2,25,3,1],2020:[2,17,2,21],2022:[2,21,2,25],2024:[],2025:[],name:"Winterferien"},{2012:[3,29,4,13],2013:[3,20,4,5],2014:[4,11,4,25],2015:[3,26,4,10],2016:[3,18,4,1],2017:[4,10,4,21],2018:[3,26,4,6],2019:[4,23,4,30],2020:[4,9,4,17],2021:[3,29,4,6],2022:[4,13,4,22],2023:[4,3,4,6],2024:[3,25,4,2],2025:[4,14,4,25],name:"Osterferien"},{2021:[5,25,6,2],2023:[5,30,6,7],2024:[5,21,5,29],2025:[],name:"Pfingstferien"},{2012:[7,2,8,10],2013:[7,8,8,16],2014:[7,28,9,5],2015:[7,27,9,4],2016:[7,18,8,26],2017:[7,3,8,11],2018:[6,25,8,3],2019:[7,1,8,9],2020:[7,6,8,14],2021:[7,19,8,27],2022:[7,25,9,2],2023:[7,24,9,1],2024:[7,15,8,23],2025:[7,7,8,15],name:"Sommerferien"},{2012:[10,1,10,12],2013:[10,4,10,18],2014:[10,20,10,31],2015:[10,19,10,30],2016:[10,10,10,21],2017:[10,2,10,13],2018:[10,1,10,12],2019:[9,30,10,11],2020:[10,12,10,23],2021:[10,11,10,22],2022:[10,17,10,31],2023:[10,16,10,27],2024:[10,14,10,25],2025:[10,13,10,24],name:"Herbstferien"},{2011:[12,22,1,6],2012:[12,20,1,4],2013:[12,23,1,7],2014:[12,22,1,7],2015:[12,23,1,8],2016:[12,22,1,6],2017:[12,22,1,9],2018:[12,20,1,4],2019:[12,23,1,6],2020:[12,21,12,31],2021:[12,23,12,31],2022:[12,23,1,2],2023:[12,27,1,5],2024:[12,23,1,8],2025:[12,22,1,7],name:"Weihnachtsferien"}]},Saarland:{_state_code:"sl",SH:[{2012:[2,20,2,25],2013:[2,11,2,16],2014:[3,3,3,8],2015:[2,16,2,21],2016:[2,8,2,13],2017:[2,27,3,4],2018:[2,12,2,17],2019:[2,25,3,5],2020:[2,17,2,25],2021:[2,15,2,19],2022:[2,21,3,1],2023:[2,20,2,24],2024:[2,12,2,16],2025:[2,24,3,4],name:"Winterferien"},{2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,29,4,9],2017:[4,10,4,22],2018:[3,26,4,6],2019:[4,17,4,26],2020:[4,14,4,24],2021:[3,29,4,7],2022:[4,14,4,22],2023:[4,3,4,12],2024:[3,25,4,5],2025:[4,14,4,25],name:"Osterferien"},{2021:[5,25,5,28],2022:[6,7,6,10],2023:[5,30,6,2],2024:[5,21,5,24],2025:[],name:"Pfingstferien"},{2012:[7,2,8,14],2013:[7,8,8,17],2014:[7,28,9,6],2015:[7,27,9,5],2016:[7,18,8,27],2017:[7,3,8,14],2018:[6,25,8,3],2019:[7,1,8,9],2020:[7,6,8,14],2021:[7,19,8,27],2022:[7,25,9,2],2023:[7,24,9,1],2024:[7,15,8,23],2025:[7,7,8,14],name:"Sommerferien"},{2012:[10,22,11,3],2013:[10,21,11,2],2014:[10,20,10,31],2015:[10,19,10,31],2016:[10,10,10,22],2017:[10,2,10,14],2018:[10,1,10,12],2019:[10,7,10,18],2020:[10,12,10,23],2021:[10,18,10,29],2022:[10,24,11,4],2023:[10,23,11,3],2024:[10,14,10,25],2025:[10,13,10,24],name:"Herbstferien"},{2011:[12,23,1,4],2012:[12,24,1,5],2013:[12,20,1,4],2014:[12,22,1,7],2015:[12,21,1,2],2016:[12,19,12,31],2017:[12,21,1,5],2018:[12,20,1,4],2019:[12,23,1,3],2020:[12,21,12,31],2021:[12,23,1,3],2022:[12,22,1,4],2023:[12,21,1,2],2024:[12,23,1,3],2025:[12,22,1,2],name:"Weihnachtsferien"}]},Sachsen:{_state_code:"sn",SH:[{2012:[2,13,2,25],2013:[2,4,2,15],2014:[2,17,3,1],2015:[2,9,2,21],2016:[2,8,2,20],2017:[2,13,2,24],2018:[2,12,2,23],2019:[2,18,3,2],2020:[2,10,2,22],2021:[2,8,2,20],2022:[2,12,2,26],2023:[2,13,2,24],2024:[2,12,2,23],2025:[2,17,3,1],name:"Winterferien"},{2012:[4,6,4,14],2013:[3,29,4,6],2014:[4,18,4,26],2015:[4,2,4,11],2016:[3,25,4,2],2017:[4,13,4,22],2018:[3,29,4,6],2019:[4,19,4,26],2020:[4,10,4,18],2021:[4,2,4,10],2022:[4,15,4,23],2023:[4,7,4,15],2024:[3,28,4,5],2025:[4,18,4,25,5,30,5,30],name:"Osterferien"},{2012:[5,18,5,18],2013:[5,10,5,10,5,18,5,22],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6],2017:[5,26,5,26],2018:[5,11,5,11,5,19,5,22],2019:[5,31,5,31],2020:[5,22,5,22],2021:[5,14,5,14],2022:[5,27,5,27],2023:[5,19,5,19],2024:[5,10,5,10,5,18,5,21],2025:[],name:"Pfingstferien"},{2012:[7,23,8,31],2013:[7,15,8,23],2014:[7,21,8,29],2015:[7,13,8,21],2016:[6,27,8,5],2017:[6,26,8,4],2018:[7,2,8,10],2019:[7,8,8,16],2020:[7,20,8,28],2021:[7,26,9,3],2022:[7,18,8,26],2023:[7,10,8,18],2024:[6,20,7,31],2025:[6,28,8,8],name:"Sommerferien"},{2012:[10,22,11,2],2013:[10,21,11,1],2014:[10,20,10,31],2015:[10,12,10,24],2016:[10,3,10,15],2017:[10,2,10,14,10,30,10,30],2018:[10,8,10,20],2019:[10,14,10,25],2020:[10,19,10,31],2021:[10,18,10,30],2022:[10,17,10,29],2023:[10,2,10,14,10,30,10,30],2024:[10,7,10,19],2025:[10,6,10,18],name:"Herbstferien"},{2011:[12,23,1,2],2012:[12,22,1,2],2013:[12,21,1,3],2014:[12,22,1,3],2015:[12,21,1,2],2016:[12,23,1,2],2017:[12,23,1,2],2018:[12,22,1,4],2019:[12,21,1,3],2020:[12,23,1,2],2021:[12,23,1,1],2022:[12,22,1,2],2023:[12,23,1,2],2024:[12,23,1,3],2025:[12,22,1,2],name:"Weihnachtsferien"}]},"Sachsen-Anhalt":{_state_code:"st",SH:[{2012:[2,4,2,11],2013:[2,1,2,8],2014:[2,1,2,12],2015:[2,2,2,14],2016:[2,1,2,10],2017:[2,4,2,11],2018:[2,5,2,9],2019:[2,11,2,15],2020:[2,10,2,14],2021:[2,8,2,13],2022:[2,12,2,19],2023:[2,6,2,11],2024:[2,5,2,10],2025:[1,27,1,31],name:"Winterferien"},{2012:[4,2,4,7],2013:[3,25,3,30],2014:[4,14,4,17],2015:[4,2,4,2],2016:[3,24,3,24],2017:[4,10,4,13],2018:[3,26,3,31,4,30,4,30],2019:[4,18,4,30],2020:[4,6,4,11],2021:[3,29,4,3],2022:[4,11,4,16],2023:[4,3,4,8],2024:[3,25,3,30],2025:[4,7,4,19],name:"Osterferien"},{2012:[5,18,5,25],2013:[5,10,5,18],2014:[5,30,6,7],2015:[5,15,5,23],2016:[5,6,5,14],2017:[5,26,5,26],2018:[5,11,5,19],2019:[5,31,6,1],2020:[5,18,5,30],2021:[5,10,5,22],2022:[5,23,5,28],2023:[5,15,5,19],2024:[5,21,5,24],2025:[5,30,5,30],name:"Pfingstferien"},{2012:[7,23,9,5],2013:[7,15,8,28],2014:[7,21,9,3],2015:[7,13,8,26],2016:[6,27,8,10],2017:[6,26,8,9],2018:[6,28,8,8],2019:[7,4,8,14],2020:[7,16,8,26],2021:[7,22,9,1],2022:[7,14,8,24],2023:[7,6,8,16],2024:[6,24,8,3],2025:[6,28,8,8],name:"Sommerferien"},{2012:[10,29,11,2],2013:[10,21,10,25],2014:[10,27,10,30],2015:[10,17,10,24],2016:[10,4,10,15],2017:[10,2,10,13,10,30,10,30],2018:[10,1,10,12],2019:[10,4,10,11,11,1,11,1],2020:[10,19,10,24],2021:[10,25,10,30],2022:[10,24,11,4],2023:[10,2,10,2,10,16,10,30],2024:[9,30,10,12,11,1,11,1],2025:[10,13,10,25],name:"Herbstferien"},{2011:[12,22,1,7],2012:[12,19,1,4],2013:[12,21,1,3],2014:[12,22,1,5],2015:[12,21,1,5],2016:[12,19,1,2],2017:[12,21,1,3],2018:[12,19,1,4],2019:[12,23,1,4],2020:[12,19,1,5],2021:[12,22,1,8],2022:[12,21,1,5],2023:[12,21,1,3],2024:[12,23,1,4],2025:[12,22,1,5],name:"Weihnachtsferien"}]},"Schleswig-Holstein":{_state_code:"sh",SH:[{2012:[3,30,4,13],2013:[3,25,4,9],2014:[4,16,5,2],2015:[4,1,4,17],2016:[3,24,4,9],2017:[4,7,4,21],2018:[3,29,4,13],2019:[4,4,4,18],2020:[3,30,4,17],2021:[4,1,4,16],2022:[4,4,4,16],2023:[4,6,4,22],2024:[4,2,4,19],2025:[4,11,4,25,5,2,5,2],name:"Osterferien"},{2012:[5,18,5,18],2013:[5,10,5,10],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6],2017:[5,26,5,26],2018:[5,11,5,11],2019:[5,31,5,31],2020:[5,22,5,22],2021:[5,14,5,14],2022:[5,27,5,27],2023:[5,19,5,20],2024:[5,10,5,11],2025:[5,30,5,30],name:"Pfingstferien"},{2012:[6,25,8,4],2013:[6,24,8,3],2014:[7,14,8,23],2015:[7,20,8,29],2016:[7,25,9,3],2017:[7,24,9,2],2018:[7,9,8,18],2019:[7,1,8,10],2020:[6,29,8,8],2021:[6,21,7,31],2022:[7,4,8,13],2023:[7,17,8,26],2024:[7,22,8,31],2025:[7,28,9,6],name:"Sommerferien"},{2012:[10,4,10,19],2013:[10,4,10,18],2014:[10,13,10,25],2015:[10,19,10,31],2016:[10,17,10,29],2017:[10,16,10,27],2018:[10,1,10,19],2019:[10,4,10,18],2020:[10,5,10,17],2021:[10,4,10,16],2022:[10,10,10,21],2023:[10,16,10,27],2024:[10,4,10,4,10,21,11,1],2025:[10,20,10,30,11,28,11,28],name:"Herbstferien"},{2011:[12,23,1,6],2012:[12,24,1,5],2013:[12,23,1,6],2014:[12,22,1,6],2015:[12,21,1,6],2016:[12,23,1,6],2017:[12,21,1,6],2018:[12,21,1,4],2019:[12,23,1,6],2020:[12,21,1,6],2021:[12,23,1,8],2022:[12,23,1,7],2023:[12,27,1,6],2024:[12,19,1,7],2025:[12,19,1,6],name:"Weihnachtsferien"},{2024:[],2025:[2,3,2,3],name:"Winterferien"}]},"Thüringen":{_state_code:"th",SH:[{2012:[2,6,2,11],2013:[2,18,2,23],2014:[2,17,2,22],2015:[2,2,2,7],2016:[2,1,2,6],2017:[2,6,2,11],2018:[2,5,2,9],2019:[2,11,2,15],2020:[2,10,2,14],2021:[2,8,2,13],2022:[2,12,2,19],2023:[2,13,2,17],2024:[2,12,2,16],2025:[2,3,2,8],name:"Winterferien"},{2012:[4,2,4,13],2013:[3,25,4,6],2014:[4,19,5,2],2015:[3,30,4,11],2016:[3,24,4,2],2017:[4,10,4,21],2018:[3,26,4,7],2019:[4,15,4,27],2020:[4,6,4,18],2021:[3,29,4,10],2022:[4,11,4,23],2023:[4,3,4,15],2024:[3,25,4,6],2025:[4,7,4,19],name:"Osterferien"},{2012:[5,25,5,29],2013:[5,10,5,10],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6],2017:[5,26,5,26],2018:[5,11,5,11],2019:[5,31,5,31],2020:[5,22,5,22],2021:[5,14,5,14],2022:[5,27,5,27],2023:[5,19,5,19],2024:[5,10,5,10],2025:[5,30,5,30],name:"Pfingstferien"},{2012:[7,23,8,31],2013:[7,15,8,23],2014:[7,21,8,29],2015:[7,13,8,21],2016:[6,27,8,10],2017:[6,26,8,9],2018:[7,2,8,11],2019:[7,8,8,17],2020:[7,20,8,29],2021:[7,26,9,4],2022:[7,18,8,27],2023:[7,10,8,19],2024:[6,20,7,31],2025:[6,28,8,8],name:"Sommerferien"},{2012:[10,22,11,3],2013:[10,21,11,2],2014:[10,6,10,18],2015:[10,5,10,17],2016:[10,10,10,22],2017:[10,2,10,14],2018:[10,1,10,13],2019:[10,7,10,19],2020:[10,17,10,30],2021:[10,25,11,6],2022:[10,17,10,29],2023:[10,2,10,14],2024:[9,30,10,12],2025:[10,6,10,18],name:"Herbstferien"},{2011:[12,23,1,1],2012:[12,24,1,5],2013:[12,23,1,4],2014:[12,22,1,3],2015:[12,23,1,2],2016:[12,23,12,31],2017:[12,22,1,5],2018:[12,21,1,4],2019:[12,21,1,3],2020:[12,23,1,2],2021:[12,23,12,31],2022:[12,22,1,3],2023:[12,22,1,5],2024:[12,23,1,3],2025:[12,22,1,3],name:"Weihnachtsferien"}]}},l={PH:[{name:"Nytårsdag",fixed_date:[1,1]},{name:"Skærtorsdag",variable_date:"easter",offset:-3},{name:"Langfredag",variable_date:"easter",offset:-2},{name:"Påskedag",variable_date:"easter"},{name:"2. Påskedag",variable_date:"easter",offset:1},{name:"Store Bededag",variable_date:"easter",offset:26},{name:"Kristi Himmelfartsdag",variable_date:"easter",offset:39},{name:"Pinsedag",variable_date:"easter",offset:49},{name:"2. Pinsedag",variable_date:"easter",offset:50},{name:"Grundlovsdag",fixed_date:[6,5]},{name:"Juleaftensdag",fixed_date:[12,24]},{name:"Juledag",fixed_date:[12,25]},{name:"2. Juledag",fixed_date:[12,26]}]},m={PH:[{name:"Cap d'Any",fixed_date:[1,1],only_states:["Cataluña"]},{name:"Año Nuevo",fixed_date:[1,1]},{name:"Reis",fixed_date:[1,6],only_states:["Cataluña"]},{name:"Epifanía del Señor",fixed_date:[1,6]},{name:"Día de Andalucía",fixed_date:[2,28],only_states:["Andalucía"]},{name:"Dia de les Illes Balears",fixed_date:[3,1],only_states:["Islas Baleares"]},{name:"Sant Josep",fixed_date:[3,19],only_states:["Comunidad Valenciana"]},{name:"San José",fixed_date:[3,19],only_states:["Murcia"]},{name:"Jueve Santo",variable_date:"easter",offset:-3,only_states:["Andalucía","Aragón","Castilla y León","Castilla-La Mancha","Canarias","Extremadura","Galicia","Islas Baleares","La Rioja","Comunidad de Madrid","Región de Murcia","Navarra","Asturias","País Vasco","Cantabria","Ceuta","Melilla"]},{name:"Divendres Sant",variable_date:"easter",offset:-2,only_states:["Cataluña","Comunidad Valenciana","Islas Baleares"]},{name:"Viernes Santo",variable_date:"easter",offset:-2},{name:"Dilluns de Pasqua Florida",variable_date:"easter",offset:1,only_states:["Cataluña","Comunidad Valenciana","Islas Baleares"]},{name:"Lunes de Pascua de Resurrección",variable_date:"easter",offset:1,only_states:["País Vasco","Navarra"]},{name:"Día de Aragón",fixed_date:[4,23],only_states:["Aragón"]},{name:"Día de Castilla y León",fixed_date:[4,23],only_states:["Castilla y León"]},{name:"Festa del Treball",fixed_date:[5,1],only_states:["Cataluña","Comunidad Valenciana","Islas Baleares"]},{name:"Fiesta del Trabajo",fixed_date:[5,1]},{name:"Fiesta de la Comunidad de Madrid",fixed_date:[5,2],only_states:["Comunidad de Madrid"]},{name:"Día das Letras Galegas",fixed_date:[5,2],only_states:["Galicia"]},{name:"Día de Canarias",fixed_date:[5,30],only_states:["Canarias"]},{name:"Día de la Región Castilla-La Mancha",fixed_date:[5,31],only_states:["Castilla-La Mancha"]},{name:"Día de la Región de Murcia",fixed_date:[6,9],only_states:["Región de Murcia"]},{name:"Día de la Rioja",fixed_date:[6,9],only_states:["La Rioja"]},{name:"San Antonio",fixed_date:[6,13],only_states:["Ceuta"]},{name:"Sant Joan",fixed_date:[6,24],only_states:["Cataluña"]},{name:"San Juan",fixed_date:[6,24],only_states:["Ceuta"]},{name:"Santiago Apóstol",fixed_date:[7,25],only_states:["Galicia"]},{name:"Santa María de África",fixed_date:[8,6],only_states:["Ceuta"]},{name:"l'Assumpció",fixed_date:[8,15],only_states:["Cataluña"]},{name:"Asunción de la Virgen",fixed_date:[8,15]},{name:"Día de Ceuta",fixed_date:[9,2],only_states:["Ceuta"]},{name:"Día de Asturias",fixed_date:[9,8],only_states:["Asturias"]},{name:"Día de Extremadura",fixed_date:[9,8],only_states:["Extremadura"]},{name:"Diada Nacional de Catalunya",fixed_date:[9,11],only_states:["Cataluña"]},{name:"Día de Cantabria",fixed_date:[9,17],only_states:["Cantabria"]},{name:"Día de Melilla",fixed_date:[9,15],only_states:["Melilla"]},{name:"Dia de la Comunitat Valenciana",fixed_date:[10,9],only_states:["Comunidad Valenciana"]},{name:"Festa Nacional d'Espanya",fixed_date:[10,12],only_states:["Cataluña"]},{name:"Fiesta Nacional de España",fixed_date:[10,12]},{name:"Euskadi Eguna",fixed_date:[10,25],only_states:["País Vasco"]},{name:"Tots Sants",fixed_date:[11,1],only_states:["Cataluña","Comunidad Valenciana","Islas Baleares"]},{name:"Todos los Santos",fixed_date:[11,1]},{name:"Día de la Constitución Española",fixed_date:[12,6]},{name:"La Puríssima",fixed_date:[12,8],only_states:["Cataluña","Comunidad Valenciana","Islas Baleares"]},{name:"La Immaculada Concepción",fixed_date:[12,8]},{name:"Nadal",fixed_date:[12,25],only_states:["Cataluña","Comunidad Valenciana","Islas Baleares"]},{name:"Natividad del Señor",fixed_date:[12,25]},{name:"Sant Esteve",fixed_date:[12,26],only_states:["Cataluña"]}],"Andalucía":{_state_code:"an"},"Aragón":{_state_code:"ar"},"Castilla y León":{_state_code:"cl"},"Castilla-La Mancha":{_state_code:"cm"},Canarias:{_state_code:"cn"},"Cataluña":{_state_code:"ct"},Extremadura:{_state_code:"ex"},Galicia:{_state_code:"ga"},"Islas Baleares":{_state_code:"ib"},"La Rioja":{_state_code:"ri"},"Comunidad de Madrid":{_state_code:"md"},"Región de Murcia":{_state_code:"mc"},Navarra:{_state_code:"nc"},Asturias:{_state_code:"as"},"País Vasco":{_state_code:"pv"},Cantabria:{_state_code:"cb"},"Comunidad Valenciana":{_state_code:"vc"},Ceuta:{_state_code:"ce"},Melilla:{_state_code:"ml"}},u={PH:[{name:"uudenvuodenpäivä - nyårsdagen",fixed_date:[1,1]},{name:"loppiainen - trettondedagen",fixed_date:[1,6]},{name:"pitkäperjantai - långfredagen",variable_date:"easter",offset:-2},{name:"pääsiäispäivä - påskdagen",variable_date:"easter"},{name:"toinen pääsiäispäivä - annandag påsk",variable_date:"easter",offset:1},{name:"vappu - första maj",fixed_date:[5,1]},{name:"helatorstai - Kristi himmelsfärdsdag",variable_date:"easter",offset:39},{name:"helluntai - pingst",variable_date:"easter",offset:49},{name:"juhannuspäivä - midsommardagen",variable_date:"nextSaturday20Jun"},{name:"pyhäinpäivä - alla helgons dag",variable_date:"nextSaturday31Oct"},{name:"itsenäisyyspäivä - självständighetsdagen",fixed_date:[12,6]},{name:"joulupäivä - juldagen",fixed_date:[12,25]},{name:"toinen joulupäivä - annandag jul",fixed_date:[12,26]}]},h={PH:[{name:"Jour de l'an",fixed_date:[1,1]},{name:"Vendredi saint",variable_date:"easter",offset:-2,only_states:["Moselle","Bas-Rhin","Haut-Rhin","Guadeloupe","Martinique","Polynésie française"]},{name:"Lundi de Pâques",variable_date:"easter",offset:1},{name:"Abolition de l'esclavage (Mayotte)",fixed_date:[4,27],only_states:["Mayotte"]},{name:"Saint-Pierre-Chanel",fixed_date:[4,28],only_states:["Wallis-et-Futuna"]},{name:"Fête du Travail",fixed_date:[5,1]},{name:"Fête de la Victoire",fixed_date:[5,8]},{name:"Abolition de l'esclavage (Martinique)",fixed_date:[5,22],only_states:["Martinique"]},{name:"Abolition de l'esclavage (Guadeloupe)",fixed_date:[5,27],only_states:["Guadeloupe"]},{name:"Abolition de l'esclavage (Saint-Martin)",fixed_date:[5,28],only_states:["Saint-Martin (France)"]},{name:"Jeudi de l'Ascension",variable_date:"easter",offset:39},{name:"Lundi de Pentecôte",variable_date:"easter",offset:50},{name:"Abolition de l'esclavage (Guyane)",fixed_date:[6,10],only_states:["Guyane"]},{name:"Fête de l'autonomie",fixed_date:[6,29],only_states:["Polynésie française"]},{name:"Fête nationale",fixed_date:[7,14]},{name:"Fête Victor Schoelcher",fixed_date:[7,21],only_states:["Guadeloupe","Martinique"]},{name:"Fête du Territoire",fixed_date:[7,29],only_states:["Wallis-et-Futuna"]},{name:"Assomption",fixed_date:[8,15]},{name:"Fête de la citoyenneté",fixed_date:[9,24],only_states:["Nouvelle-Calédonie"]},{name:"Abolition de l'esclavage (Saint-Barthélemy)",fixed_date:[10,9],only_states:["Saint-Barthélemy"]},{name:"Toussaint",fixed_date:[11,1]},{name:"Armistice",fixed_date:[11,11]},{name:"Abolition de l'esclavage (Réunion)",fixed_date:[12,20],only_states:["Réunion"]},{name:"Noël",fixed_date:[12,25]},{name:"Saint-Étienne ",fixed_date:[12,26],only_states:["Moselle","Bas-Rhin","Haut-Rhin"]}],"Auvergne-Rhône-Alpes":{_state_code:"ara",SH:[{2018:[2,11,2,25],2019:[2,17,3,3],2020:[2,23,3,8],2021:[2,7,2,21],2022:[2,12,2,27],2023:[2,4,2,19],2024:[2,17,3,3],2025:[2,22,3,9],name:"Vacances d'Hiver"},{2018:[4,8,4,22],2019:[4,14,4,28],2020:[4,19,5,3],2021:[4,11,4,25],2022:[4,16,5,1],2023:[4,8,4,23],2024:[4,13,4,28],2025:[4,19,5,4],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],2022:[5,26,5,27],2023:[5,17,5,21],2024:[5,8,5,12],2025:[2,18,6,1],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,5,9,1],2022:[7,7,8,31],2023:[7,8,9,3],2024:[7,6,9,1],2025:[7,5,8,31],name:"Vacances d'Été"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],2021:[10,24,11,7],2022:[10,22,11,6],2023:[10,21,11,5],2024:[10,19,11,3],2025:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],2021:[12,19,1,2],2022:[12,17,1,2],2023:[12,23,1,7],2024:[12,21,1,5],2025:[12,20,1,4],name:"Vacances de Noël"}]},"Bourgogne-Franche-Comté":{_state_code:"bfc",SH:[{2018:[2,11,2,25],2019:[2,17,3,3],2020:[2,23,3,8],2021:[2,7,2,21],2022:[2,12,2,27],2023:[2,4,2,19],2024:[2,17,3,3],2025:[2,22,3,9],name:"Vacances d'Hiver"},{2018:[4,8,4,22],2019:[4,14,4,28],2020:[4,19,5,3],2021:[4,11,4,25],2022:[4,16,5,1],2023:[4,8,4,23],2024:[4,13,4,28],2025:[4,19,5,4],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],2022:[5,26,5,27],2023:[5,17,5,21],2024:[5,8,5,12],2025:[2,18,6,1],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,5,9,1],2022:[7,7,8,31],2023:[7,8,9,3],2024:[7,6,9,1],2025:[7,5,8,31],name:"Vacances d'Été"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],2021:[10,24,11,7],2022:[10,22,11,6],2023:[10,21,11,5],2024:[10,19,11,3],2025:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],2021:[12,19,1,2],2022:[12,17,1,2],2023:[12,23,1,7],2024:[12,21,1,5],2025:[12,20,1,4],name:"Vacances de Noël"}]},"Nouvelle-Aquitaine":{_state_code:"naq",SH:[{2018:[2,11,2,25],2019:[2,17,3,3],2020:[2,23,3,8],2021:[2,7,2,21],2022:[2,12,2,27],2023:[2,4,2,19],2024:[2,17,3,3],2025:[2,22,3,9],name:"Vacances d'Hiver"},{2018:[4,8,4,22],2019:[4,14,4,28],2020:[4,19,5,3],2021:[4,11,4,25],2022:[4,16,5,1],2023:[4,8,4,23],2024:[4,13,4,28],2025:[4,19,5,4],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],2022:[5,26,5,27],2023:[5,17,5,21],2024:[5,8,5,12],2025:[2,18,6,1],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,5,9,1],2022:[7,7,8,31],2023:[7,8,9,3],2024:[7,6,9,1],2025:[7,5,8,31],name:"Vacances d'Été"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],2021:[10,24,11,7],2022:[10,22,11,6],2023:[10,21,11,5],2024:[10,19,11,3],2025:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],2021:[12,19,1,2],2022:[12,17,1,2],2023:[12,23,1,7],2024:[12,21,1,5],2025:[12,20,1,4],name:"Vacances de Noël"}]},Bretagne:{_state_code:"bre",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],2022:[2,5,2,20],2023:[2,11,2,26],2024:[2,24,3,10],2025:[2,8,2,23],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,11,4,25],2022:[4,9,4,24],2023:[4,15,5,1],2024:[4,20,5,5],2025:[4,5,4,21],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],2022:[5,26,5,27],2023:[5,17,5,21],2024:[5,8,5,12],2025:[2,18,6,1],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,5,9,1],2022:[7,7,8,31],2023:[7,8,9,3],2024:[7,6,9,1],2025:[7,5,8,31],name:"Vacances d'Été"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],2021:[10,24,11,7],2022:[10,22,11,6],2023:[10,21,11,5],2024:[10,19,11,3],2025:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],2021:[12,19,1,2],2022:[12,17,1,2],2023:[12,23,1,7],2024:[12,21,1,5],2025:[12,20,1,4],name:"Vacances de Noël"}]},"Centre-Val de Loire":{_state_code:"cvl",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],2022:[2,5,2,20],2023:[2,11,2,26],2024:[2,24,3,10],2025:[2,8,2,23],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,11,4,25],2022:[4,9,4,24],2023:[4,15,5,1],2024:[4,20,5,5],2025:[4,5,4,21],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],2022:[5,26,5,27],2023:[5,17,5,21],2024:[5,8,5,12],2025:[2,18,6,1],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,5,9,1],2022:[7,7,8,31],2023:[7,8,9,3],2024:[7,6,9,1],2025:[7,5,8,31],name:"Vacances d'Été"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],2021:[10,24,11,7],2022:[10,22,11,6],2023:[10,21,11,5],2024:[10,19,11,3],2025:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],2021:[12,19,1,2],2022:[12,17,1,2],2023:[12,23,1,7],2024:[12,21,1,5],2025:[12,20,1,4],name:"Vacances de Noël"}]},"Grand Est":{_state_code:"ges",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],2022:[2,5,2,20],2023:[2,11,2,26],2024:[2,24,3,10],2025:[2,8,2,23],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,11,4,25],2022:[4,9,4,24],2023:[4,15,5,1],2024:[4,20,5,5],2025:[4,5,4,21],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],2022:[5,26,5,27],2023:[5,17,5,21],2024:[5,8,5,12],2025:[2,18,6,1],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,5,9,1],2022:[7,7,8,31],2023:[7,8,9,3],2024:[7,6,9,1],2025:[7,5,8,31],name:"Vacances d'Été"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],2021:[10,24,11,7],2022:[10,22,11,6],2023:[10,21,11,5],2024:[10,19,11,3],2025:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],2021:[12,19,1,2],2022:[12,17,1,2],2023:[12,23,1,7],2024:[12,21,1,5],2025:[12,20,1,4],name:"Vacances de Noël"}]},"Hauts-de-France":{_state_code:"hdf",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],2022:[2,5,2,20],2023:[2,11,2,26],2024:[2,24,3,10],2025:[2,8,2,23],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,11,4,25],2022:[4,9,4,24],2023:[4,15,5,1],2024:[4,20,5,5],2025:[4,5,4,21],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],2022:[5,26,5,27],2023:[5,17,5,21],2024:[5,8,5,12],2025:[2,18,6,1],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,5,9,1],2022:[7,7,8,31],2023:[7,8,9,3],2024:[7,6,9,1],2025:[7,5,8,31],name:"Vacances d'Été"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],2021:[10,24,11,7],2022:[10,22,11,6],2023:[10,21,11,5],2024:[10,19,11,3],2025:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],2021:[12,19,1,2],2022:[12,17,1,2],2023:[12,23,1,7],2024:[12,21,1,5],2025:[12,20,1,4],name:"Vacances de Noël"}]},Normandie:{_state_code:"nor",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],2022:[2,5,2,20],2023:[2,11,2,26],2024:[2,24,3,10],2025:[2,8,2,23],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,11,4,25],2022:[4,9,4,24],2023:[4,15,5,1],2024:[4,20,5,5],2025:[4,5,4,21],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],2022:[5,26,5,27],2023:[5,17,5,21],2024:[5,8,5,12],2025:[2,18,6,1],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,5,9,1],2022:[7,7,8,31],2023:[7,8,9,3],2024:[7,6,9,1],2025:[7,5,8,31],name:"Vacances d'Été"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],2021:[10,24,11,7],2022:[10,22,11,6],2023:[10,21,11,5],2024:[10,19,11,3],2025:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],2021:[12,19,1,2],2022:[12,17,1,2],2023:[12,23,1,7],2024:[12,21,1,5],2025:[12,20,1,4],name:"Vacances de Noël"}]},"Pays de la Loire":{_state_code:"pdl",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],2022:[2,5,2,20],2023:[2,11,2,26],2024:[2,24,3,10],2025:[2,8,2,23],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,11,4,25],2022:[4,9,4,24],2023:[4,15,5,1],2024:[4,20,5,5],2025:[4,5,4,21],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],2022:[5,26,5,27],2023:[5,17,5,21],2024:[5,8,5,12],2025:[2,18,6,1],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,5,9,1],2022:[7,7,8,31],2023:[7,8,9,3],2024:[7,6,9,1],2025:[7,5,8,31],name:"Vacances d'Été"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],2021:[10,24,11,7],2022:[10,22,11,6],2023:[10,21,11,5],2024:[10,19,11,3],2025:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],2021:[12,19,1,2],2022:[12,17,1,2],2023:[12,23,1,7],2024:[12,21,1,5],2025:[12,20,1,4],name:"Vacances de Noël"}]},"Provence-Alpes-Côte d'Azur":{_state_code:"pac",SH:[{2018:[2,25,3,11],2019:[2,10,2,24],2020:[2,16,3,1],2021:[2,21,3,7],2022:[2,5,2,20],2023:[2,11,2,26],2024:[2,24,3,10],2025:[2,8,2,23],name:"Vacances d'Hiver"},{2018:[4,22,5,6],2019:[4,7,4,22],2020:[4,12,4,26],2021:[4,11,4,25],2022:[4,9,4,24],2023:[4,15,5,1],2024:[4,20,5,5],2025:[4,5,4,21],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],2022:[5,26,5,27],2023:[5,17,5,21],2024:[5,8,5,12],2025:[2,18,6,1],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,5,9,1],2022:[7,7,8,31],2023:[7,8,9,3],2024:[7,6,9,1],2025:[7,5,8,31],name:"Vacances d'Été"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],2021:[10,24,11,7],2022:[10,22,11,6],2023:[10,21,11,5],2024:[10,19,11,3],2025:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],2021:[12,19,1,2],2022:[12,17,1,2],2023:[12,23,1,7],2024:[12,21,1,5],2025:[12,20,1,4],name:"Vacances de Noël"}]},"Île-de-France":{_state_code:"idf",SH:[{2018:[2,18,3,4],2019:[2,24,3,10],2020:[2,9,2,23],2021:[2,14,2,28],2022:[2,19,3,6],2023:[2,18,3,5],2024:[2,10,2,25],2025:[2,15,3,2],name:"Vacances d'Hiver"},{2018:[4,15,4,29],2019:[4,21,5,5],2020:[4,5,4,19],2021:[4,11,4,25],2022:[4,23,5,8],2023:[4,22,5,8],2024:[4,6,4,21],2025:[4,12,4,27],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],2022:[5,26,5,27],2023:[5,17,5,21],2024:[5,8,5,12],2025:[2,18,6,1],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,5,9,1],2022:[7,7,8,31],2023:[7,8,9,3],2024:[7,6,9,1],2025:[7,5,8,31],name:"Vacances d'Été"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],2021:[10,24,11,7],2022:[10,22,11,6],2023:[10,21,11,5],2024:[10,19,11,3],2025:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],2021:[12,19,1,2],2022:[12,17,1,2],2023:[12,23,1,7],2024:[12,21,1,5],2025:[12,20,1,4],name:"Vacances de Noël"}]},Occitanie:{_state_code:"occ",SH:[{2018:[2,18,3,4],2019:[2,24,3,10],2020:[2,9,2,23],2021:[2,14,2,28],2022:[2,19,3,6],2023:[2,18,3,5],2024:[2,10,2,25],2025:[2,15,3,2],name:"Vacances d'Hiver"},{2018:[4,15,4,29],2019:[4,21,5,5],2020:[4,5,4,19],2021:[4,11,4,25],2022:[4,23,5,8],2023:[4,22,5,8],2024:[4,6,4,21],2025:[4,12,4,27],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],2022:[5,26,5,27],2023:[5,17,5,21],2024:[5,8,5,12],2025:[2,18,6,1],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,5,9,1],2022:[7,7,8,31],2023:[7,8,9,3],2024:[7,6,9,1],2025:[7,5,8,31],name:"Vacances d'Été"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,1],2021:[10,24,11,7],2022:[10,22,11,6],2023:[10,21,11,5],2024:[10,19,11,3],2025:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],2021:[12,19,1,2],2022:[12,17,1,2],2023:[12,23,1,7],2024:[12,21,1,5],2025:[12,20,1,4],name:"Vacances de Noël"}]},Corse:{_state_code:"cor",SH:[{2018:[2,27,3,11],2019:[2,24,3,10],2020:[2,16,3,1],2021:[2,14,2,28],2022:[2,19,3,6],2023:[2,18,3,5],name:"Vacances d'Hiver"},{2018:[4,24,5,6],2019:[4,21,5,5],2020:[4,19,5,3],2021:[4,11,4,25],2022:[4,23,5,8],2023:[4,15,5,1],name:"Vacances de Printemps"},{2018:[5,10,5,10],2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,14,5,16],2023:[5,17,5,21],name:"Pont de l'Ascension"},{2018:[7,11,9,4],2019:[7,7,9,2],2020:[7,5,8,31],2021:[7,8,8,30],2022:[7,8,8,31],2023:[7,8,9,3],name:"Vacances d'Été"},{2018:[10,24,11,4],2019:[10,20,11,3],2020:[10,18,11,1],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de Noël"}]},Guadeloupe:{_state_code:"gua",SH:[{2018:[2,9,2,21],2019:[2,24,3,10],2020:[2,16,3,1],2021:[2,10,2,21],2022:[2,19,3,6],2023:[2,11,2,26],name:"Vacances de Carnaval"},{2018:[3,25,4,8],2019:[4,19,5,1],2020:[4,9,4,22],2021:[3,28,4,11],2022:[4,13,4,24],2023:[4,1,4,16],name:"Vacances de Pâques"},{2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,28,5,29],2022:[5,27,5,27],name:"Pont de l'Ascension"},{2018:[7,7,9,3],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],2022:[7,7,8,31],2023:[7,8,9,3],name:"Grandes Vacances"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de Noël"}]},"Saint-Martin (France)":{_state_code:"mf",SH:[{2018:[2,9,2,21],2019:[2,24,3,10],2020:[2,16,3,1],2021:[2,10,2,21],2023:[2,11,2,26],name:"Vacances de Carnaval"},{2018:[3,25,4,8],2019:[4,19,5,1],2020:[4,9,4,22],2021:[3,28,4,11],2023:[4,1,4,16],name:"Vacances de Pâques"},{2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,25,5,27],name:"Pont de l'Ascension"},{2018:[7,7,9,3],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],2023:[7,8,9,3],name:"Grandes Vacances"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de Noël"}]},"Saint-Barthélemy":{_state_code:"bl",SH:[{2018:[2,9,2,21],2019:[2,24,3,10],2020:[2,16,3,1],2021:[2,10,2,21],2023:[2,11,2,26],name:"Vacances de Carnaval"},{2018:[3,25,4,8],2019:[4,19,5,1],2020:[4,9,4,22],2021:[3,28,4,11],2023:[4,1,4,16],name:"Vacances de Pâques"},{2019:[5,30,6,2],2020:[5,21,5,24],name:"Pont de l'Ascension"},{2018:[7,7,9,3],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,6,8,30],2023:[7,8,9,3],name:"Grandes Vacances"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,18,11,2],name:"Vacances de la Toussaint"},{2018:[12,23,1,6],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de Noël"}]},Guyane:{_state_code:"guf",SH:[{2018:[2,11,2,25],2019:[2,24,3,10],2020:[2,16,3,1],2021:[2,14,2,28],2022:[2,19,3,6],2023:[2,18,3,5],name:"Vacances de Carnaval"},{2018:[3,30,4,15],2019:[4,19,5,1],2020:[4,10,4,26],2021:[4,2,4,18],2022:[4,14,5,1],2023:[4,5,4,19],name:"Vacances de Pâques"},{2019:[5,30,6,2],2020:[5,21,5,24],2021:[5,13,5,16],2022:[5,25,5,29],2023:[5,13,5,21],name:"Pont de l'Ascension"},{2018:[7,8,9,2],2019:[7,9,9,1],2020:[7,5,8,31],2021:[7,4,8,31],2022:[7,9,8,31],2023:[7,8,9,3],name:"Grandes Vacances"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,25,11,8],name:"Vacances de la Toussaint"},{2018:[12,23,1,5],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de Noël"}]},Martinique:{_state_code:"mtq",SH:[{2018:[2,8,2,18],2019:[2,24,3,10],2020:[2,23,3,8],2021:[2,7,2,21],2022:[2,19,3,6],2023:[2,11,2,26],name:"Vacances de Carnaval"},{2018:[3,25,4,8],2019:[4,14,4,28],2020:[4,5,4,19],2021:[3,28,4,11],2022:[4,9,4,24],2023:[4,1,4,16],name:"Vacances de Pâques"},{2018:[5,8,5,13],2019:[5,30,6,2],2020:[5,14,5,15],2022:[5,27,5,27],2023:[5,17,5,21],name:"Pont de l'Ascension"},{2018:[7,7,9,3],2019:[7,7,9,1],2020:[7,5,8,31],2021:[7,7,8,30],2022:[7,7,8,31],2023:[7,8,9,3],name:"Grandes Vacances"},{2018:[10,21,11,4],2019:[10,20,11,3],2020:[10,25,11,8],name:"Vacances de la Toussaint"},{2018:[12,23,1,5],2019:[12,22,1,5],2020:[12,20,1,3],name:"Vacances de Noël"}]},Mayotte:{_state_code:"may",SH:[{2018:[2,25,3,11],2019:[2,24,3,10],2020:[3,1,3,15],2021:[2,28,3,14],2022:[2,26,3,13],2023:[2,18,3,5],name:"Vacances de Carnaval"},{2018:[5,6,5,13],2019:[4,27,5,5],2020:[5,3,5,10],2021:[5,1,5,16],2022:[4,30,5,15],2023:[4,22,5,8],name:"Vacances de Pâques"},{2020:[5,21,5,24],name:"Pont de l'Ascension"},{2018:[7,8,8,22],2019:[7,7,8,22],2020:[7,5,8,23],2021:[7,7,8,22],2022:[7,6,8,23],2023:[7,8,8,22],name:"Grandes Vacances"},{2018:[10,7,10,21],2019:[10,13,10,27],2020:[10,11,10,25],name:"Vacances de la Toussaint"},{2018:[12,9,1,6],2019:[12,15,1,12],2020:[12,13,1,10],name:"Vacances de Noël"}]},"La Réunion":{_state_code:"lre",SH:[{2018:[3,11,3,25],2019:[3,10,3,24],2020:[3,8,3,22],2021:[3,7,3,21],2022:[3,12,3,27],2023:[3,11,3,26],name:"Vacances après 3ème période"},{2018:[5,6,5,16],2019:[5,8,5,19],2020:[5,1,5,13],2021:[5,5,5,16],2022:[5,14,5,29],2023:[5,13,5,29],name:"Vacances après 4ème période"},{2018:[7,8,8,16],2019:[7,7,8,15],2020:[7,8,8,15],2022:[7,9,8,15],2023:[7,8,9,16],name:"Vacances hiver austral"},{2018:[10,14,10,28],2019:[10,13,10,27],2020:[10,11,11,25],name:"Vacances après 1ère période"},{2018:[12,23,1,27],2019:[12,20,1,26],2020:[12,20,1,24],name:"Vacances été austral"}]},"Nouvelle-Calédonie":{_state_code:"nc",SH:[{2018:[4,7,4,15],2019:[4,6,4,14],2020:[4,4,4,13],2021:[4,3,4,18],2022:[4,2,4,16],2023:[4,2,4,16],name:"Vacances 1ère période"},{2018:[6,9,6,24],2019:[6,8,6,23],2020:[6,6,6,21],2021:[6,5,6,20],2022:[6,4,6,18],2023:[4,2,4,16],name:"Vacances 2ème période"},{2018:[8,11,8,26],2019:[8,10,8,25],2020:[8,8,8,23],2021:[8,7,8,22],2022:[8,6,8,20],2023:[8,5,8,20],name:"Vacances 3ème période"},{2018:[10,13,10,18],2019:[10,12,10,27],2020:[10,10,10,25],2021:[10,9,10,24],2022:[10,8,10,22],2023:[10,7,10,22],name:"Vacances 4ème période"},{2018:[12,15,2,17],2019:[12,14,2,16],2020:[12,18,2,14],2021:[12,18,2,13],2022:[12,17,2,12],2023:[12,16,2,11],name:"Vacances d'Été"}]},"Polynésie française":{_state_code:"pf",SH:[{2018:[2,18,2,25],2019:[2,17,2,24],2020:[2,16,2,23],2021:[2,21,2,28],2022:[2,19,2,27],2023:[2,19,2,25],name:"Vacances de février"},{2018:[3,30,4,15],2019:[4,7,4,22],2020:[3,29,4,13],2021:[4,6,4,18],2022:[4,2,4,18],2023:[4,2,4,15],name:"Vacances d'avril"},{2018:[5,20,5,27],2019:[5,26,6,2],2020:[5,17,5,24],2021:[5,25,5,30],2022:[5,21,5,29],2023:[5,21,5,26],name:"Vacances de mai"},{2018:[7,7,8,15],2019:[7,7,8,13],2020:[7,5,8,9],2021:[7,3,8,8],2022:[7,2,8,7],2023:[7,2,8,6],name:"Grandes Vacances"},{2018:[9,16,9,23],2019:[9,15,9,22],2020:[9,13,9,20],2021:[9,12,9,19],2022:[9,10,9,18],name:"Vacances de septembre"},{2018:[10,28,11,11],2019:[10,27,11,11],2020:[10,25,11,8],2021:[10,24,11,7],2022:[10,22,11,6],name:"Vacances d'octobre-novembre"},{2018:[12,16,1,13],2019:[12,15,1,12],2020:[12,13,1,10],2021:[12,12,1,9],2022:[12,10,1,8],name:"Vacances de Noël"}]},"Saint-Pierre-et-Miquelon":{_state_code:"pm",SH:[{2018:[2,24,3,11],2019:[2,16,3,3],2020:[2,22,3,8],2021:[2,19,3,7],name:"Vacances d'Hiver"},{2018:[4,28,5,13],2019:[4,20,5,5],2020:[4,18,5,3],2021:[4,24,5,9],2022:[4,15,5,1],name:"Vacances de Printemps"},{2020:[5,21,5,24],2021:[5,13,5,16],2022:[5,26,5,29],name:"Pont de l'Ascension"},{2018:[6,30,9,6],2019:[7,4,9,4],2020:[7,4,9,2],2021:[7,3,9,1],2022:[7,1,8,31],name:"Vacances d'Été"},{2018:[10,27,11,4],2019:[10,26,11,5],2020:[10,22,11,1],name:"Vacances de la Toussaint"},{2018:[12,22,1,6],2019:[12,21,1,5],2020:[12,19,1,3],name:"Vacances de Noël"}]},"Wallis-et-Futuna":{_state_code:"wf",SH:[{2018:[4,1,4,15],2019:[3,31,4,14],2020:[3,29,4,13],2021:[4,3,4,18],name:"Vacances 1ère période"},{2018:[6,8,6,24],2019:[6,9,6,23],2020:[6,5,6,21],2021:[6,5,6,20],name:"Vacances 2ème période"},{2018:[8,10,8,26],2019:[8,11,8,25],2020:[8,9,8,23],2021:[8,7,8,22],name:"Vacances 3ème période"},{2018:[10,14,10,28],2019:[10,13,10,27],2020:[10,11,10,25],2021:[10,9,10,24],name:"Vacances 4ème période"},{2018:[12,16,2,10],2019:[12,15,2,9],2020:[12,13,2,14],2021:[12,18,2,19],name:"Vacances d'Été"}]}},c={England:{PH:[{name:"New Year’s Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Early May bank holiday",variable_date:"firstMayMonday"},{name:"Spring bank holiday",variable_date:"lastMayMonday"},{name:"Summer bank holiday",variable_date:"lastAugustMonday"},{name:"Christmas",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},Wales:{PH:[{name:"New Year’s Day",fixed_date:[1,1]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Early May bank holiday",variable_date:"firstMayMonday"},{name:"Spring bank holiday",variable_date:"lastMayMonday"},{name:"Summer bank holiday",variable_date:"lastAugustMonday"},{name:"Christmas",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]}},y={PH:[{name:"Πρωτοχρονιά",fixed_date:[1,1]},{name:"Θεοφάνια",fixed_date:[1,6]},{name:"Καθαρά Δευτέρα",variable_date:"orthodox easter",offset:-48},{name:"25η Μαρτίου",fixed_date:[3,25]},{name:"Μεγάλη Παρασκευή",variable_date:"orthodox easter",offset:-2},{name:"Πάσχα",variable_date:"orthodox easter",offset:0},{name:"Δευτέρα του Πάσχα",variable_date:"orthodox easter",offset:1},{name:"Πρωτομαγιά",fixed_date:[5,1]},{name:"Κοίμηση της Θεοτόκου",fixed_date:[8,15]},{name:"28η Οκτωβρίου",fixed_date:[10,28]},{name:"Χριστούγεννα",fixed_date:[12,25]},{name:"2η μέρα Χριστουγέννων",fixed_date:[12,26]}],SH:[{2019:[1,30,1,30],2020:[1,30,1,30],name:"Τριών Ιεραρχών"},{2019:[4,22,5,6],2020:[4,13,4,26],name:"Πάσχα"},{2019:[6,17,6,17],2020:[6,8,6,8],name:"Αγίου Πνεύματος"},{2019:[7,1,8,31],2020:[7,1,8,31],name:"Καλοκαίρι"},{2019:[11,17,11,17],name:"Πολυτεχνείο"},{2018:[12,24,1,7],2019:[12,24,1,7],2020:[12,24,1,7],name:"Χριστούγεννα"}]},_={PH:[{name:"Nova godina",fixed_date:[1,1]},{name:"Sveta tri kralja",fixed_date:[1,6]},{name:"Uskršnji ponedjeljak",variable_date:"easter",offset:1},{name:"Praznik rada",fixed_date:[5,1]},{name:"Tijelovo",variable_date:"easter",offset:60},{name:"Dan antifašističke borbe",fixed_date:[6,22]},{name:"Dan pobjede i domovinske zahvalnosti",fixed_date:[8,5]},{name:"Velika Gospa",fixed_date:[8,15]},{name:"Svi sveti",fixed_date:[11,1]},{name:"Dan sjećanja na žrtve Domovinskog rata",fixed_date:[11,18]},{name:"Božić",fixed_date:[12,25]},{name:"Sveti Stjepan",fixed_date:[12,26]}],SH:[{2022:[2,21,2,27],2023:[2,20,2,26],name:"Drugi dio zimskog odmora"},{2022:[4,14,4,24],2023:[4,6,4,16],name:"Proljetni odmor"},{2022:[6,23,9,3],2023:[6,23,9,4],name:"Ljetni praznici"},{2021:[11,2,11,3],2022:[10,31,11,1],name:"Jesenski odmor"},{2021:[12,24,1,9],2022:[12,27,1,8],name:"Prvi dio zimskog odmora"}]},g={PH:[{name:"újév",fixed_date:[1,1]},{name:"az 1848-as forradalom ünnepe",fixed_date:[3,15]},{name:"nagypéntek",variable_date:"easter",offset:-2},{name:"húsvétvasárnap",variable_date:"easter"},{name:"húsvéthétfő",variable_date:"easter",offset:1},{name:"pünkösdvasárnap",variable_date:"easter",offset:49},{name:"pünkösdhétfő",variable_date:"easter",offset:50},{name:"a munka ünnepe",fixed_date:[5,1]},{name:"az államalapítás ünnepe",fixed_date:[8,20]},{name:"az 1956-os forradalom ünnepe",fixed_date:[10,23]},{name:"mindenszentek",fixed_date:[11,1]},{name:"karácsony",fixed_date:[12,25]},{name:"karácsony másnap",fixed_date:[12,26]}],SH:[{2014:[10,23,11,2],2015:[10,23,11,1],2016:[10,29,11,6],2017:[10,28,11,5],2018:[10,27,11,4],2019:[10,26,11,3],2020:[10,23,11,1],2021:[10,23,11,1],2023:[10,28,11,5],2024:[10,26,11,3],name:"őszi szünet"},{2014:[12,20,1,4],2015:[12,19,1,3],2016:[12,22,1,2],2017:[12,23,1,2],2018:[12,22,1,2],2019:[12,21,1,5],2020:[12,19,1,3],2021:[12,22,1,2],2022:[12,22,1,8],2023:[12,22,1,7],2024:[12,21,1,5],name:"téli szünet"},{2015:[4,2,4,7],2016:[3,24,3,29],2017:[4,13,4,18],2018:[3,29,4,3],2019:[4,18,4,23],2020:[4,7,4,14],2021:[4,1,4,6],2022:[4,14,4,19],2023:[4,6,4,11],2024:[3,28,4,7],2025:[4,17,4,27],name:"tavaszi szünet"},{2015:[6,16,8,31],2016:[6,16,8,31],2017:[6,16,8,31],2018:[6,16,9,2],2019:[6,15,9,1],2020:[6,16,8,31],2021:[6,16,8,31],2022:[6,16,8,31],2023:[6,17,8,31],2024:[6,22,9,1],2025:[6,21,8,31],name:"nyári szünet"}]},p={PH:[{name:"New Year’s Day",fixed_date:[1,1]},{name:"St Patrick’s Day",fixed_date:[3,17]},{name:"St Patrick’s Day",variable_date:"nextMo-Fr17March"},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"May Bank Holiday",variable_date:"firstMayMonday"},{name:"June Bank Holiday",variable_date:"firstJuneMonday"},{name:"August Bank Holiday",variable_date:"firstAugustMonday"},{name:"October Bank Holiday (Halloween)",variable_date:"lastOctoberMonday"},{name:"Christmas",fixed_date:[12,25]},{name:"St Stephen’s Day",fixed_date:[12,26]},{name:"Bank Holiday",fixed_date:[12,27]}]},b={PH:[{name:"Capodanno",fixed_date:[1,1]},{name:"Epifania",fixed_date:[1,6]},{name:"Liberazione dal nazifascismo (1945)",fixed_date:[4,25]},{name:"Pasqua",variable_date:"easter"},{name:"Lunedì di Pasqua",variable_date:"easter",offset:1},{name:"Festa del lavoro",fixed_date:[5,1]},{name:"Festa della Repubblica",fixed_date:[6,2]},{name:"Assunzione di Maria",fixed_date:[8,15]},{name:"Ognissanti",fixed_date:[11,1]},{name:"Immacolata Concezione",fixed_date:[12,8]},{name:"Natale di Gesù",fixed_date:[12,25]},{name:"Santo Stefano",fixed_date:[12,26]}]},v={PH:[{name:"元日",fixed_date:[1,1]},{name:"成人の日",variable_date:"firstJanuaryMonday",offset:7},{name:"建国記念の日",fixed_date:[2,11]},{name:"天皇誕生日",fixed_date:[2,23]},{name:"昭和の日",fixed_date:[4,29]},{name:"憲法記念日",fixed_date:[5,3]},{name:"みどりの日",fixed_date:[5,4]},{name:"こどもの日",fixed_date:[5,5]},{name:"海の日",variable_date:"firstJulyMonday",offset:14},{name:"山の日",fixed_date:[8,11]},{name:"敬老の日",variable_date:"firstSeptemberMonday",offset:14},{name:"スポーツの日",variable_date:"firstNovemberMonday",offset:7},{name:"文化の日",fixed_date:[11,3]},{name:"勤労感謝の日",fixed_date:[11,23]},{name:"春分の日",variable_date:"springEquinox"},{name:"秋分の日",variable_date:"autumnalEquinox"}]},x={PH:[{name:"Nieuwjaarsdag",fixed_date:[1,1]},{name:"Goede vrijdag",variable_date:"easter",offset:-2},{name:"Tweede Paasdag",variable_date:"easter",offset:1},{name:"Koningsdag",fixed_date:[4,27]},{name:"Bevrijdingsdag",fixed_date:[5,5]},{name:"Hemelvaartsdag",variable_date:"easter",offset:39},{name:"Tweede Pinksterdag",variable_date:"easter",offset:50},{name:"Eerste Kerstdag",fixed_date:[12,25]},{name:"Tweede Kerstdag",fixed_date:[12,26]}]},D={PH:[{name:"Nyttårsdag",fixed_date:[1,1]},{name:"Skjærtorsdag",variable_date:"easter",offset:-3},{name:"Langfredag",variable_date:"easter",offset:-2},{name:"Påskedag",variable_date:"easter"},{name:"2. Påskedag",variable_date:"easter",offset:1},{name:"1. Mai",fixed_date:[5,1]},{name:"Grunnlovsdagen",fixed_date:[5,17]},{name:"Kristi Himmelfartsdag",variable_date:"easter",offset:39},{name:"Pinsedag",variable_date:"easter",offset:49},{name:"2. Pinsedag",variable_date:"easter",offset:50},{name:"Juledag",fixed_date:[12,25]},{name:"2. Juledag",fixed_date:[12,26]}]},k={PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Day after New Year's Day",fixed_date:[1,2]},{name:"Waitangi Day",fixed_date:[2,6]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Anzac Day",fixed_date:[4,25]},{name:"Queen's Birthday",variable_date:"firstJuneMonday"},{name:"Labour Day",variable_date:"firstOctoberMonday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Boxing Day",fixed_date:[12,26]}]},w={PH:[{name:"Nowy Rok",fixed_date:[1,1]},{name:"Święto Trzech Króli",fixed_date:[1,6]},{name:"Wielkanoc",variable_date:"easter"},{name:"Lany Poniedziałek - drugi dzień Wielkiej Nocy",variable_date:"easter",offset:1},{name:"Pierwszy Maja",fixed_date:[5,1]},{name:"Trzeci Maja",fixed_date:[5,3]},{name:"Zielone Świątki",variable_date:"easter",offset:49},{name:"Boże Ciało",variable_date:"easter",offset:60},{name:"Wniebowzięcie Najświętszej Maryi Panny",fixed_date:[8,15]},{name:"Wszystkich Świętych",fixed_date:[11,1]},{name:"Święto Niepodległości",fixed_date:[11,11]},{name:"pierwszy dzień Bożego Narodzenia",fixed_date:[12,25]},{name:"drugi dzień Bożego Narodzenia",fixed_date:[12,26]}]},M={PH:[{name:"Anul Nou",fixed_date:[1,1]},{name:"A doua zi de Anul Nou",fixed_date:[1,2]},{name:"Ziua Unirii Principatelor Române (Ziua Unirii)",fixed_date:[1,24]},{name:"Paștele ortodox",variable_date:"orthodox easter"},{name:"A doua zi de Paște ortodox",variable_date:"orthodox easter",offset:1},{name:"Ziua Muncii",fixed_date:[5,1]},{name:"Rusaliile",variable_date:"orthodox easter",offset:50},{name:"A doua zi de Rusalii",variable_date:"orthodox easter",offset:51},{name:"Adormirea Maicii Domnului",fixed_date:[8,15]},{name:"Sfântul Apostol Andrei",fixed_date:[11,30]},{name:"Ziua Națională (Ziua Marii Uniri)",fixed_date:[12,1]},{name:"Crăciunul",fixed_date:[12,25]},{name:"A doua zi de Crăciun",fixed_date:[12,26]}],SH:[{2015:[1,31,2,8],2016:[1,30,2,7],2021:[1,30,2,7],name:"Vacanţa intersemestrială"},{2015:[4,11,4,19],2016:[4,23,5,3],2021:[4,30,5,9],name:"Vacanța de primăvară"},{2015:[6,20,9,13],2016:[6,18,9,4],2021:[6,26,9,13],name:"Vacanța de vară"},{2014:[12,20,1,4],2015:[12,19,1,3],2020:[12,23,1,10],2021:[12,23,1,9],name:"Vacanța de iarnă"}]},S={PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]}],"Татарстан":{_state_code:"tatarstan",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"Ураза-байрам",fixed_date:[7,28]},{name:"День Республики Татарстан",fixed_date:[8,30]},{name:"Курбан-байрам",fixed_date:[10,4]},{name:"День Конституции Республики Татарстан",fixed_date:[11,6]}]},"Башкортостан":{_state_code:"bashkortostan",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"Ураза-байрам",fixed_date:[7,28]},{name:"Курбан-байрам",fixed_date:[10,4]},{name:"День Республики Башкирии",fixed_date:[10,11]},{name:"День Конституции Башкортостана",fixed_date:[12,24]}]},"Чувашия":{_state_code:"chuvashia",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"День Чувашской республики",fixed_date:[6,24]}]},"Республика Саха (Якутия)":{_state_code:"sakha",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"День Республики Саха",fixed_date:[4,27]},{name:"Ысыах",fixed_date:[6,23]},{name:"День государственности Республики Саха",fixed_date:[9,27]}]},"Калмыкия":{_state_code:"kalmykia",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"Цаган Сар",fixed_date:[1,14]},{name:"День принятия Степного Уложения (Конституции) Республики Калмыкия",fixed_date:[4,5]},{name:"День рождения Будды Шакьямун",fixed_date:[6,6]},{name:"Зул",fixed_date:[12,15]},{name:"День памяти жертв депортации калмыцкого народа",fixed_date:[12,28]}]},"Республика Бурятия":{_state_code:"buryatia",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"Сагаалган",fixed_date:[1,14]}]},"Республика Карелия":{_state_code:"karelia",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"День Республики Карелия",fixed_date:[6,8]},{name:"День освобождения Карелии от фашистских захватчиков",fixed_date:[9,30]}]},"Приволжский федеральный округ":{_state_code:"udmurtia",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"День Государственности Удмуртской Республики",fixed_date:[5,31]}]},"Адыгея":{_state_code:"adygea",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"Ураза-байрам",fixed_date:[7,28]},{name:"Курбан-байрам",fixed_date:[10,4]},{name:"День образования Республики Адыгея",fixed_date:[10,5]}]},"Дагестан":{_state_code:"dagestan",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"День Конституции Республики Дагестан",fixed_date:[7,26]},{name:"Ураза-байрам",fixed_date:[7,28]},{name:"День единства народов Дагестана",fixed_date:[9,15]},{name:"Курбан-байрам",fixed_date:[10,4]}]},"Ингушетия":{_state_code:"ingushetia",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"День образования Республики Ингушетия",fixed_date:[6,4]},{name:"Ураза-байрам",fixed_date:[7,28]},{name:"Курбан-байрам",fixed_date:[10,4]}]},"Карачаево-Черкесия":{_state_code:"karachay_cherkess",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"День возрождения карачаевского народа",fixed_date:[5,3]},{name:"Ураза-байрам",fixed_date:[7,28]},{name:"Курбан-байрам",fixed_date:[10,4]}]},"Чечня":{_state_code:"chechnya",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"День мира в Чеченской Республике",fixed_date:[4,16]},{name:"Ураза-байрам",fixed_date:[7,28]},{name:"Курбан-байрам",fixed_date:[10,4]}]},"Кабардино-Балкария":{_state_code:"kabardino_balkaria",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"День возрождения балкарского народа",fixed_date:[3,28]},{name:"Черкесский день траура",fixed_date:[5,21]},{name:"Ураза-байрам",fixed_date:[7,28]},{name:"День государственности Кабардино-Балкарской Республики",fixed_date:[9,1]},{name:"Курбан-байрам",fixed_date:[10,4]}]},"Республика Алтай":{_state_code:"altai",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"Чага-Байрам",fixed_date:[1,14]}]},"Республика Тыва":{_state_code:"tuva",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"Народный праздник Шагаа",fixed_date:[1,14]},{name:"День Республики Тыва",fixed_date:[8,15]}]},"Саратовская область":{_state_code:"saratov",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"Радоница",fixed_date:[4,29]}]},"Брянская область":{_state_code:"bryansk",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"Радоница",fixed_date:[4,29]},{name:"День освобождения города Брянска",fixed_date:[9,17]}]},"Республика Коми":{_state_code:"komi",PH:[{name:"1. Новогодние каникулы",fixed_date:[1,1]},{name:"2. Новогодние каникулы",fixed_date:[1,2]},{name:"3. Новогодние каникулы",fixed_date:[1,3]},{name:"4. Новогодние каникулы",fixed_date:[1,4]},{name:"5. Новогодние каникулы",fixed_date:[1,5]},{name:"6. Новогодние каникулы",fixed_date:[1,6]},{name:"Рождество Христово",fixed_date:[1,7]},{name:"8. Новогодние каникулы",fixed_date:[1,8]},{name:"День защитника Отечества",fixed_date:[2,23]},{name:"Международный женский день",fixed_date:[3,8]},{name:"День Победы",fixed_date:[5,9]},{name:"Праздник Весны и Труда",fixed_date:[5,1]},{name:"День народного единства",fixed_date:[11,4]},{name:"День России",fixed_date:[6,12]},{name:"День Республики Коми",fixed_date:[8,22]}]}},P={PH:[{name:"nyårsdagen",fixed_date:[1,1]},{name:"trettondedag jul",fixed_date:[1,6]},{name:"långfredagen",variable_date:"easter",offset:-2},{name:"påskdagen",variable_date:"easter"},{name:"annandag påsk",variable_date:"easter",offset:1},{name:"första maj",fixed_date:[5,1]},{name:"Kristi himmelsfärdsdag",variable_date:"easter",offset:39},{name:"pingstdagen",variable_date:"easter",offset:49},{name:"nationaldagen",fixed_date:[6,6]},{name:"midsommardagen",variable_date:"nextSaturday20Jun"},{name:"alla helgons dag",variable_date:"nextSaturday31Oct"},{name:"juldagen",fixed_date:[12,25]},{name:"annandag jul",fixed_date:[12,26]}]},T={PH:[{name:"novo leto",fixed_date:[1,1]},{name:"Prešernov dan, slovenski kulturni praznik",fixed_date:[2,8]},{name:"velikonočna nedelja",variable_date:"easter"},{name:"velikonočni ponedeljek",variable_date:"easter",offset:1},{name:"dan upora proti okupatorju",fixed_date:[4,27]},{name:"praznik dela 1",fixed_date:[5,1]},{name:"praznik dela 2",fixed_date:[5,2]},{name:"binkoštna nedelja - binkošti",variable_date:"easter",offset:49},{name:"dan državnosti",fixed_date:[6,25]},{name:"Marijino vnebovzetje",fixed_date:[8,15]},{name:"dan reformacije",fixed_date:[10,31]},{name:"dan spomina na mrtve",fixed_date:[11,1]},{name:"božič",fixed_date:[12,25]},{name:"dan samostojnosti in enotnosti",fixed_date:[12,26]}]},N={PH:[{name:"Deň vzniku Slovenskej republiky",fixed_date:[1,1]},{name:"Zjavenie Pána",fixed_date:[1,6]},{name:"Veľký piatok",variable_date:"easter",offset:-2},{name:"Veľkonočná nedeľa",variable_date:"easter"},{name:"Veľkonočný pondelok",variable_date:"easter",offset:1},{name:"Sviatok práce",fixed_date:[5,1]},{name:"Deň víťazstva nad fašizmom",fixed_date:[5,8]},{name:"Sviatok svätého Cyrila a Metoda",fixed_date:[7,5]},{name:"Výročie Slovenského národného povstania",fixed_date:[8,29]},{name:"Deň Ústavy Slovenskej republiky",fixed_date:[9,1]},{name:"Sviatok Panny Márie Sedembolestnej",fixed_date:[9,15]},{name:"Sviatok všetkých svätých",fixed_date:[11,1]},{name:"Deň boja za slobodu a demokraciu",fixed_date:[11,17]},{name:"Štedrý deň",fixed_date:[12,24]},{name:"Prvý sviatok vianočný",fixed_date:[12,25]},{name:"Druhý sviatok vianočný",fixed_date:[12,26]}]},C={PH:[{name:"Новий рік",fixed_date:[1,1]},{name:"Різдво",fixed_date:[1,7]},{name:"Міжнародний жіночий день",fixed_date:[3,8]},{name:"Великдень",variable_date:"orthodox easter",offset:1},{name:"День Праці 1",fixed_date:[5,1]},{name:"День Праці 2",fixed_date:[5,2]},{name:"День Перемоги",fixed_date:[5,9]},{name:"День Конституції України",fixed_date:[6,28]},{name:"День Незалежності України",fixed_date:[8,24]}]},F={PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}],Alabama:{_state_code:"al",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Robert E. Lee/Martin Luther King Birthday",variable_date:"firstJanuaryMonday",offset:14},{name:"George Washington/Thomas Jefferson Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Confederate Memorial Day",variable_date:"firstAprilMonday",offset:21},{name:"Jefferson Davis' Birthday",variable_date:"firstJuneMonday"}]},Alaska:{_state_code:"ak",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Seward's Day",variable_date:"lastMarchMonday"},{name:"Alaska Day",fixed_date:[10,18]}]},Arizona:{_state_code:"az",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Dr. Martin Luther King Jr./Civil Rights Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Arkansas:{_state_code:"ar",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Dr. Martin Luther King Jr. and Robert E. Lee's Birthdays",variable_date:"firstJanuaryMonday",offset:14},{name:"George Washington's Birthday and Daisy Gatson Bates Day",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Eve",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]}]},California:{_state_code:"ca",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"César Chávez Day",fixed_date:[3,31]}]},Colorado:{_state_code:"co",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Connecticut:{_state_code:"ct",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Lincoln's Birthday",fixed_date:[2,12]},{name:"Good Friday",variable_date:"easter",offset:-2}]},Delaware:{_state_code:"de",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Day After Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]},{name:"Good Friday",variable_date:"easter",offset:-2}]},"District of Columbia":{_state_code:"dc",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Emancipation Day",fixed_date:[4,16]}]},Florida:{_state_code:"fl",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Friday after Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]}]},Georgia:{_state_code:"ga",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Robert E. Lee's Birthday",variable_date:"firstNovemberThursday",offset:22},{name:"Washington's Birthday",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Confederate Memorial Day",variable_date:"lastAprilMonday"}]},Guam:{_state_code:"gu",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Guam Discovery Day",fixed_date:[3,5]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Liberation Day",fixed_date:[7,21]},{name:"All Souls' Day",fixed_date:[11,2]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Lady of Camarin Day",fixed_date:[12,8]},{name:"Christmas Day",fixed_date:[12,25]}]},Hawaii:{_state_code:"hi",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Prince Jonah Kuhio Kalanianaole Day",fixed_date:[3,26]},{name:"Kamehameha Day",fixed_date:[6,11]},{name:"Statehood Day",variable_date:"firstAugustFriday",offset:14},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},Idaho:{_state_code:"id",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr.-Idaho Human Rights Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Illinois:{_state_code:"il",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Lincoln's Birthday",fixed_date:[2,12]},{name:"Casimir Pulaski Day",variable_date:"firstMarchMonday"},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},Indiana:{_state_code:"in",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Lincoln's Birthday",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Primary Election Day",variable_date:"firstMayMonday",offset:1},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},Iowa:{_state_code:"ia",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Lincoln's Birthday",fixed_date:[2,12]}]},Kansas:{_state_code:"ks",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Kentucky:{_state_code:"ky",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Eve",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]},{name:"New Year's Eve",fixed_date:[12,31]},{name:"Good Friday",variable_date:"easter",offset:-2}]},Louisiana:{_state_code:"la",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Mardi Gras",variable_date:"easter",offset:-47},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},Maine:{_state_code:"me",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Patriots' Day",variable_date:"firstAprilMonday",offset:14}]},Maryland:{_state_code:"md",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Native American Heritage Day",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]}]},Massachusetts:{_state_code:"ma",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Patriots' Day",variable_date:"firstAprilMonday",offset:14}]},Michigan:{_state_code:"mi",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Eve",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]},{name:"New Year's Eve",fixed_date:[12,31]}]},Minnesota:{_state_code:"mn",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Mississippi:{_state_code:"ms",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King's and Robert E. Lee's Birthdays",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Confederate Memorial Day",variable_date:"lastAprilMonday"}]},Missouri:{_state_code:"mo",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Truman Day",fixed_date:[5,8]}]},Montana:{_state_code:"mt",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1},{name:"Christmas Eve",fixed_date:[12,24]},{name:"New Year's Eve",fixed_date:[12,31]}]},Nebraska:{_state_code:"ne",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Arbor Day",variable_date:"lastAprilFriday"}]},Nevada:{_state_code:"nv",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Nevada Day",variable_date:"lastOctoberFriday"},{name:"Family Day",variable_date:"firstNovemberThursday",offset:22}]},"New Hampshire":{_state_code:"nh",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Civil Rights Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Day after Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},"New Jersey":{_state_code:"nj",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Lincoln's Birthday",fixed_date:[2,12]},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},"New Mexico":{_state_code:"nm",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Day after Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]}]},"New York":{_state_code:"ny",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Lincoln's Birthday",fixed_date:[2,12]},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},"North Carolina":{_state_code:"nc",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Day after Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Eve",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Day after Christmas",fixed_date:[12,26]},{name:"Good Friday",variable_date:"easter",offset:-2}]},"North Dakota":{_state_code:"nd",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Ohio:{_state_code:"oh",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Oklahoma:{_state_code:"ok",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Day after Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Day",fixed_date:[12,25]}]},Oregon:{_state_code:"or",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Pennsylvania:{_state_code:"pa",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Flag Day",fixed_date:[6,14]}]},"Puerto Rico":{_state_code:"pr",PH:[{name:"Día de Año Nuevo",fixed_date:[1,1]},{name:"Día de Reyes",fixed_date:[1,6]},{name:"Natalicio de Eugenio María de Hostos",variable_date:"firstJanuaryMonday",offset:7},{name:"Natalicio de Martin Luther King, Jr.",variable_date:"firstJanuaryMonday",offset:14},{name:"Día de los Presidentes",variable_date:"firstFebruaryMonday",offset:14},{name:"Día de la Abolición de Esclavitud",fixed_date:[3,22]},{name:"Viernes Santo",variable_date:"easter",offset:-2},{name:"Natalicio de José de Diego",variable_date:"firstAprilMonday",offset:14},{name:"Recordación de los Muertos de la Guerra",variable_date:"lastMayMonday"},{name:"Día de la Independencia",fixed_date:[7,4]},{name:"Constitución de Puerto Rico",fixed_date:[7,25]},{name:"Natalicio de Dr. José Celso Barbosa",fixed_date:[7,27]},{name:"Día del Trabajo",variable_date:"firstSeptemberMonday"},{name:"Día de la Raza Descubrimiento de América",variable_date:"firstOctoberMonday",offset:7},{name:"Día del Veterano",fixed_date:[11,11]},{name:"Día del Descubrimiento de Puerto Rico",fixed_date:[11,19]},{name:"Día de Acción de Gracias",variable_date:"firstNovemberThursday",offset:21},{name:"Noche Buena",fixed_date:[12,24]},{name:"Día de Navidad",fixed_date:[12,25]}]},"Rhode Island":{_state_code:"ri",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Victory Day",variable_date:"firstAugustMonday",offset:7}]},"South Carolina":{_state_code:"sc",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Confederate Memorial Day",fixed_date:[5,10]}]},"South Dakota":{_state_code:"sd",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Native American Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Tennessee:{_state_code:"tn",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Eve",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Good Friday",variable_date:"easter",offset:-2}]},Texas:{_state_code:"tx",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Friday after Thanksgiving",variable_date:"firstNovemberThursday",offset:22},{name:"Christmas Eve",fixed_date:[12,24]},{name:"Christmas Day",fixed_date:[12,25]},{name:"Day after Christmas",fixed_date:[12,26]}]},"United States Virgin Islands":{_state_code:"vi",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Virgin Islands-Puerto Rico Friendship Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Three Kings Day",fixed_date:[1,6]},{name:"Transfer Day",fixed_date:[3,31]},{name:"Holy Thursday",variable_date:"easter",offset:-3},{name:"Good Friday",variable_date:"easter",offset:-2},{name:"Easter Monday",variable_date:"easter",offset:1},{name:"Emancipation Day",fixed_date:[7,3]},{name:"Hurricane Supplication Day",variable_date:"firstJulyMonday",offset:21},{name:"Hurricane Thanksgiving",fixed_date:[10,25]},{name:"Liberty Day",fixed_date:[11,1]},{name:"Christmas Second Day",fixed_date:[12,26]},{name:"New Year's Eve",fixed_date:[12,31]}]},Utah:{_state_code:"ut",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Pioneer Day",fixed_date:[7,24]}]},Vermont:{_state_code:"vt",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Town Meeting Day",variable_date:"firstMarchTuesday"},{name:"Battle of Bennington",variable_date:"firstAugustMonday",offset:14}]},Virginia:{_state_code:"va",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},Washington:{_state_code:"wa",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]},"West Virginia":{_state_code:"wv",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"West Virginia Day",fixed_date:[6,20]},{name:"Lincoln's Day",variable_date:"firstNovemberThursday",offset:22}]},Wisconsin:{_state_code:"wi",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]},{name:"Primary Election Day",variable_date:"firstAugustTuesday",offset:7},{name:"Election Day",variable_date:"firstNovemberMonday",offset:1}]},Wyoming:{_state_code:"wy",PH:[{name:"New Year's Day",fixed_date:[1,1]},{name:"Martin Luther King, Jr. Day",variable_date:"firstJanuaryMonday",offset:14},{name:"Washington's Birthday",variable_date:"firstFebruaryMonday",offset:14},{name:"Memorial Day",variable_date:"lastMayMonday"},{name:"Independence Day",fixed_date:[7,4]},{name:"Labor Day",variable_date:"firstSeptemberMonday"},{name:"Columbus Day",variable_date:"firstOctoberMonday",offset:7},{name:"Veterans Day",fixed_date:[11,11]},{name:"Thanksgiving",variable_date:"firstNovemberThursday",offset:21},{name:"Christmas Day",fixed_date:[12,25]}]}},H={PH:[{name:"Tết Dương Lịch",fixed_date:[1,1]},{name:"Ngày Quốc tế Phụ nữ",fixed_date:[3,8]},{name:"Ngày thành lập Đoàn Thanh niên Cộng sản Hồ Chí Minh",fixed_date:[3,26]},{name:"Ngày Quốc tế Thiếu nhi",fixed_date:[6,1]},{name:"Ngày Nhà giáo Việt Nam",fixed_date:[11,20]},{name:"Ngày Giải phóng miền Nam, Thống nhất Đất nước",fixed_date:[4,30]},{name:"Ngày Quốc tế lao động",fixed_date:[5,1]},{name:"Quốc Khánh",fixed_date:[9,2]},{name:"Lễ Giáng Sinh",fixed_date:[12,25]}]},A={PH:[{name:"New Year",fixed_date:[1,1]}],SH:[{2020:[6,21,9,23],2021:[6,21,9,23],2022:[6,21,9,23],2023:[6,21,9,23],2024:[6,21,9,23],2025:[6,21,9,23],2026:[6,21,9,23],2027:[6,21,9,23],2028:[6,21,9,23],2029:[6,21,9,23],2030:[6,21,9,23],2031:[6,21,9,23],2032:[6,21,9,23],name:"Summer"}]},L=Object.freeze({__proto__:null,ar:e,at:a,au:t,be:n,br:i,ca:r,ch:s,ci:o,cz:d,de:f,dk:l,es:m,fi:u,fr:h,gb:c,gr:y,hr:_,hu:g,ie:p,it:b,jp:v,nl:x,no:D,nz:k,pl:w,ro:M,ru:S,se:P,si:T,sk:N,ua:C,us:F,vn:H,xa:A}),V={"assuming ok for ko":{daytime:"sunrise-sunset",spring:"Mar-May",summer:"Jun-Aug",autumn:"Sep-Nov",winter:"Dec-Feb",_:"-","=":"-","frühling":"Mar-May","frühjahr":"Mar-May",sommer:"Jun-Aug",herbst:"Sep-Nov",gesloten:"off",feestdag:"PH",feestdagen:"PH",m:"Mo",w:"We",f:"Fr",primavera:"Mar-May",estate:"Jun-Aug",autunno:"Sep-Nov",inverno:"Dec-Feb"},"please use English written ok for ko":{"(?:an )?feiertag(?:s|en?)?":"PH"},"please use off for ko":{"ruhetage?":"off",geschlossen:"off",geschl:"off",except:"off"},"please use ok for workday":{wd:"Mo-Fr","on work days?":"Mo-Fr","weekdays?":"Mo-Fr","werktags?":"Mo-Sa",vardagar:"Mo-Fr"},"omit hour keyword":{h:""},"omit ko":{season:"",hs:"",hrs:"",hours:"",uhr:"","geöffnet":"",zwischen:"",ist:"",durchgehend:"","öffnungszeit(?:en)?:?":""},"omit tag key":{"opening_hours\\s*=":""},"omit wrong keyword open end":{from:"",ab:"",von:""},"assuming open end for ko":{"(?:bis|till?|-|–)? ?(?:open ?end|late)":"+"},"please use ok for uncertainty":{"~":"-","～":"-"},"please use fallback rule":{otherwise:"||"},"please use ok for missing data":{"\\?":""},"please use ok for ko":{"→":"-","−":"-","—":"-","ー":"-",to:"-","до":"-",a:"-",as:"-","á":"-","ás":"-","às":"-",ate:"-","till?":"-",until:"-",through:"-",and:",","&":",","：":":","'":'"',always:"24/7","always open":"24/7","always closed":"closed",nonstop:"24/7","24x7":"24/7",anytime:"24/7","all day":"24/7",daily:"Mo-Su",everyday:"Mo-Su","every day":"Mo-Su","all days":"Mo-Su","7j/7":"Mo-Su","7/7":"Mo-Su","7days":"Mo-Su","7 days":"Mo-Su","7 days a week":"Mo-Su","7 days/week":"Mo-Su","24 hours 7 days a week":"24/7","24 hours":"00:00-24:00",midday:"12:00",midnight:"00:00","(?:public )?holidays?":"PH","(?:one )?day after public holiday":"PH +1 day","(?:one )?day before public holiday":"PH -1 day","school ?holidays?":"SH","weekends?":"Sa,Su",daylight:"sunrise-sunset","on(?:_| )?appointments?":'"on appointment"',"by(?:_| )?appointments?":'"by appointment"',"nach(?: |_)vereinbarung":'"Nach Vereinbarung"',"nach(?: |_)absprache":'"Nach Absprache"',bis:"-","täglich":"Mo-Su","(?:schul)?ferien":"SH","(?:an|nur)? ?sonn-?(?: und |/)feiertag(?:s|en?)?":"PH,Su",und:",",u:",",auch:",","fermé":"off",et:",","à":"-","jours fériés":"PH",sundown:"sunset","morgendämmerung":"dawn","abenddämmerung":"dusk",sonnenaufgang:"sunrise",sonnenuntergang:"sunset",ostern:"easter"},"please use English abbreviation ok for so":{so:"Su"},"please use English abbreviation ok for ko":{sun:"Su","sundays?":"Su",mon:"Mo","mondays?":"Mo","tues?":"Tu","tuesdays?":"Tu","weds?":"We","wednesdays?":"We",thu:"Th","thurs?":"Th","thursdays?":"Th",fri:"Fr","fridays?":"Fr",sat:"Sa","saturdays?":"Sa",son:"Su","sonn-":"Su","sonntags?":"Su","montags?":"Mo",di:"Tu","die?":"Tu","dienstags?":"Tu",mi:"We","mit?":"We","mittwochs?":"We","don?":"Th","donnerstags?":"Th",fre:"Fr","freitags?":"Fr",sam:"Sa","samstags?":"Sa",dim:"Su",dimanche:"Su","lun?":"Mo",lundi:"Mo",mardi:"Tu",mer:"We",mercredi:"We","jeu?":"Th",jeudi:"Th","ven?":"Fr",vendredi:"Fr",samedi:"Sa","zon?":"Su",zontag:"Su",zondag:"Su",maandag:"Mo",din:"Tu",dinsdag:"Tu","woe?":"We",woensdag:"We",donderdag:"Th","vri?":"Fr",vrijdag:"Fr","zat?":"Sa",zaterdag:"Sa","neděle":"Su",ne:"Su","pondělí":"Mo",po:"Mo","úterý":"Tu","út":"Tu","středa":"We",st:"We","čtvrtek":"Th","čt":"Th","pátek":"Fr","pá":"Fr",sobota:"Sa",martes:"Tu","miércoles":"We",jueves:"Th",viernes:"Fr","sábado":"Sa",domingo:"Su",lunes:"Mo",selasa:"Su",rabu:"Mo",kami:"Tu",jumat:"We",sabtu:"Th",minggu:"Fr",senin:"Sa","söndag":"Su","söndagar":"Su","måndag":"Mo",ma:"Mo",tisdag:"Tu",onsdag:"We",torsdag:"Th",fredag:"Fr","lördag":"Sa","lördagar":"Sa",niedziela:"Su",niedz:"Su",n:"Su",ndz:"Su","poniedziałek":"Mo",poniedzialek:"Mo",pon:"Mo",pn:"Mo",wtorek:"Tu",wt:"Tu","środa":"We",sroda:"We","śr":"We",sr:"We",czwartek:"Th",czw:"Th",cz:"Th","piątek":"Fr",piatek:"Fr",pt:"Fr",sob:"Sa","воскресенье":"Su","Вс":"Su","voskresen'ye":"Su","понедельник":"Mo","Пн":"Mo","ponedel'nik":"Mo","вторник":"Tu",vtornik:"Tu","среда":"We",sreda:"We","четверг":"Th",chetverk:"Th","пятница":"Fr",pyatnitsa:"Fr","суббота":"Sa",subbota:"Sa","søndag":"Su",mandag:"Mo",tirsdag:"Tu","lørdag":"Sa",dom:"Su","domenica?":"Su","domeniche?":"Su",lun:"Mo","lunedì?":"Mo","mar?":"Tu","martedì?":"Tu","mer?":"We","mercoledì?":"We",gio:"Th","giovedì?":"Th",ven:"Fr","venerdì?":"Fr",sab:"Sa","sabato?":"Sa","jänner":"Jan",january:"Jan",february:"Feb",march:"Mar",april:"Apr","june?":"Jun","july?":"Jul",august:"Aug",september:"Sep",sept:"Sep",october:"Oct",november:"Nov",december:"Dec",januar:"Jan",februar:"Feb","märz?":"Mar",maerz:"Mar",mai:"May",juni:"Jun",juli:"Jul",okt:"Oct",oktober:"Oct",dez:"Dec",dezember:"Dec",janvier:"Jan","février":"Feb","fév":"Feb",mars:"Mar",avril:"Apr",avr:"Apr",juin:"Jun",juillet:"Jul","août":"Aug","aoû":"Aug",septembre:"Sep",octobre:"Oct",novembre:"Nov","décembre":"Dec",januari:"Jan",februari:"Feb",maart:"Mar",mei:"May",augustus:"Aug",gennaio:"Jan",febbraio:"Feb",marzo:"Mar",aprile:"Apr","giugno?":"Jun","luglio?":"Jul",agosto:"Aug",settembre:"Sep",ottobre:"Oct",dicembre:"Dec"},"please use ok for similar looking ko":{"оff":"off"},"please use 24 hours time for ko":{pm:"pm","p.m.":"pm","рм":"pm",am:"am","a.m.":"am","ам":"am"},"please use restriction comment time for ko":{damen:'open "Damen"',herren:'open "Herren"'},"please use ok for typographically correct":{"–":"-","„":'"',"“":'"',"”":'"',"«":'"',"»":'"',"‚":'"',"‘":'"',"’":'"',"「":'"',"」":'"',"『":'"',"』":'"'}},O={"unexpected token":'Unexpected token: "{{token}}" This means that the syntax is not valid at that point or it is currently not supported.',"no string":"The value (first parameter) is not a string.",nothing:"The value contains nothing meaningful which can be parsed.","nothing useful":"This rule does not contain anything useful. Please remove this empty rule.","combine rules":'Separate rules detected each of which only consists of a time selector. These rules should be written as one rule by combining them using "{{ok}}".',"value ends with token":'The value ends with "{{token}}". Please either continue after "{{token}}" or remove "{{token}}".',"programmers joke":"Might it be possible that you are a programmer and adding a semicolon after each statement is hardwired in your muscle memory ;) ? The thing is that the semicolon in the opening_hours syntax is defined as rule separator. So for compatibility reasons you should omit this last semicolon.","interpreted as year":'The number {{number}} will be interpreted as year. This is probably not intended. Times can be specified as "12:00".',"rule before fallback empty":"Rule before fallback rule does not contain anything useful","hour min separator":'Please use ":" as hour/minute-separator',"warnings severity":'The parameter optional_conf_parm["warnings_severity"] must be an integer number between 0 and 7 (inclusive). Given {{severity}}, expected one of the following numbers: {{allowed}}.',"optional conf parm type":"The optional_conf_parm parameter is of unknown type. Given {{given}}","conf param tag key missing":'The optional_conf_parm["tag_key"] is missing, required by optional_conf_parm["map_value"].',"conf param mode invalid":'The optional_conf_parm["mode"] parameter is a invalid number. Gave {{given}}, expected one of the following numbers: {{allowed}}.',"conf param unknown type":'The optional_conf_parm["{{key}}"] parameter is of unknown type. Given {{given}}, expected {{expected}}.',"library bug":'An error occurred during evaluation of the value "{{value}}". Please file a bug report or pull request: {{url}}.{{message}}',"library bug PR only":'An error occurred during evaluation of the value "{{value}}". Please submit a pull request: {{url}}.{{message}}',"use multi":'You have used {{count}} {{part2}} Rules can be separated by ";".',"selector multi 2a":"{{what}} in one rule. You may only use one in one rule.","selector multi 2b":'not connected {{what}} in one rule. This is probably an error. Equal selector types can (and should) always be written in conjunction separated by comma. Example for time ranges "12:00-13:00,15:00-18:00". Example for weekdays "Mo-We,Fr".',"selector state":"state keywords",comments:"comments","holiday ranges":"holiday ranges",months:"months",weekdays:"weekdays",ranges:"ranges","default state":"This rule which changes the default state (which is closed) for all following rules is not the first rule. The rule will overwrite all previous rules. It can be legitimate to change the default state to open for example and then only specify for which times the facility is closed.",vague:'This rule is not very explicit because there is no time selector being used. A time selector is the part specifying hours when the object is opened, for example "10:00-19:00". Please add a time selector to this rule or use a comment to make it more explicit.',"empty comment":"You have used an empty comment. Please either write something in the comment or use the keyword unknown instead.",separator_for_readability:"You have used the optional symbol <separator_for_readability> in the wrong place. Please check the syntax specification to see where it could be used or remove it.","strange 24/7":'You used 24/7 in a way that is probably not interpreted as "24 hours 7 days a week". For correctness you might want to use "open" or "closed" for this rule and then write your exceptions which should achieve the same goal and is more clear e.g. "open; Mo 12:00-14:00 off".',"public holiday":'There was no PH (public holiday) specified. This is not very explicit.{{part2}} Please either append a "PH off" rule if the amenity is closed on all public holidays or use something like "Sa,Su,PH 12:00-16:00" to say that on Saturdays, Sundays and on public holidays the amenity is open 12:00-16:00. Be careful with opening hours like "Fr-Sa 18:00-06:00" because "PH off" applies to 00:00-24:00. So "Fr-Sa 18:00-06:00; PH 18:00-06:00 off" is probably what you want. If the amenity is open everyday including public holidays then you can make this explicit by writing "Mo-Su,PH". If you are not certain try to find it out. If you can’t then do not add PH to the value and ignore this warning.',"public holiday part2":' Unfortunately the tag key (e.g. "opening_hours", or "lit") is unknown to opening_hours.js. This warning only applies to the key {{keys}}. If your value is for that key than read on. If not you can ignore the following.',"additional_rule_separator not used after time wrapping midnight":'This rule overwrites parts of the previous rule. This happens because normal rules apply to the whole day and overwrite any definition made by previous rules. You can make this rule an additional rule by using a "," instead of the normal ";" to separate the rules. Note that the overwriting can also be desirable in which case you can ignore this warning.',"additional rule which evaluates to closed":'This rule will be evaluated as closed but it was specified as additional rule. It should be specified as normal rule using ";" as rule separator. See https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification#explain:rule_modifier:closed.',switched:'The selector "{{first}}" was switched with the selector "{{second}}" for readability and compatibility reasons.',"no colon after":'Please don’t use ":" after {{token}}.',"number -5 to 5":"Number between -5 and 5 (except 0) expected.","one weekday constraint":"You can not use more than one constrained weekday in a month range","range constrained weekdays":"You can not use a range of constrained weekdays in a month range",expected:'"{{symbol}}" expected.',"range zero":"You can not use {{type}} ranges with period equals zero.","period one year+":'Please don’t use {{type}} ranges with period equals one. If you want to express that a facility is open starting from a year without limit use "<year>+".',"period one":"Please don’t use {{type}} ranges with period equals one.","month 31":"The day for {{month}} must be between 1 and 31.","month 30":"Month {{month}} doesn't have 31 days. The last day of {{month}} is day 30.","month feb":"Month {{month}} either has 28 or 29 days (leap years).","point in time":"hyphen (-) or open end (+) in time range {{calc}}expected. For working with points in time, the mode for {{libraryname}} has to be altered. Maybe wrong tag?",calculation:"calculation","time range continue":"Time range does not continue as expected","period continue":'Time period does not continue as expected. Example "/01:30".',"time range mode":'{{libraryname}} is running in "time range mode". Found point in time.',"point in time mode":'{{libraryname}} is running in "points in time mode". Found time range.',"outside current day":"Time range starts outside of the current day","two midnights":"Time spanning more than two midnights not supported","without minutes":'Time range without minutes specified. Not very explicit! Please use this syntax instead "{{syntax}}".',"outside day":"Time range starts outside of the current day","zero calculation":'Adding zero in a variable time calculation does not change the variable time. Please omit the calculation (example: "sunrise-(sunset-00:00)").',"calculation syntax":"Calculation with variable time is not in the right syntax",missing:'Missing "{{symbol}}"',"(time)":"(time)","bad range":"Bad range: {{from}}-{{to}}","] or more numbers":'"]" or more numbers expected.',"additional rule no sense":'An additional rule does not make sense here. Just use a ";" as rule separator. See https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification#explain:additional_rule_separator',"unexpected token weekday range":"Unexpected token in weekday range: {{token}}","max differ":"There should be no reason to differ more than {{maxdiffer}} days from a {{name}}. If so tell us …","adding 0":"Adding 0 does not change the date. Please omit this.","unexpected token holiday":"Unexpected token (holiday parser): {{token}}","no holiday definition":"There are no holidays ({{name}}) defined for country {{cc}}.","no holiday definition state":"There are no holidays ({{name}}) defined for country {{cc}} and state {{state}}.","no country code":"Country code missing which is needed to select the correct holidays (see README how to provide it)","no SH definition":"School holiday {{name}}not defined for the year {{year}}.","movable no formula":"Movable day {{name}} can not not be calculated. Please add the formula how to calculate it.","movable not in year":"The movable day {{name}} plus {{days}} days is not in the year of the movable day anymore. Currently not supported.","year range one year":'A year range in which the start year is equal to the end year does not make sense. Please remove the end year. E.g. "{{year}} May 23"',"year range reverse":"A year range in which the start year is greater than the end year does not make sense. Please turn it over.","year past":"The year is in the past.","unexpected token year range":"Unexpected token in year range: {{token}}","week range reverse":"You have specified a week range in reverse order or leaping over a year. This is (currently) not supported.","week negative":"You have specified a week date less then one. A valid week date range is 1-53.","week exceed":"You have specified a week date greater then 53. A valid week date range is 1-53.","week period less than 2":'You have specified a week period which is less than two. If you want to select the whole range from week {{weekfrom}} to week {{weekto}} then just omit the "/{{period}}".',"week period greater than 26":'You have specified a week period which is greater than 26. 26.5 is the half of the maximum 53 week dates per year so a week date period greater than 26 would only apply once per year. Please specify the week selector as "week {{weekfrom}}" if that is what you want to express.',"unexpected token week range":"Unexpected token in week range: {{token}}","unexpected token month range":"Unexpected token in month range: {{token}}","day range reverse":"Range in wrong order. From day is greater than to day.","open end":"Specified as open end. Closing time was guessed.","date parameter needed":"Date parameter needed.","assuming ok for ko":'Assuming "{{ok}}" for "{{ko}}".',"please use ok for ko":'Please use notation "{{ok}}" for "{{ko}}".',"please use ok for similar looking ko":'Please use notation "{{ok}}" for "{{ko}}". Those characters look very similar but are not the same!',"rant degree sign used for zero":"Note that this is not a (superscript) zero but a degree sign which is misused as zero. A superscript zero is defined in Unicode (°) and would have been more appropriate/uniform here. But note that the use of none-ASCII digits is not allowed.","please use English written ok for ko":'Please use the English written "{{ok}}" for "{{ko}}".',"please use English abbreviation ok for ko":'Please use the English abbreviation "{{ok}}" for "{{ko}}".',"please use English abbreviation ok for so":'Please use the English abbreviation "{{ok}}" for "{{ko}}". Note that it might also mean Saturday in Polish.',"please use off for ko":'Please use "{{ok}}" for "{{ko}}". Example: "Mo-Fr 08:00-12:00; Tu off".',"please use ok for workday":'Assuming "{{ok}}" for "{{ko}}". Please avoid using "workday": https://wiki.openstreetmap.org/wiki/Talk:Key:opening_hours#need_syntax_for_holidays_and_workingdays',"omit hour keyword":'Please omit "{{ko}}" or use a colon instead. Example: "12:00-14:00".',"omit ko":'Please omit "{{ko}}".',"omit tag key":'Please omit "{{ko}}". The tag key must not be in the tag value.',"omit wrong keyword open end":'Please omit "{{ko}}". The tag key must not be in the tag value.',"assuming open end for ko":'Assuming "{{ok}}" (open end time) for "{{ko}}". Example: "12:00+".',"please use ok for uncertainty":'Please use notation "{{ok}}" for "{{ko}}". If there is reason to suspect uncertainty consider adding a comment. Example: 12:00-14:00 "only on sunshine".',"please use fallback rule":'Please use notation "{{ok}}" (Fallback rule) for "{{ko}}". Example: Mo-Fr 12:00-14:00; PH off || "by appointment"',"please use ok for missing data":"Please consider adding a FIXME tag instead.","please use 24 hours time for ko":"Please use time format in 24 hours notation instead of the legacy 12 hours variant. If the 12 hours variant is used you might have to convert the hours to the 24 hours notation.","please use restriction comment time for ko":'It looks like you might want to define additional restrictions. If that is the case and they can not be expressed by other syntax elements then you could use a comment together with the `open` keyword. Example: open "female only"',"please use ok for typographically correct":'Please use notation "{{ok}}" for "{{ko}}". Although using "{{ko}}" is typographical correct, it is not defined in the opening_hours syntax. Correct typography should be done on application level …'};function j(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var B,R={exports:{}};var z=(B||(B=1,function(e){!function(){var a=Math.PI,t=Math.sin,n=Math.cos,i=Math.tan,r=Math.asin,s=Math.atan2,o=Math.acos,d=a/180,f=864e5,l=2440588,m=2451545;function u(e){return new Date((e+.5-l)*f)}function h(e){return function(e){return e.valueOf()/f-.5+l}(e)-m}var c=23.4397*d;function y(e,a){return s(t(e)*n(c)-i(a)*t(c),n(e))}function _(e,a){return r(t(a)*n(c)+n(a)*t(c)*t(e))}function g(e,a,r){return s(t(e),n(e)*t(a)-i(r)*n(a))}function p(e,a,i){return r(t(a)*t(i)+n(a)*n(i)*n(e))}function b(e,a){return d*(280.16+360.9856235*e)-a}function v(e){return d*(357.5291+.98560028*e)}function x(e){return e+d*(1.9148*t(e)+.02*t(2*e)+3e-4*t(3*e))+102.9372*d+a}function D(e){var a=x(v(e));return{dec:_(a,0),ra:y(a,0)}}var k={getPosition:function(e,a,t){var n=d*-t,i=d*a,r=h(e),s=D(r),o=b(r,n)-s.ra;return{azimuth:g(o,i,s.dec),altitude:p(o,i,s.dec)}}},w=k.times=[[-.833,"sunrise","sunset"],[-.3,"sunriseEnd","sunsetStart"],[-6,"dawn","dusk"],[-12,"nauticalDawn","nauticalDusk"],[-18,"nightEnd","night"],[6,"goldenHourEnd","goldenHour"]];k.addTime=function(e,a,t){w.push([e,a,t])};var M=9e-4;function S(e,t,n){return M+(e+t)/(2*a)+n}function P(e,a,n){return m+e+.0053*t(a)-.0069*t(2*n)}function T(e,a,i,r,s,d,f){var l=function(e,a,i){return o((t(e)-t(a)*t(i))/(n(a)*n(i)))}(e,i,r);return P(S(l,a,s),d,f)}function N(e){var a=d*(134.963+13.064993*e),i=d*(93.272+13.22935*e),r=d*(218.316+13.176396*e)+6.289*d*t(a),s=5.128*d*t(i),o=385001-20905*n(a);return{ra:y(r,s),dec:_(r,s),dist:o}}function C(e,a){return new Date(e.valueOf()+a*f/24)}k.getTimes=function(e,t,n,i){var r,s,o,f,l,m=d*-n,c=d*t,y=function(e){return-2.076*Math.sqrt(e)/60}(i=i||0),g=function(e,t){return Math.round(e-M-t/(2*a))}(h(e),m),p=S(0,m,g),b=v(p),D=x(b),k=_(D,0),N=P(p,b,D),C={solarNoon:u(N),nadir:u(N-.5)};for(r=0,s=w.length;r<s;r+=1)l=N-((f=T(((o=w[r])[0]+y)*d,m,c,k,g,b,D))-N),C[o[1]]=u(l),C[o[2]]=u(f);return C},k.getMoonPosition=function(e,a,r){var o=d*-r,f=d*a,l=h(e),m=N(l),u=b(l,o)-m.ra,c=p(u,f,m.dec),y=s(t(u),i(f)*n(m.dec)-t(m.dec)*n(u));return c+=function(e){return e<0&&(e=0),2967e-7/Math.tan(e+.00312536/(e+.08901179))}(c),{azimuth:g(u,f,m.dec),altitude:c,distance:m.dist,parallacticAngle:y}},k.getMoonIllumination=function(e){var a=h(e||new Date),i=D(a),r=N(a),d=149598e3,f=o(t(i.dec)*t(r.dec)+n(i.dec)*n(r.dec)*n(i.ra-r.ra)),l=s(d*t(f),r.dist-d*n(f)),m=s(n(i.dec)*t(i.ra-r.ra),t(i.dec)*n(r.dec)-n(i.dec)*t(r.dec)*n(i.ra-r.ra));return{fraction:(1+n(l))/2,phase:.5+.5*l*(m<0?-1:1)/Math.PI,angle:m}},k.getMoonTimes=function(e,a,t,n){var i=new Date(e);n?i.setUTCHours(0,0,0,0):i.setHours(0,0,0,0);for(var r,s,o,f,l,m,u,h,c,y,_,g,p,b=.133*d,v=k.getMoonPosition(i,a,t).altitude-b,x=1;x<=24&&(r=k.getMoonPosition(C(i,x),a,t).altitude-b,h=((l=(v+(s=k.getMoonPosition(C(i,x+1),a,t).altitude-b))/2-r)*(u=-(m=(s-v)/2)/(2*l))+m)*u+r,y=0,(c=m*m-4*l*r)>=0&&(_=u-(p=Math.sqrt(c)/(2*Math.abs(l))),g=u+p,Math.abs(_)<=1&&y++,Math.abs(g)<=1&&y++,_<-1&&(_=g)),1===y?v<0?o=x+_:f=x+_:2===y&&(o=x+(h<0?g:_),f=x+(h<0?_:g)),!o||!f);x+=2)v=s;var D={};return o&&(D.rise=C(i,o)),f&&(D.set=C(i,f)),o||f||(D[h>0?"alwaysUp":"alwaysDown"]=!0),D},e.exports=k}()}(R)),R.exports),E=j(z);const J=e=>"string"==typeof e,I=()=>{let e,a;const t=new Promise(((t,n)=>{e=t,a=n}));return t.resolve=e,t.reject=a,t},W=e=>null==e?"":""+e,Y=/###/g,G=e=>e&&e.indexOf("###")>-1?e.replace(Y,"."):e,K=e=>!e||J(e),$=(e,a,t)=>{const n=J(a)?a.split("."):a;let i=0;for(;i<n.length-1;){if(K(e))return{};const a=G(n[i]);!e[a]&&t&&(e[a]=new t),e=Object.prototype.hasOwnProperty.call(e,a)?e[a]:{},++i}return K(e)?{}:{obj:e,k:G(n[i])}},U=(e,a,t)=>{const{obj:n,k:i}=$(e,a,Object);if(void 0!==n||1===a.length)return void(n[i]=t);let r=a[a.length-1],s=a.slice(0,a.length-1),o=$(e,s,Object);for(;void 0===o.obj&&s.length;)r=`${s[s.length-1]}.${r}`,s=s.slice(0,s.length-1),o=$(e,s,Object),o?.obj&&void 0!==o.obj[`${o.k}.${r}`]&&(o.obj=void 0);o.obj[`${o.k}.${r}`]=t},Z=(e,a)=>{const{obj:t,k:n}=$(e,a);if(t&&Object.prototype.hasOwnProperty.call(t,n))return t[n]},q=(e,a,t)=>{for(const n in a)"__proto__"!==n&&"constructor"!==n&&(n in e?J(e[n])||e[n]instanceof String||J(a[n])||a[n]instanceof String?t&&(e[n]=a[n]):q(e[n],a[n],t):e[n]=a[n]);return e},Q=e=>e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&");var X={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};const ee=e=>J(e)?e.replace(/[&<>"'\/]/g,(e=>X[e])):e;const ae=[" ",",","?","!",";"],te=new class{constructor(e){this.capacity=e,this.regExpMap=new Map,this.regExpQueue=[]}getRegExp(e){const a=this.regExpMap.get(e);if(void 0!==a)return a;const t=new RegExp(e);return this.regExpQueue.length===this.capacity&&this.regExpMap.delete(this.regExpQueue.shift()),this.regExpMap.set(e,t),this.regExpQueue.push(e),t}}(20),ne=function(e,a){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:".";if(!e)return;if(e[a]){if(!Object.prototype.hasOwnProperty.call(e,a))return;return e[a]}const n=a.split(t);let i=e;for(let e=0;e<n.length;){if(!i||"object"!=typeof i)return;let a,r="";for(let s=e;s<n.length;++s)if(s!==e&&(r+=t),r+=n[s],a=i[r],void 0!==a){if(["string","number","boolean"].indexOf(typeof a)>-1&&s<n.length-1)continue;e+=s-e+1;break}i=a}return i},ie=e=>e?.replace("_","-"),re={type:"logger",log(e){this.output("log",e)},warn(e){this.output("warn",e)},error(e){this.output("error",e)},output(e,a){console?.[e]?.apply?.(console,a)}};class se{constructor(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.init(e,a)}init(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.prefix=a.prefix||"i18next:",this.logger=e||re,this.options=a,this.debug=a.debug}log(){for(var e=arguments.length,a=new Array(e),t=0;t<e;t++)a[t]=arguments[t];return this.forward(a,"log","",!0)}warn(){for(var e=arguments.length,a=new Array(e),t=0;t<e;t++)a[t]=arguments[t];return this.forward(a,"warn","",!0)}error(){for(var e=arguments.length,a=new Array(e),t=0;t<e;t++)a[t]=arguments[t];return this.forward(a,"error","")}deprecate(){for(var e=arguments.length,a=new Array(e),t=0;t<e;t++)a[t]=arguments[t];return this.forward(a,"warn","WARNING DEPRECATED: ",!0)}forward(e,a,t,n){return n&&!this.debug?null:(J(e[0])&&(e[0]=`${t}${this.prefix} ${e[0]}`),this.logger[a](e))}create(e){return new se(this.logger,{prefix:`${this.prefix}:${e}:`,...this.options})}clone(e){return(e=e||this.options).prefix=e.prefix||this.prefix,new se(this.logger,e)}}var oe=new se;class de{constructor(){this.observers={}}on(e,a){return e.split(" ").forEach((e=>{this.observers[e]||(this.observers[e]=new Map);const t=this.observers[e].get(a)||0;this.observers[e].set(a,t+1)})),this}off(e,a){this.observers[e]&&(a?this.observers[e].delete(a):delete this.observers[e])}emit(e){for(var a=arguments.length,t=new Array(a>1?a-1:0),n=1;n<a;n++)t[n-1]=arguments[n];if(this.observers[e]){Array.from(this.observers[e].entries()).forEach((e=>{let[a,n]=e;for(let e=0;e<n;e++)a(...t)}))}if(this.observers["*"]){Array.from(this.observers["*"].entries()).forEach((a=>{let[n,i]=a;for(let a=0;a<i;a++)n.apply(n,[e,...t])}))}}}class fe extends de{constructor(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{ns:["translation"],defaultNS:"translation"};super(),this.data=e||{},this.options=a,void 0===this.options.keySeparator&&(this.options.keySeparator="."),void 0===this.options.ignoreJSONStructure&&(this.options.ignoreJSONStructure=!0)}addNamespaces(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e)}removeNamespaces(e){const a=this.options.ns.indexOf(e);a>-1&&this.options.ns.splice(a,1)}getResource(e,a,t){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const i=void 0!==n.keySeparator?n.keySeparator:this.options.keySeparator,r=void 0!==n.ignoreJSONStructure?n.ignoreJSONStructure:this.options.ignoreJSONStructure;let s;e.indexOf(".")>-1?s=e.split("."):(s=[e,a],t&&(Array.isArray(t)?s.push(...t):J(t)&&i?s.push(...t.split(i)):s.push(t)));const o=Z(this.data,s);return!o&&!a&&!t&&e.indexOf(".")>-1&&(e=s[0],a=s[1],t=s.slice(2).join(".")),!o&&r&&J(t)?ne(this.data?.[e]?.[a],t,i):o}addResource(e,a,t,n){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{silent:!1};const r=void 0!==i.keySeparator?i.keySeparator:this.options.keySeparator;let s=[e,a];t&&(s=s.concat(r?t.split(r):t)),e.indexOf(".")>-1&&(s=e.split("."),n=a,a=s[1]),this.addNamespaces(a),U(this.data,s,n),i.silent||this.emit("added",e,a,t,n)}addResources(e,a,t){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{silent:!1};for(const n in t)(J(t[n])||Array.isArray(t[n]))&&this.addResource(e,a,n,t[n],{silent:!0});n.silent||this.emit("added",e,a,t)}addResourceBundle(e,a,t,n,i){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{silent:!1,skipCopy:!1},s=[e,a];e.indexOf(".")>-1&&(s=e.split("."),n=t,t=a,a=s[1]),this.addNamespaces(a);let o=Z(this.data,s)||{};r.skipCopy||(t=JSON.parse(JSON.stringify(t))),n?q(o,t,i):o={...o,...t},U(this.data,s,o),r.silent||this.emit("added",e,a,t)}removeResourceBundle(e,a){this.hasResourceBundle(e,a)&&delete this.data[e][a],this.removeNamespaces(a),this.emit("removed",e,a)}hasResourceBundle(e,a){return void 0!==this.getResource(e,a)}getResourceBundle(e,a){return a||(a=this.options.defaultNS),this.getResource(e,a)}getDataByLanguage(e){return this.data[e]}hasLanguageSomeTranslations(e){const a=this.getDataByLanguage(e);return!!(a&&Object.keys(a)||[]).find((e=>a[e]&&Object.keys(a[e]).length>0))}toJSON(){return this.data}}var le={processors:{},addPostProcessor(e){this.processors[e.name]=e},handle(e,a,t,n,i){return e.forEach((e=>{a=this.processors[e]?.process(a,t,n,i)??a})),a}};const me={};class ue extends de{constructor(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var t,n;super(),t=e,n=this,["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"].forEach((e=>{t[e]&&(n[e]=t[e])})),this.options=a,void 0===this.options.keySeparator&&(this.options.keySeparator="."),this.logger=oe.create("translator")}changeLanguage(e){e&&(this.language=e)}exists(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}};if(null==e)return!1;const t=this.resolve(e,a);return void 0!==t?.res}extractFromKey(e,a){let t=void 0!==a.nsSeparator?a.nsSeparator:this.options.nsSeparator;void 0===t&&(t=":");const n=void 0!==a.keySeparator?a.keySeparator:this.options.keySeparator;let i=a.ns||this.options.defaultNS||[];const r=t&&e.indexOf(t)>-1,s=!(this.options.userDefinedKeySeparator||a.keySeparator||this.options.userDefinedNsSeparator||a.nsSeparator||((e,a,t)=>{a=a||"",t=t||"";const n=ae.filter((e=>a.indexOf(e)<0&&t.indexOf(e)<0));if(0===n.length)return!0;const i=te.getRegExp(`(${n.map((e=>"?"===e?"\\?":e)).join("|")})`);let r=!i.test(e);if(!r){const a=e.indexOf(t);a>0&&!i.test(e.substring(0,a))&&(r=!0)}return r})(e,t,n));if(r&&!s){const a=e.match(this.interpolator.nestingRegexp);if(a&&a.length>0)return{key:e,namespaces:J(i)?[i]:i};const r=e.split(t);(t!==n||t===n&&this.options.ns.indexOf(r[0])>-1)&&(i=r.shift()),e=r.join(n)}return{key:e,namespaces:J(i)?[i]:i}}translate(e,a,t){if("object"!=typeof a&&this.options.overloadTranslationOptionHandler&&(a=this.options.overloadTranslationOptionHandler(arguments)),"object"==typeof a&&(a={...a}),a||(a={}),null==e)return"";Array.isArray(e)||(e=[String(e)]);const n=void 0!==a.returnDetails?a.returnDetails:this.options.returnDetails,i=void 0!==a.keySeparator?a.keySeparator:this.options.keySeparator,{key:r,namespaces:s}=this.extractFromKey(e[e.length-1],a),o=s[s.length-1],d=a.lng||this.language,f=a.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if("cimode"===d?.toLowerCase()){if(f){const e=a.nsSeparator||this.options.nsSeparator;return n?{res:`${o}${e}${r}`,usedKey:r,exactUsedKey:r,usedLng:d,usedNS:o,usedParams:this.getUsedParamsDetails(a)}:`${o}${e}${r}`}return n?{res:r,usedKey:r,exactUsedKey:r,usedLng:d,usedNS:o,usedParams:this.getUsedParamsDetails(a)}:r}const l=this.resolve(e,a);let m=l?.res;const u=l?.usedKey||r,h=l?.exactUsedKey||r,c=Object.prototype.toString.apply(m),y=void 0!==a.joinArrays?a.joinArrays:this.options.joinArrays,_=!this.i18nFormat||this.i18nFormat.handleAsObject,g=!J(m)&&"boolean"!=typeof m&&"number"!=typeof m;if(!(_&&m&&g&&["[object Number]","[object Function]","[object RegExp]"].indexOf(c)<0)||J(y)&&Array.isArray(m))if(_&&J(y)&&Array.isArray(m))m=m.join(y),m&&(m=this.extendTranslation(m,e,a,t));else{let n=!1,s=!1;const f=void 0!==a.count&&!J(a.count),u=ue.hasDefaultValue(a),h=f?this.pluralResolver.getSuffix(d,a.count,a):"",c=a.ordinal&&f?this.pluralResolver.getSuffix(d,a.count,{ordinal:!1}):"",y=f&&!a.ordinal&&0===a.count,_=y&&a[`defaultValue${this.options.pluralSeparator}zero`]||a[`defaultValue${h}`]||a[`defaultValue${c}`]||a.defaultValue;!this.isValidLookup(m)&&u&&(n=!0,m=_),this.isValidLookup(m)||(s=!0,m=r);const g=(a.missingKeyNoValueFallbackToKey||this.options.missingKeyNoValueFallbackToKey)&&s?void 0:m,p=u&&_!==m&&this.options.updateMissing;if(s||n||p){if(this.logger.log(p?"updateKey":"missingKey",d,o,r,p?_:m),i){const e=this.resolve(r,{...a,keySeparator:!1});e&&e.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}let e=[];const t=this.languageUtils.getFallbackCodes(this.options.fallbackLng,a.lng||this.language);if("fallback"===this.options.saveMissingTo&&t&&t[0])for(let a=0;a<t.length;a++)e.push(t[a]);else"all"===this.options.saveMissingTo?e=this.languageUtils.toResolveHierarchy(a.lng||this.language):e.push(a.lng||this.language);const n=(e,t,n)=>{const i=u&&n!==m?n:g;this.options.missingKeyHandler?this.options.missingKeyHandler(e,o,t,i,p,a):this.backendConnector?.saveMissing&&this.backendConnector.saveMissing(e,o,t,i,p,a),this.emit("missingKey",e,o,t,m)};this.options.saveMissing&&(this.options.saveMissingPlurals&&f?e.forEach((e=>{const t=this.pluralResolver.getSuffixes(e,a);y&&a[`defaultValue${this.options.pluralSeparator}zero`]&&t.indexOf(`${this.options.pluralSeparator}zero`)<0&&t.push(`${this.options.pluralSeparator}zero`),t.forEach((t=>{n([e],r+t,a[`defaultValue${t}`]||_)}))})):n(e,r,_))}m=this.extendTranslation(m,e,a,l,t),s&&m===r&&this.options.appendNamespaceToMissingKey&&(m=`${o}:${r}`),(s||n)&&this.options.parseMissingKeyHandler&&(m=this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey?`${o}:${r}`:r,n?m:void 0))}else{if(!a.returnObjects&&!this.options.returnObjects){this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!");const e=this.options.returnedObjectHandler?this.options.returnedObjectHandler(u,m,{...a,ns:s}):`key '${r} (${this.language})' returned an object instead of string.`;return n?(l.res=e,l.usedParams=this.getUsedParamsDetails(a),l):e}if(i){const e=Array.isArray(m),t=e?[]:{},n=e?h:u;for(const e in m)if(Object.prototype.hasOwnProperty.call(m,e)){const r=`${n}${i}${e}`;t[e]=this.translate(r,{...a,joinArrays:!1,ns:s}),t[e]===r&&(t[e]=m[e])}m=t}}return n?(l.res=m,l.usedParams=this.getUsedParamsDetails(a),l):m}extendTranslation(e,a,t,n,i){var r=this;if(this.i18nFormat?.parse)e=this.i18nFormat.parse(e,{...this.options.interpolation.defaultVariables,...t},t.lng||this.language||n.usedLng,n.usedNS,n.usedKey,{resolved:n});else if(!t.skipInterpolation){t.interpolation&&this.interpolator.init({...t,interpolation:{...this.options.interpolation,...t.interpolation}});const s=J(e)&&(void 0!==t?.interpolation?.skipOnVariables?t.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables);let o;if(s){const a=e.match(this.interpolator.nestingRegexp);o=a&&a.length}let d=t.replace&&!J(t.replace)?t.replace:t;if(this.options.interpolation.defaultVariables&&(d={...this.options.interpolation.defaultVariables,...d}),e=this.interpolator.interpolate(e,d,t.lng||this.language||n.usedLng,t),s){const a=e.match(this.interpolator.nestingRegexp);o<(a&&a.length)&&(t.nest=!1)}!t.lng&&n&&n.res&&(t.lng=this.language||n.usedLng),!1!==t.nest&&(e=this.interpolator.nest(e,(function(){for(var e=arguments.length,n=new Array(e),s=0;s<e;s++)n[s]=arguments[s];return i?.[0]!==n[0]||t.context?r.translate(...n,a):(r.logger.warn(`It seems you are nesting recursively key: ${n[0]} in key: ${a[0]}`),null)}),t)),t.interpolation&&this.interpolator.reset()}const s=t.postProcess||this.options.postProcess,o=J(s)?[s]:s;return null!=e&&o?.length&&!1!==t.applyPostProcessor&&(e=le.handle(o,e,a,this.options&&this.options.postProcessPassResolved?{i18nResolved:{...n,usedParams:this.getUsedParamsDetails(t)},...t}:t,this)),e}resolve(e){let a,t,n,i,r,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return J(e)&&(e=[e]),e.forEach((e=>{if(this.isValidLookup(a))return;const o=this.extractFromKey(e,s),d=o.key;t=d;let f=o.namespaces;this.options.fallbackNS&&(f=f.concat(this.options.fallbackNS));const l=void 0!==s.count&&!J(s.count),m=l&&!s.ordinal&&0===s.count,u=void 0!==s.context&&(J(s.context)||"number"==typeof s.context)&&""!==s.context,h=s.lngs?s.lngs:this.languageUtils.toResolveHierarchy(s.lng||this.language,s.fallbackLng);f.forEach((e=>{this.isValidLookup(a)||(r=e,me[`${h[0]}-${e}`]||!this.utils?.hasLoadedNamespace||this.utils?.hasLoadedNamespace(r)||(me[`${h[0]}-${e}`]=!0,this.logger.warn(`key "${t}" for languages "${h.join(", ")}" won't get resolved as namespace "${r}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),h.forEach((t=>{if(this.isValidLookup(a))return;i=t;const r=[d];if(this.i18nFormat?.addLookupKeys)this.i18nFormat.addLookupKeys(r,d,t,e,s);else{let e;l&&(e=this.pluralResolver.getSuffix(t,s.count,s));const a=`${this.options.pluralSeparator}zero`,n=`${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;if(l&&(r.push(d+e),s.ordinal&&0===e.indexOf(n)&&r.push(d+e.replace(n,this.options.pluralSeparator)),m&&r.push(d+a)),u){const t=`${d}${this.options.contextSeparator}${s.context}`;r.push(t),l&&(r.push(t+e),s.ordinal&&0===e.indexOf(n)&&r.push(t+e.replace(n,this.options.pluralSeparator)),m&&r.push(t+a))}}let o;for(;o=r.pop();)this.isValidLookup(a)||(n=o,a=this.getResource(t,e,o,s))})))}))})),{res:a,usedKey:t,exactUsedKey:n,usedLng:i,usedNS:r}}isValidLookup(e){return!(void 0===e||!this.options.returnNull&&null===e||!this.options.returnEmptyString&&""===e)}getResource(e,a,t){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this.i18nFormat?.getResource?this.i18nFormat.getResource(e,a,t,n):this.resourceStore.getResource(e,a,t,n)}getUsedParamsDetails(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const a=["defaultValue","ordinal","context","replace","lng","lngs","fallbackLng","ns","keySeparator","nsSeparator","returnObjects","returnDetails","joinArrays","postProcess","interpolation"],t=e.replace&&!J(e.replace);let n=t?e.replace:e;if(t&&void 0!==e.count&&(n.count=e.count),this.options.interpolation.defaultVariables&&(n={...this.options.interpolation.defaultVariables,...n}),!t){n={...n};for(const e of a)delete n[e]}return n}static hasDefaultValue(e){const a="defaultValue";for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&a===t.substring(0,12)&&void 0!==e[t])return!0;return!1}}class he{constructor(e){this.options=e,this.supportedLngs=this.options.supportedLngs||!1,this.logger=oe.create("languageUtils")}getScriptPartFromCode(e){if(!(e=ie(e))||e.indexOf("-")<0)return null;const a=e.split("-");return 2===a.length?null:(a.pop(),"x"===a[a.length-1].toLowerCase()?null:this.formatLanguageCode(a.join("-")))}getLanguagePartFromCode(e){if(!(e=ie(e))||e.indexOf("-")<0)return e;const a=e.split("-");return this.formatLanguageCode(a[0])}formatLanguageCode(e){if(J(e)&&e.indexOf("-")>-1){let a;try{a=Intl.getCanonicalLocales(e)[0]}catch(e){}return a&&this.options.lowerCaseLng&&(a=a.toLowerCase()),a||(this.options.lowerCaseLng?e.toLowerCase():e)}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}isSupportedCode(e){return("languageOnly"===this.options.load||this.options.nonExplicitSupportedLngs)&&(e=this.getLanguagePartFromCode(e)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(e)>-1}getBestMatchFromCodes(e){if(!e)return null;let a;return e.forEach((e=>{if(a)return;const t=this.formatLanguageCode(e);this.options.supportedLngs&&!this.isSupportedCode(t)||(a=t)})),!a&&this.options.supportedLngs&&e.forEach((e=>{if(a)return;const t=this.getLanguagePartFromCode(e);if(this.isSupportedCode(t))return a=t;a=this.options.supportedLngs.find((e=>e===t?e:e.indexOf("-")<0&&t.indexOf("-")<0?void 0:e.indexOf("-")>0&&t.indexOf("-")<0&&e.substring(0,e.indexOf("-"))===t||0===e.indexOf(t)&&t.length>1?e:void 0))})),a||(a=this.getFallbackCodes(this.options.fallbackLng)[0]),a}getFallbackCodes(e,a){if(!e)return[];if("function"==typeof e&&(e=e(a)),J(e)&&(e=[e]),Array.isArray(e))return e;if(!a)return e.default||[];let t=e[a];return t||(t=e[this.getScriptPartFromCode(a)]),t||(t=e[this.formatLanguageCode(a)]),t||(t=e[this.getLanguagePartFromCode(a)]),t||(t=e.default),t||[]}toResolveHierarchy(e,a){const t=this.getFallbackCodes(a||this.options.fallbackLng||[],e),n=[],i=e=>{e&&(this.isSupportedCode(e)?n.push(e):this.logger.warn(`rejecting language code not found in supportedLngs: ${e}`))};return J(e)&&(e.indexOf("-")>-1||e.indexOf("_")>-1)?("languageOnly"!==this.options.load&&i(this.formatLanguageCode(e)),"languageOnly"!==this.options.load&&"currentOnly"!==this.options.load&&i(this.getScriptPartFromCode(e)),"currentOnly"!==this.options.load&&i(this.getLanguagePartFromCode(e))):J(e)&&i(this.formatLanguageCode(e)),t.forEach((e=>{n.indexOf(e)<0&&i(this.formatLanguageCode(e))})),n}}const ce={zero:0,one:1,two:2,few:3,many:4,other:5},ye={select:e=>1===e?"one":"other",resolvedOptions:()=>({pluralCategories:["one","other"]})};class _e{constructor(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.languageUtils=e,this.options=a,this.logger=oe.create("pluralResolver"),this.pluralRulesCache={}}addRule(e,a){this.rules[e]=a}clearCache(){this.pluralRulesCache={}}getRule(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const t=ie("dev"===e?"en":e),n=a.ordinal?"ordinal":"cardinal",i=JSON.stringify({cleanedCode:t,type:n});if(i in this.pluralRulesCache)return this.pluralRulesCache[i];let r;try{r=new Intl.PluralRules(t,{type:n})}catch(t){if(!Intl)return this.logger.error("No Intl support, please use an Intl polyfill!"),ye;if(!e.match(/-|_/))return ye;const n=this.languageUtils.getLanguagePartFromCode(e);r=this.getRule(n,a)}return this.pluralRulesCache[i]=r,r}needsPlural(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=this.getRule(e,a);return t||(t=this.getRule("dev",a)),t?.resolvedOptions().pluralCategories.length>1}getPluralFormsOfKey(e,a){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this.getSuffixes(e,t).map((e=>`${a}${e}`))}getSuffixes(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=this.getRule(e,a);return t||(t=this.getRule("dev",a)),t?t.resolvedOptions().pluralCategories.sort(((e,a)=>ce[e]-ce[a])).map((e=>`${this.options.prepend}${a.ordinal?`ordinal${this.options.prepend}`:""}${e}`)):[]}getSuffix(e,a){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const n=this.getRule(e,t);return n?`${this.options.prepend}${t.ordinal?`ordinal${this.options.prepend}`:""}${n.select(a)}`:(this.logger.warn(`no plural rule found for: ${e}`),this.getSuffix("dev",a,t))}}const ge=function(e,a,t){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:".",i=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],r=((e,a,t)=>{const n=Z(e,t);return void 0!==n?n:Z(a,t)})(e,a,t);return!r&&i&&J(t)&&(r=ne(e,t,n),void 0===r&&(r=ne(a,t,n))),r},pe=e=>e.replace(/\$/g,"$$$$");class be{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.logger=oe.create("interpolator"),this.options=e,this.format=e?.interpolation?.format||(e=>e),this.init(e)}init(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.interpolation||(e.interpolation={escapeValue:!0});const{escape:a,escapeValue:t,useRawValueToEscape:n,prefix:i,prefixEscaped:r,suffix:s,suffixEscaped:o,formatSeparator:d,unescapeSuffix:f,unescapePrefix:l,nestingPrefix:m,nestingPrefixEscaped:u,nestingSuffix:h,nestingSuffixEscaped:c,nestingOptionsSeparator:y,maxReplaces:_,alwaysFormat:g}=e.interpolation;this.escape=void 0!==a?a:ee,this.escapeValue=void 0===t||t,this.useRawValueToEscape=void 0!==n&&n,this.prefix=i?Q(i):r||"{{",this.suffix=s?Q(s):o||"}}",this.formatSeparator=d||",",this.unescapePrefix=f?"":l||"-",this.unescapeSuffix=this.unescapePrefix?"":f||"",this.nestingPrefix=m?Q(m):u||Q("$t("),this.nestingSuffix=h?Q(h):c||Q(")"),this.nestingOptionsSeparator=y||",",this.maxReplaces=_||1e3,this.alwaysFormat=void 0!==g&&g,this.resetRegExp()}reset(){this.options&&this.init(this.options)}resetRegExp(){const e=(e,a)=>e?.source===a?(e.lastIndex=0,e):new RegExp(a,"g");this.regexp=e(this.regexp,`${this.prefix}(.+?)${this.suffix}`),this.regexpUnescape=e(this.regexpUnescape,`${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`),this.nestingRegexp=e(this.nestingRegexp,`${this.nestingPrefix}(.+?)${this.nestingSuffix}`)}interpolate(e,a,t,n){let i,r,s;const o=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{},d=e=>{if(e.indexOf(this.formatSeparator)<0){const i=ge(a,o,e,this.options.keySeparator,this.options.ignoreJSONStructure);return this.alwaysFormat?this.format(i,void 0,t,{...n,...a,interpolationkey:e}):i}const i=e.split(this.formatSeparator),r=i.shift().trim(),s=i.join(this.formatSeparator).trim();return this.format(ge(a,o,r,this.options.keySeparator,this.options.ignoreJSONStructure),s,t,{...n,...a,interpolationkey:r})};this.resetRegExp();const f=n?.missingInterpolationHandler||this.options.missingInterpolationHandler,l=void 0!==n?.interpolation?.skipOnVariables?n.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables;return[{regex:this.regexpUnescape,safeValue:e=>pe(e)},{regex:this.regexp,safeValue:e=>this.escapeValue?pe(this.escape(e)):pe(e)}].forEach((a=>{for(s=0;i=a.regex.exec(e);){const t=i[1].trim();if(r=d(t),void 0===r)if("function"==typeof f){const a=f(e,i,n);r=J(a)?a:""}else if(n&&Object.prototype.hasOwnProperty.call(n,t))r="";else{if(l){r=i[0];continue}this.logger.warn(`missed to pass in variable ${t} for interpolating ${e}`),r=""}else J(r)||this.useRawValueToEscape||(r=W(r));const o=a.safeValue(r);if(e=e.replace(i[0],o),l?(a.regex.lastIndex+=r.length,a.regex.lastIndex-=i[0].length):a.regex.lastIndex=0,s++,s>=this.maxReplaces)break}})),e}nest(e,a){let t,n,i,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=(e,a)=>{const t=this.nestingOptionsSeparator;if(e.indexOf(t)<0)return e;const n=e.split(new RegExp(`${t}[ ]*{`));let r=`{${n[1]}`;e=n[0],r=this.interpolate(r,i);const s=r.match(/'/g),o=r.match(/"/g);((s?.length??0)%2==0&&!o||o.length%2!=0)&&(r=r.replace(/'/g,'"'));try{i=JSON.parse(r),a&&(i={...a,...i})}catch(a){return this.logger.warn(`failed parsing options string in nesting for key ${e}`,a),`${e}${t}${r}`}return i.defaultValue&&i.defaultValue.indexOf(this.prefix)>-1&&delete i.defaultValue,e};for(;t=this.nestingRegexp.exec(e);){let o=[];i={...r},i=i.replace&&!J(i.replace)?i.replace:i,i.applyPostProcessor=!1,delete i.defaultValue;let d=!1;if(-1!==t[0].indexOf(this.formatSeparator)&&!/{.*}/.test(t[1])){const e=t[1].split(this.formatSeparator).map((e=>e.trim()));t[1]=e.shift(),o=e,d=!0}if(n=a(s.call(this,t[1].trim(),i),i),n&&t[0]===e&&!J(n))return n;J(n)||(n=W(n)),n||(this.logger.warn(`missed to resolve ${t[1]} for nesting ${e}`),n=""),d&&(n=o.reduce(((e,a)=>this.format(e,a,r.lng,{...r,interpolationkey:t[1].trim()})),n.trim())),e=e.replace(t[0],n),this.regexp.lastIndex=0}return e}}const ve=e=>{const a={};return(t,n,i)=>{let r=i;i&&i.interpolationkey&&i.formatParams&&i.formatParams[i.interpolationkey]&&i[i.interpolationkey]&&(r={...r,[i.interpolationkey]:void 0});const s=n+JSON.stringify(r);let o=a[s];return o||(o=e(ie(n),i),a[s]=o),o(t)}};class xe{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.logger=oe.create("formatter"),this.options=e,this.formats={number:ve(((e,a)=>{const t=new Intl.NumberFormat(e,{...a});return e=>t.format(e)})),currency:ve(((e,a)=>{const t=new Intl.NumberFormat(e,{...a,style:"currency"});return e=>t.format(e)})),datetime:ve(((e,a)=>{const t=new Intl.DateTimeFormat(e,{...a});return e=>t.format(e)})),relativetime:ve(((e,a)=>{const t=new Intl.RelativeTimeFormat(e,{...a});return e=>t.format(e,a.range||"day")})),list:ve(((e,a)=>{const t=new Intl.ListFormat(e,{...a});return e=>t.format(e)}))},this.init(e)}init(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}};this.formatSeparator=a.interpolation.formatSeparator||","}add(e,a){this.formats[e.toLowerCase().trim()]=a}addCached(e,a){this.formats[e.toLowerCase().trim()]=ve(a)}format(e,a,t){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const i=a.split(this.formatSeparator);if(i.length>1&&i[0].indexOf("(")>1&&i[0].indexOf(")")<0&&i.find((e=>e.indexOf(")")>-1))){const e=i.findIndex((e=>e.indexOf(")")>-1));i[0]=[i[0],...i.splice(1,e)].join(this.formatSeparator)}return i.reduce(((e,a)=>{const{formatName:i,formatOptions:r}=(e=>{let a=e.toLowerCase().trim();const t={};if(e.indexOf("(")>-1){const n=e.split("(");a=n[0].toLowerCase().trim();const i=n[1].substring(0,n[1].length-1);"currency"===a&&i.indexOf(":")<0?t.currency||(t.currency=i.trim()):"relativetime"===a&&i.indexOf(":")<0?t.range||(t.range=i.trim()):i.split(";").forEach((e=>{if(e){const[a,...n]=e.split(":"),i=n.join(":").trim().replace(/^'+|'+$/g,""),r=a.trim();t[r]||(t[r]=i),"false"===i&&(t[r]=!1),"true"===i&&(t[r]=!0),isNaN(i)||(t[r]=parseInt(i,10))}}))}return{formatName:a,formatOptions:t}})(a);if(this.formats[i]){let a=e;try{const s=n?.formatParams?.[n.interpolationkey]||{},o=s.locale||s.lng||n.locale||n.lng||t;a=this.formats[i](e,o,{...r,...n,...s})}catch(e){this.logger.warn(e)}return a}return this.logger.warn(`there was no format function for ${i}`),e}),e)}}class De extends de{constructor(e,a,t){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};super(),this.backend=e,this.store=a,this.services=t,this.languageUtils=t.languageUtils,this.options=n,this.logger=oe.create("backendConnector"),this.waitingReads=[],this.maxParallelReads=n.maxParallelReads||10,this.readingCalls=0,this.maxRetries=n.maxRetries>=0?n.maxRetries:5,this.retryTimeout=n.retryTimeout>=1?n.retryTimeout:350,this.state={},this.queue=[],this.backend?.init?.(t,n.backend,n)}queueLoad(e,a,t,n){const i={},r={},s={},o={};return e.forEach((e=>{let n=!0;a.forEach((a=>{const s=`${e}|${a}`;!t.reload&&this.store.hasResourceBundle(e,a)?this.state[s]=2:this.state[s]<0||(1===this.state[s]?void 0===r[s]&&(r[s]=!0):(this.state[s]=1,n=!1,void 0===r[s]&&(r[s]=!0),void 0===i[s]&&(i[s]=!0),void 0===o[a]&&(o[a]=!0)))})),n||(s[e]=!0)})),(Object.keys(i).length||Object.keys(r).length)&&this.queue.push({pending:r,pendingCount:Object.keys(r).length,loaded:{},errors:[],callback:n}),{toLoad:Object.keys(i),pending:Object.keys(r),toLoadLanguages:Object.keys(s),toLoadNamespaces:Object.keys(o)}}loaded(e,a,t){const n=e.split("|"),i=n[0],r=n[1];a&&this.emit("failedLoading",i,r,a),!a&&t&&this.store.addResourceBundle(i,r,t,void 0,void 0,{skipCopy:!0}),this.state[e]=a?-1:2,a&&t&&(this.state[e]=0);const s={};this.queue.forEach((t=>{((e,a,t)=>{const{obj:n,k:i}=$(e,a,Object);n[i]=n[i]||[],n[i].push(t)})(t.loaded,[i],r),((e,a)=>{void 0!==e.pending[a]&&(delete e.pending[a],e.pendingCount--)})(t,e),a&&t.errors.push(a),0!==t.pendingCount||t.done||(Object.keys(t.loaded).forEach((e=>{s[e]||(s[e]={});const a=t.loaded[e];a.length&&a.forEach((a=>{void 0===s[e][a]&&(s[e][a]=!0)}))})),t.done=!0,t.errors.length?t.callback(t.errors):t.callback())})),this.emit("loaded",s),this.queue=this.queue.filter((e=>!e.done))}read(e,a,t){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:this.retryTimeout,r=arguments.length>5?arguments[5]:void 0;if(!e.length)return r(null,{});if(this.readingCalls>=this.maxParallelReads)return void this.waitingReads.push({lng:e,ns:a,fcName:t,tried:n,wait:i,callback:r});this.readingCalls++;const s=(s,o)=>{if(this.readingCalls--,this.waitingReads.length>0){const e=this.waitingReads.shift();this.read(e.lng,e.ns,e.fcName,e.tried,e.wait,e.callback)}s&&o&&n<this.maxRetries?setTimeout((()=>{this.read.call(this,e,a,t,n+1,2*i,r)}),i):r(s,o)},o=this.backend[t].bind(this.backend);if(2!==o.length)return o(e,a,s);try{const t=o(e,a);t&&"function"==typeof t.then?t.then((e=>s(null,e))).catch(s):s(null,t)}catch(e){s(e)}}prepareLoading(e,a){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),n&&n();J(e)&&(e=this.languageUtils.toResolveHierarchy(e)),J(a)&&(a=[a]);const i=this.queueLoad(e,a,t,n);if(!i.toLoad.length)return i.pending.length||n(),null;i.toLoad.forEach((e=>{this.loadOne(e)}))}load(e,a,t){this.prepareLoading(e,a,{},t)}reload(e,a,t){this.prepareLoading(e,a,{reload:!0},t)}loadOne(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const t=e.split("|"),n=t[0],i=t[1];this.read(n,i,"read",void 0,void 0,((t,r)=>{t&&this.logger.warn(`${a}loading namespace ${i} for language ${n} failed`,t),!t&&r&&this.logger.log(`${a}loaded namespace ${i} for language ${n}`,r),this.loaded(e,t,r)}))}saveMissing(e,a,t,n,i){let r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{},s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:()=>{};if(!this.services?.utils?.hasLoadedNamespace||this.services?.utils?.hasLoadedNamespace(a)){if(null!=t&&""!==t){if(this.backend?.create){const o={...r,isUpdate:i},d=this.backend.create.bind(this.backend);if(d.length<6)try{let i;i=5===d.length?d(e,a,t,n,o):d(e,a,t,n),i&&"function"==typeof i.then?i.then((e=>s(null,e))).catch(s):s(null,i)}catch(e){s(e)}else d(e,a,t,n,s,o)}e&&e[0]&&this.store.addResource(e[0],a,t,n)}}else this.logger.warn(`did not save key "${t}" as the namespace "${a}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")}}const ke=()=>({debug:!1,initAsync:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!1,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:e=>{let a={};if("object"==typeof e[1]&&(a=e[1]),J(e[1])&&(a.defaultValue=e[1]),J(e[2])&&(a.tDescription=e[2]),"object"==typeof e[2]||"object"==typeof e[3]){const t=e[3]||e[2];Object.keys(t).forEach((e=>{a[e]=t[e]}))}return a},interpolation:{escapeValue:!0,format:e=>e,prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!0}}),we=e=>(J(e.ns)&&(e.ns=[e.ns]),J(e.fallbackLng)&&(e.fallbackLng=[e.fallbackLng]),J(e.fallbackNS)&&(e.fallbackNS=[e.fallbackNS]),e.supportedLngs?.indexOf?.("cimode")<0&&(e.supportedLngs=e.supportedLngs.concat(["cimode"])),"boolean"==typeof e.initImmediate&&(e.initAsync=e.initImmediate),e),Me=()=>{};class Se extends de{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=arguments.length>1?arguments[1]:void 0;var t;if(super(),this.options=we(e),this.services={},this.logger=oe,this.modules={external:[]},t=this,Object.getOwnPropertyNames(Object.getPrototypeOf(t)).forEach((e=>{"function"==typeof t[e]&&(t[e]=t[e].bind(t))})),a&&!this.isInitialized&&!e.isClone){if(!this.options.initAsync)return this.init(e,a),this;setTimeout((()=>{this.init(e,a)}),0)}}init(){var e=this;let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;this.isInitializing=!0,"function"==typeof a&&(t=a,a={}),!a.defaultNS&&!1!==a.defaultNS&&a.ns&&(J(a.ns)?a.defaultNS=a.ns:a.ns.indexOf("translation")<0&&(a.defaultNS=a.ns[0]));const n=ke();this.options={...n,...this.options,...we(a)},this.options.interpolation={...n.interpolation,...this.options.interpolation},void 0!==a.keySeparator&&(this.options.userDefinedKeySeparator=a.keySeparator),void 0!==a.nsSeparator&&(this.options.userDefinedNsSeparator=a.nsSeparator);const i=e=>e?"function"==typeof e?new e:e:null;if(!this.options.isClone){let a;this.modules.logger?oe.init(i(this.modules.logger),this.options):oe.init(null,this.options),a=this.modules.formatter?this.modules.formatter:xe;const t=new he(this.options);this.store=new fe(this.options.resources,this.options);const r=this.services;r.logger=oe,r.resourceStore=this.store,r.languageUtils=t,r.pluralResolver=new _e(t,{prepend:this.options.pluralSeparator,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),!a||this.options.interpolation.format&&this.options.interpolation.format!==n.interpolation.format||(r.formatter=i(a),r.formatter.init(r,this.options),this.options.interpolation.format=r.formatter.format.bind(r.formatter)),r.interpolator=new be(this.options),r.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},r.backendConnector=new De(i(this.modules.backend),r.resourceStore,r,this.options),r.backendConnector.on("*",(function(a){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];e.emit(a,...n)})),this.modules.languageDetector&&(r.languageDetector=i(this.modules.languageDetector),r.languageDetector.init&&r.languageDetector.init(r,this.options.detection,this.options)),this.modules.i18nFormat&&(r.i18nFormat=i(this.modules.i18nFormat),r.i18nFormat.init&&r.i18nFormat.init(this)),this.translator=new ue(this.services,this.options),this.translator.on("*",(function(a){for(var t=arguments.length,n=new Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];e.emit(a,...n)})),this.modules.external.forEach((e=>{e.init&&e.init(this)}))}if(this.format=this.options.interpolation.format,t||(t=Me),this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){const e=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);e.length>0&&"dev"!==e[0]&&(this.options.lng=e[0])}this.services.languageDetector||this.options.lng||this.logger.warn("init: no languageDetector is used and no lng is defined");["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"].forEach((a=>{this[a]=function(){return e.store[a](...arguments)}}));["addResource","addResources","addResourceBundle","removeResourceBundle"].forEach((a=>{this[a]=function(){return e.store[a](...arguments),e}}));const r=I(),s=()=>{const e=(e,a)=>{this.isInitializing=!1,this.isInitialized&&!this.initializedStoreOnce&&this.logger.warn("init: i18next is already initialized. You should call init just once!"),this.isInitialized=!0,this.options.isClone||this.logger.log("initialized",this.options),this.emit("initialized",this.options),r.resolve(a),t(e,a)};if(this.languages&&!this.isInitialized)return e(null,this.t.bind(this));this.changeLanguage(this.options.lng,e)};return this.options.resources||!this.options.initAsync?s():setTimeout(s,0),r}loadResources(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Me;const t=J(e)?e:this.language;if("function"==typeof e&&(a=e),!this.options.resources||this.options.partialBundledLanguages){if("cimode"===t?.toLowerCase()&&(!this.options.preload||0===this.options.preload.length))return a();const e=[],n=a=>{if(!a)return;if("cimode"===a)return;this.services.languageUtils.toResolveHierarchy(a).forEach((a=>{"cimode"!==a&&e.indexOf(a)<0&&e.push(a)}))};if(t)n(t);else{this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach((e=>n(e)))}this.options.preload?.forEach?.((e=>n(e))),this.services.backendConnector.load(e,this.options.ns,(e=>{e||this.resolvedLanguage||!this.language||this.setResolvedLanguage(this.language),a(e)}))}else a(null)}reloadResources(e,a,t){const n=I();return"function"==typeof e&&(t=e,e=void 0),"function"==typeof a&&(t=a,a=void 0),e||(e=this.languages),a||(a=this.options.ns),t||(t=Me),this.services.backendConnector.reload(e,a,(e=>{n.resolve(),t(e)})),n}use(e){if(!e)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!e.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return"backend"===e.type&&(this.modules.backend=e),("logger"===e.type||e.log&&e.warn&&e.error)&&(this.modules.logger=e),"languageDetector"===e.type&&(this.modules.languageDetector=e),"i18nFormat"===e.type&&(this.modules.i18nFormat=e),"postProcessor"===e.type&&le.addPostProcessor(e),"formatter"===e.type&&(this.modules.formatter=e),"3rdParty"===e.type&&this.modules.external.push(e),this}setResolvedLanguage(e){if(e&&this.languages&&!(["cimode","dev"].indexOf(e)>-1))for(let e=0;e<this.languages.length;e++){const a=this.languages[e];if(!(["cimode","dev"].indexOf(a)>-1)&&this.store.hasLanguageSomeTranslations(a)){this.resolvedLanguage=a;break}}}changeLanguage(e,a){var t=this;this.isLanguageChangingTo=e;const n=I();this.emit("languageChanging",e);const i=e=>{this.language=e,this.languages=this.services.languageUtils.toResolveHierarchy(e),this.resolvedLanguage=void 0,this.setResolvedLanguage(e)},r=(e,r)=>{r?(i(r),this.translator.changeLanguage(r),this.isLanguageChangingTo=void 0,this.emit("languageChanged",r),this.logger.log("languageChanged",r)):this.isLanguageChangingTo=void 0,n.resolve((function(){return t.t(...arguments)})),a&&a(e,(function(){return t.t(...arguments)}))},s=a=>{e||a||!this.services.languageDetector||(a=[]);const t=J(a)?a:this.services.languageUtils.getBestMatchFromCodes(a);t&&(this.language||i(t),this.translator.language||this.translator.changeLanguage(t),this.services.languageDetector?.cacheUserLanguage?.(t)),this.loadResources(t,(e=>{r(e,t)}))};return e||!this.services.languageDetector||this.services.languageDetector.async?!e&&this.services.languageDetector&&this.services.languageDetector.async?0===this.services.languageDetector.detect.length?this.services.languageDetector.detect().then(s):this.services.languageDetector.detect(s):s(e):s(this.services.languageDetector.detect()),n}getFixedT(e,a,t){var n=this;const i=function(e,a){let r;if("object"!=typeof a){for(var s=arguments.length,o=new Array(s>2?s-2:0),d=2;d<s;d++)o[d-2]=arguments[d];r=n.options.overloadTranslationOptionHandler([e,a].concat(o))}else r={...a};r.lng=r.lng||i.lng,r.lngs=r.lngs||i.lngs,r.ns=r.ns||i.ns,""!==r.keyPrefix&&(r.keyPrefix=r.keyPrefix||t||i.keyPrefix);const f=n.options.keySeparator||".";let l;return l=r.keyPrefix&&Array.isArray(e)?e.map((e=>`${r.keyPrefix}${f}${e}`)):r.keyPrefix?`${r.keyPrefix}${f}${e}`:e,n.t(l,r)};return J(e)?i.lng=e:i.lngs=e,i.ns=a,i.keyPrefix=t,i}t(){for(var e=arguments.length,a=new Array(e),t=0;t<e;t++)a[t]=arguments[t];return this.translator?.translate(...a)}exists(){for(var e=arguments.length,a=new Array(e),t=0;t<e;t++)a[t]=arguments[t];return this.translator?.exists(...a)}setDefaultNamespace(e){this.options.defaultNS=e}hasLoadedNamespace(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;const t=a.lng||this.resolvedLanguage||this.languages[0],n=!!this.options&&this.options.fallbackLng,i=this.languages[this.languages.length-1];if("cimode"===t.toLowerCase())return!0;const r=(e,a)=>{const t=this.services.backendConnector.state[`${e}|${a}`];return-1===t||0===t||2===t};if(a.precheck){const e=a.precheck(this,r);if(void 0!==e)return e}return!!this.hasResourceBundle(t,e)||(!(this.services.backendConnector.backend&&(!this.options.resources||this.options.partialBundledLanguages))||!(!r(t,e)||n&&!r(i,e)))}loadNamespaces(e,a){const t=I();return this.options.ns?(J(e)&&(e=[e]),e.forEach((e=>{this.options.ns.indexOf(e)<0&&this.options.ns.push(e)})),this.loadResources((e=>{t.resolve(),a&&a(e)})),t):(a&&a(),Promise.resolve())}loadLanguages(e,a){const t=I();J(e)&&(e=[e]);const n=this.options.preload||[],i=e.filter((e=>n.indexOf(e)<0&&this.services.languageUtils.isSupportedCode(e)));return i.length?(this.options.preload=n.concat(i),this.loadResources((e=>{t.resolve(),a&&a(e)})),t):(a&&a(),Promise.resolve())}dir(e){if(e||(e=this.resolvedLanguage||(this.languages?.length>0?this.languages[0]:this.language)),!e)return"rtl";const a=this.services?.languageUtils||new he(ke());return["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam","ckb"].indexOf(a.getLanguagePartFromCode(e))>-1||e.toLowerCase().indexOf("-arab")>1?"rtl":"ltr"}static createInstance(){return new Se(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},arguments.length>1?arguments[1]:void 0)}cloneInstance(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Me;const t=e.forkResourceStore;t&&delete e.forkResourceStore;const n={...this.options,...e,isClone:!0},i=new Se(n);void 0===e.debug&&void 0===e.prefix||(i.logger=i.logger.clone(e));if(["store","services","language"].forEach((e=>{i[e]=this[e]})),i.services={...this.services},i.services.utils={hasLoadedNamespace:i.hasLoadedNamespace.bind(i)},t){const e=Object.keys(this.store.data).reduce(((e,a)=>(e[a]={...this.store.data[a]},Object.keys(e[a]).reduce(((t,n)=>(t[n]={...e[a][n]},t)),{}))),{});i.store=new fe(e,n),i.services.resourceStore=i.store}return i.translator=new ue(i.services,n),i.translator.on("*",(function(e){for(var a=arguments.length,t=new Array(a>1?a-1:0),n=1;n<a;n++)t[n-1]=arguments[n];i.emit(e,...t)})),i.init(n,a),i.translator.options=n,i.translator.backendConnector.services.utils={hasLoadedNamespace:i.hasLoadedNamespace.bind(i)},i}toJSON(){return{options:this.options,store:this.store,language:this.language,languages:this.languages,resolvedLanguage:this.resolvedLanguage}}}const Pe=Se.createInstance();Pe.createInstance=Se.createInstance,Pe.createInstance,Pe.dir,Pe.init,Pe.loadResources,Pe.reloadResources,Pe.use,Pe.changeLanguage,Pe.getFixedT,Pe.t,Pe.exists,Pe.setDefaultNamespace,Pe.hasLoadedNamespace,Pe.loadNamespaces,Pe.loadLanguages;var Te={en:{opening_hours:{pretty:{off:"closed",SH:"school holidays",PH:"public holidays"}}},de:{opening_hours:{texts:{"unexpected token":'Unerwartetes Zeichen: "{{token}}" Das bedeutet, dass die Syntax an dieser Stelle nicht erkannt werden konnte.',"no string":"Der Wert (erster Parameter) ist kein String",nothing:"Der Wert enthält nichts, was ausgewertet werden könnte.","nothing useful":"Diese Regel enthält nichts nützliches. Bitte entferne diese leere Regel.","combine rules":'Getrennte Regeln erkannt welche jeweils nur aus einer Zeit Bereichsdefinition bestehen. Diese Regeln sollten mittels "{{ok}}" zu einer Regel kombiniert werden.',"value ends with token":'Der Wert endet mit "{{token}}". Bitte ergänze den Wert nach "{{token}}" oder lösche "{{token}}".',"programmers joke":"Kann es sein, dass du ein Programmierer bist und das Hinzufügen eines Semikolons nach jedem Statement ist zwanghaft ;) ? Es ist so, dass das Semikolon in der opening_hours-Syntax als Trenner für Regeln definiert ist. Bitte verzichte an dieser Stelle auf ein Semikolon.","interpreted as year":'Die Zahl {{number}} wird als Jahr interpretiert. Vermutlich ist das nicht beabsichtigt. Uhrzeiten werden als "12:00" angegeben.',"rule before fallback empty":"Die Regel vor der Fallback-Regel enthält nichts nützliches","hour min separator":'Bitte benutze ":" als Stunden/Minuten-Trenner',"warnings severity":'Der Parameter optional_conf_parm["warnings_severity"] muss eine ganze Zahl zwischen (einschließlich) 0 und (einschließlich) 7 sein. Gegeben: {{severity}}, erwartet: Eine der Zahlen: {{allowed}}.',"optional conf parm type":"Der optional_conf_parm Parameter hat einen unbekannten Typ. Gegeben: {{given}}","conf param tag key missing":'Der optional_conf_parm["tag_key"] fehlt, ist aber notwendig wegen optional_conf_parm["map_value"].',"conf param mode invalid":'Der optional_conf_parm["mode"]-Parameter ist eine ungültige Zahl. Gegeben: {{given}}, erwartet: Eine der Zahlen: {{allowed}}.',"conf param unknown type":'Der optional_conf_parm["{{key}}"] Parameter hat einen unbekannten Typ. Gegeben: {{given}}, erwartet: {{expected}}.',"library bug":'Bei der Auswertung des Wertes "{{value}}" ist ein Fehler aufgetreten. Bitte melde diesen Fehler oder korrigiere diesen mittels eines Pull Requests oder Patches: {{-url}}.{{message}}',"library bug PR only":'Bei der Auswertung des Wertes "{{value}}" ist ein Fehler aufgetreten. Du kannst dies korrigieren, indem du das Problem löst und in Form eines Pull Requests oder Patches zum Projekt beiträgst: {{-url}}.{{message}}',"use multi":'Du hast {{count}} {{-part2}} Einzelne Regeln können mit ";" getrennt werden.',"selector multi 2a":"{{what}} in einer Regel benutzt. Du kannst nur einen davon je Regel verwenden","selector multi 2b":'nicht verbundene {{what}} in einer Regel benutzt. Das ist vermutlich ein Fehler. Gleiche Selektoren können (und sollten) immer zusammen und durch Kommas getrennt geschrieben werden. Beispiel für Zeitspannen "12:00-13:00,15:00-18:00". Beispiel für Wochentage "Mo-We,Fr".',"selector state":"Status-Schlüsselwörter (offen, geschlossen)",comments:"Kommentare",months:"Monate",weekdays:"Wochentage",ranges:"Zeitspannen","default state":"Diese Regel, welche den Standard-Status (d.h. geschlossen) für alle folgenden Regeln ändert, ist nicht die erste Regel. Diese Regel überschreibt alle vorherigen Regeln. Es kann legitim sein, den Standard-Status z.B. auf geöffnet festzulegen und dann nur die Zeiten, zu denen geschlossen ist, anzugeben.",vague:'Diese Regel ist nicht sehr aussagekräftig, da kein Zeit Selektor angegeben wurde. Ein Zeit Selektor ist die Komponente die angibt, zu welcher Tageszeit ein Objekt geöffnet hat, zum Beispiel "10:00-19:00". Bitte füge eine Zeitangabe oder einen Kommentar hinzu, um dies zu verbessern.',"empty comment":'Du hast einen leeren Kommentar verwendet." Bitte schreibe entweder einen Kommentar-Text oder benutze stattdessen das Schlüsselwort "unknown".',separator_for_readability:"Du hast das optionale Symbol <separator_for_readability> an der falschen Stelle benutzt. Bitte lies die Syntax-Spezifikation um zu sehen, wo es verwendet werden kann, oder entferne es.","strange 24/7":'Du hast 24/7 in einer Art verwendet, welche wahrscheinlich nicht als "24 Stunden, 7 Tage die Woche" interpretiert wird. Der Richtigkeit halber solltest du "open" oder "closed" für diese Regel verwenden und dann die Ausnahmen angeben um das selbe Ziel zu erreichen. So ist es klarer – zum Beispiel "open; Mo 12:00-14:00 off".',"public holiday":'Es wurde keine Regel für "PH" (feiertags) angegeben. Dies ist nicht sehr aussagekräftig.{{-part2}} Bitte füge die Regel "PH off" an, wenn die Einrichtung an allen Feiertagen geschlossen ist oder schreibe "Sa,Su,PH 12:00-16:00" um auszudrücken, dass Samstags, Sonntags und feiertags von 12:00-16:00 geöffnet ist. Bei einer Öffnungszeit wie "Fr-Sa 18:00-06:00" ist Vorsicht geboten, da "PH off" auf 00:00-24:00 zutrifft. Hier kann "Fr-Sa 18:00-06:00; PH 18:00-06:00 off" verwendet werden. Falls die Einrichtung täglich und an Feiertagen geöffnet ist, kann dies explizit mittels "Mo-Su,PH" ausgedrückt werden. Wenn du dir im Unklaren bist, versuche die Öffnungszeit zu klären. Falls das nicht möglich ist, lass die Angabe weg und ignoriere diese Warnung.',"public holiday part2":' Leider ist der "tag key" (beispielsweise "opening_hours", oder "lit") in opening_hours.js nicht bekannt. Diese Warnung betrifft nur die Keys: {{keys}}. Falls deine Angabe nicht für einen dieser ist, ignoriere bitte folgenden Hinweis:',"additional_rule_separator not used after time wrapping midnight":'Diese Regel überschreibt Teile der vorherigen Regel. Der Grund dafür ist, dass normale Regeln auf den ganzen Tag zutreffen und alle Definitionen von vorhergehenden Regeln für diesen Tag überschreiben. Du kannst diese Regel als additive Regel deklarieren indem du ein "," anstelle des üblichen ";" für diese Regel verwendest. Beachte das die Überschreibung auch gewünscht sein kann und in so einem Fall diese Warnung ignoriert werden kann.',"additional rule which evaluates to closed":'Diese Regel wird als geschlossen ausgewertet aber wurde als additive Regel angegeben. Sie sollte als normale Regel mittels ";" definiert sein. Siehe https://wiki.openstreetmap.org/wiki/DE:Key:opening_hours/specification#explain:rule_modifier:closed.',switched:'Der Selektor "{{first}}" wurde für eine bessere Lesbarkeit und der Vollständigkeit halber mit "{{second}}" getauscht.',"no colon after":'Bitte Benutze kein ":" nach dem Token {{token}}.',"number -5 to 5":"Zahl zwischen -5 und 5 (außer 0) erwartet.","one weekday constraint":"Du kannst höchstens einen beschränkten Wochentag in einer Monats-Spanne verwenden","range constrained weekdays":"Du kannst keine Wochentags-Spanne als Beschränkung in einer Monats-Spanne verwenden",expected:'"{{-symbol}}" erwartet.',"range zero":'Du kannst keine {{type}}-Spanne mit Periode "0" verwenden.',"period one year+":'Bitte verwende keine {{type}}-Spannen mit Periode "1". Wenn du ausdrücken willst, das eine Einrichtung ab einem bestimmten Jahr immer offen ist, benutze bitte "<year>+".',"period one":'Bitte verwende keine {{type}}-Spannen mit Periode "1".',"month 31":"Die Tagesangabe für {{month}} muss zwischen 1 und 31 liegen.","month 30":"Der Monat {{month}} hat keine 31 Tage. Der letzte Tag von {{month}} ist Tag 30.","month feb":'"Der Monat {{month}} hat entweder 28 oder 29 Tage (Schaltjahre)."',"point in time":"Erwarte Bindestrich (-) oder offenes Ende (+) in der Zeitspanne {{calc}}. Um mit Zeitpunkten zu arbeiten, muss der Modus für  {{libraryname}} umgestellt werden. Vielleicht falsches OSM-tag verwendet?",calculation:"Berechnung","time range continue":"Die Zeitspanne geht nicht wie erwartet weiter","period continue":'Die Zeitspannen-Periode geht nicht wie erwartet weiter. Beispiel "/01:30".',"time range mode":'{{libraryname}} wurde im "Zeitspannen-Modus" aufgerufen. Zeitpunkt gefunden.',"time ranges":"Zeitspannen","holiday ranges":"Feiertagen","point in time mode":'{{libraryname}} wurde im "Zeitpunkt-Modus" aufgerufen. Zeitspanne gefunden.',"outside current day":"Zeitspanne beginnt außerhalb des aktuellen Tages","two midnights":"Zeitspanne welche mehrmals Mitternacht beinhaltet wird nicht unterstützt","without minutes":'Zeitspanne ohne Minutenangabe angegeben. Das ist nicht sehr eindeutig! Bitte verwende stattdessen folgende Syntax "{{syntax}}".',"outside day":"Die Zeitspanne beginnt außerhalb des aktuellen Tages","zero calculation":'Das Hinzufügen von 0 in einer variablen Zeitberechnung ändert die variable Zeit nicht. Bitte entferne die Zeitberechnung (Beispiel: "sunrise-(sunset-00:00)").',"calculation syntax":"Berechnung mit variabler Zeit hat nicht die korrekte Syntax",missing:'Fehlendes "{{symbol}}"',"(time)":"(Zeit)","bad range":"Ungültige Zeitspanne: {{from}}-{{to}}","] or more numbers":'"]" oder weitere Zahlen erwartet.',"additional rule no sense":'Eine weitere Regel an dieser Stelle ergibt keinen Sinn. Benutze einfach ";" als Trenner für Regeln. Siehe https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification#explain:additional_rule_separator',"unexpected token weekday range":"Unerwartes Token in Tages-Spanne: {{token}}","max differ":"Es sollte keinen Grund geben, mehr als {{maxdiffer}} Tage von einem {{name}} abzuweichen. Wenn nötig, teile uns dies bitte mit …","adding 0":"Addition von 0 verändert das Datum nicht. Bitte weglassen.","unexpected token holiday":"Unerwarteter Token (in Feiertags-Auswertung): {{token}}","no holiday definition":"{{name}} ist für das Land {{cc}} nicht definiert.","no holiday definition state":"{{name}} ist für das Land {{cc}} und Bundesland {{state}} nicht definiert.","no country code":"Der Ländercode fehlt. Dieser wird benötigt um die korrekten Feiertage zu bestimmen (siehe in der README wie dieser anzugeben ist)","no SH definition":"Die Schulferien {{name}}sind für das Jahr {{year}} nicht definiert","movable no formula":"Der bewegliche Feiertag {{name}} kann nicht berechnet werden. Bitte füge eine entsprechende Formel hinzu.","movable not in year":"Der bewegliche Feiertag {{name}} plus {{days}} Tage befindet sich nicht mehr im selben Jahr. Aktuell nicht unterstützt.","year range one year":'Eine Jahres-Spanne mit gleichem Jahr als Beginn und Ende ergibt keinen Sinn. Bitte entferne das Ende-Jahr. zum Beispiel: "{{year}} May 23"',"year range reverse":"Eine Jahres-Spanne mit Beginn größer als Ende ergibt keinen Sinn. Bitte umdrehen.","year past":"Das Jahr liegt in der Vergangenheit.","unexpected token year range":"Unerwartetes Token in der Jahres-Spanne: {{token}}","week range reverse":"Du hast eine Wochen-Spanne in umgekehrter Reihenfolge oder mehrere Jahre umfassende angegeben. Dies ist aktuell nicht unterstützt.","week negative":"Du hast eine Kalenderwoche kleiner 1 angegeben. Korrekte Angaben sind 1-53.","week exceed":"Du hast eine Kalenderwoche größer als 53 angegeben. Korrekte Angaben sind 1-53.","week period less than 2":'Du hast eine Wochenperiode kleiner 2 angegeben. Wenn du die gesamte Spanne von {{weekfrom}} bis {{weekto}} angeben willst, lasse "/{{period}}" einfach weg.',"week period greater than 26":'Du hast eine Wochen-Periode größer als 26 angegeben. 26,5 ist die Hälfte des Maximums von 53 Wochen pro Jahr. Damit würde eine Periode größer als 26 nur einmal pro Jahr auftreten. Bitte gibt den Wochen-Selektor als "week {{weekfrom}}" an, wenn es das ist, was du ausdrücken möchtest.',"unexpected token week range":"Unerwartetes Token in Wochen-Spanne: {{token}}","unexpected token month range":"Unerwartetes Token in Monats-Spanne: {{token}}","day range reverse":"Zeitspanne in falscher Reihenfolge. Beginn ist größer als Ende.","open end":'Angegeben als "open end". Schließzeit wurde geraten.',"date parameter needed":"Datumsparameter nötig.","assuming ok for ko":'"{{ko}}" wird als "{{ok}}" interpretiert.',"please use ok for ko":'Bitte verwende "{{-ok}}" anstelle von "{{-ko}}".',"please use ok for similar looking ko":'Please use notation "{{ok}}" for "{{ko}}". Those characters look very similar but are not the same!',"rant degree sign used for zero":"Beachte das dies ein Gradzeichen ist, welches als (hochgestellte) Null missbraucht wurde. Eine hochgestellte Null ist in Unicode definiert (°) und wäre angebrachter/einheitlicher an dieser Stelle. Allerdings ist die Verwendung von nicht ASCII Ziffern nicht erlaubt.","please use English written ok for ko":'Bitte benutze die englische Schreibweise "{{ok}}" für "{{ko}}".',"please use English abbreviation ok for ko":'Bitte benutze die englische Abkürzung "{{ok}}" für "{{ko}}".',"please use English abbreviation ok for so":'Bitte benutze die englische Abkürzung "{{ok}}" für "{{ko}}". Beachte das Samstag in Polnisch gemeint sein kann.',"please use off for ko":'Bitte benutze "{{ok}}" für "{{ko}}". Beispiel: "Mo-Fr 08:00-12:00; Tu off".',"please use ok for workday":'"{{ko}}" wird als "{{ok}}" interpretiert. Werktag sollte nicht verwendet werden. Siehe https://wiki.openstreetmap.org/wiki/Talk:Key:opening_hours#need_syntax_for_holidays_and_workingdays',"omit hour keyword":'Bitte lasse "{{ko}}" weg oder verwende einen Doppelpunkt. Beispiel: "12:00-14:00".',"omit ko":'Bitte verzichte auf "{{ko}}".',"omit tag key":'Bitte lasse "{{ko}}" weg. Der Tag Schlüssel darf nicht im Tag Wert sein.',"omit wrong keyword open end":'Bitte lasse "{{ko}}" weg. Falls du "open end" ausdrücken möchtest verwende bitte ein "+". Beispiel: "12:00+".',"assuming open end for ko":'"{{ko}}" wird als "{{ok}}" ("open end") interpretiert. Example: "12:00+".',"please use ok for uncertainty":'Bitte verwende "{{ok}}" für "{{ko}}". Falls der begründete Verdacht der Ungewissheit vorliegt ziehe die Verwendung eines Kommentars in Betracht. Beispiel: 12:00-14:00 "only on sunshine".',"please use fallback rule":'Bitte verwende "{{ok}}" (Fallback Regel) für "{{ko}}". Beispiel: Mo-Fr 12:00-14:00; PH off || "nach Vereinbarung"',"please use ok for missing data":"Bitte verwende eine FIXME Notiz.","please use 24 hours time for ko":"Bitte verwende 24 Stunden Zeitangaben anstelle der veralteten 12 Stunden Variante. Falls die 12 Stunden Variante verwendet wird ist eventuelle eine Konvertierung notwendig.","please use restriction comment time for ko":'Es sieht so aus also möchtest du zusätzliche Einschränkungen für eine Öffnungszeit geben. Falls sich dies nicht mit der Syntax ausdrücken lässt können Kommentare verwendet werden. Zusätzlich sollte eventuell das Schlüsselwort `open` benutzt werden. Beispiel: open "Nur Frauen".',"please use ok for typographically correct":'Bitte verwende "{{-ok}}" für "{{ko}}". Auch wenn "{{ko}}" typografisch korrekt ist, ist dies in der opening_hours Syntax nicht definiert. Korrekte Typographie sollte auf Anwendungsebene sichergestellt werden …'},pretty:{off:"geschlossen",SH:"Schulferien",PH:"Feiertags"}}},eo:{opening_hours:{texts:{"assuming ok for ko":'"{{ko}}" estas interpretita kiel "{{ok}}".',"please use ok for ko":'Bonvolu uzi la esprimon "{{-ok}}" anstataŭ "{{ko}}".',"please use English abbreviation ok for ko":'Bonvolu uzi la anglan mallongigon "{{ok}}" für "{{ko}}".'},pretty:{off:"fermita",SH:"lernejaj ferioj",PH:"festotagoj"}}},fi:{opening_hours:{pretty:{off:"suljettu",SH:"koululomat",PH:"lailliset vapaapäivät"}}},fr:{opening_hours:{texts:{"assuming ok for ko":'suppose "{{ok}}" pour "{{ko}}".',"please use ok for ko":'S\'il vous plaît utilisez "{{ok}}" pour "{{ko}}".',"please use English abbreviation ok for ko":'S\'il vous plaît utiliseé l\'abréviation "{{ok}}" pour "{{ko}}".'},pretty:{off:"fermé",SH:"vacances scolaires",PH:"jours fériés"}}},nl:{opening_hours:{texts:{"please use English abbreviation ok for ko":'Neem de engelse afkorting "{{ok}}" voor "{{ko}}" alstublieft.'},pretty:{off:"gesloten",SH:"schoolvakantie",PH:"feestdagen"}}},ru:{opening_hours:{pretty:{off:"закрыто",SH:"каникулы",PH:"праздник"}}},it:{opening_hours:{pretty:{off:"chiuso",SH:"festività scolastiche",PH:"festività"}}}};if(Pe.isInitialized)for(var Ne in Te)Pe.addResourceBundle(Ne,"opening_hours",Te[Ne].opening_hours,!0);else Pe.init({fallbackLng:"en",resources:Te,getAsync:!0,useCookie:!0});return function(e,a,t){var n={dawn:330,sunrise:360,sunset:1080,dusk:1110},i=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],r=["Su","Mo","Tu","We","Th","Fr","Sa"],s={su:[0,"weekday"],mo:[1,"weekday"],tu:[2,"weekday"],we:[3,"weekday"],th:[4,"weekday"],fr:[5,"weekday"],sa:[6,"weekday"],jan:[0,"month"],feb:[1,"month"],mar:[2,"month"],apr:[3,"month"],may:[4,"month"],jun:[5,"month"],jul:[6,"month"],aug:[7,"month"],sep:[8,"month"],oct:[9,"month"],nov:[10,"month"],dec:[11,"month"],day:["day","calcday"],days:["days","calcday"],sunrise:["sunrise","timevar"],sunset:["sunset","timevar"],dawn:["dawn","timevar"],dusk:["dusk","timevar"],easter:["easter","event"],week:["week","week"],open:["open","state"],closed:["closed","state"],off:["off","state"],unknown:["unknown","state"]},o={zero_pad_hour:!0,one_zero_if_hour_zero:!1,leave_off_closed:!0,keyword_for_off_closed:"off",rule_sep_string:" ",print_semicolon:!0,leave_weekday_sep_one_day_betw:!0,sep_one_day_between:",",zero_pad_month_and_week_numbers:!0,locale:"en"},d={opening_hours:{mode:0,warn_for_PH_missing:!0},collection_times:{mode:2},"opening_hours:.+":{mode:0},".+:opening_hours":{mode:0},".+:opening_hours:.+":{mode:0},smoking_hours:{mode:0},service_times:{mode:2},happy_hours:{mode:0},lit:{mode:0,map:{yes:'sunset-sunrise open "specified as yes: At night (unknown time schedule or daylight detection)"',automatic:'unknown "specified as automatic: When someone enters the way the lights are turned on."',no:'off "specified as no: There are no lights installed."',interval:'unknown "specified as interval"',limited:'unknown "specified as limited"'}}},f=1440,l=864e5,m="opening_hours.js",u="https://github.com/opening-hours/"+m,h="en";"object"==typeof Pe&&(h=Pe.language);var c,y,_,g,p=function(e,a){var t;return"object"==typeof Pe&&"function"==typeof Pe.t&&"string"==typeof h&&-1!==["de"].indexOf(h)?t=(Pe.language!==h?Pe.getFixedT(h):Pe.t)("opening_hours:texts."+e,a):(void 0===(t=O[e])&&(t=e),t.replace(/{{([^{}]*)}}/g,(function(e,t){return void 0!==a[t]?a[t]:e})))};if("object"==typeof a&&null!==a)"object"==typeof a.address&&("string"==typeof a.address.country_code&&(c=a.address.country_code),"string"==typeof a.address.state?y=a.address.state:"string"==typeof a.address.county&&(y=a.address.county)),"string"==typeof a.lon&&"string"==typeof a.lat&&(_=a.lat,g=a.lon);else if(null===a)c="de",y="Baden-Württemberg",_="49.5400039",g="9.7937133";else if(void 0!==a)throw"The nominatim_object parameter is of unknown type. Given "+typeof a+", expected object.";var b,v,x,D,k,w,M=4,S=!1;if("number"==typeof t)b=t;else if("object"==typeof t){if("string"==typeof t.locale&&(h=t.locale.split("-")[0]),$("mode","number")&&(b=t.mode),$("warnings_severity","number")&&(M=t.warnings_severity,-1===[0,1,2,3,4,5,6,7].indexOf(M)))throw p("warnings severity",{severity:M,allowed:"[ 0, 1, 2, 3, 4, 5, 6, 7 ]"});$("tag_key","string")&&(v=t.tag_key),$("map_value","boolean")&&(S=t.map_value)}else if(void 0!==t)throw p("optional conf parm type",{given:typeof t});if("string"==typeof v)D=v,w=!1,Object.keys(d).forEach((function(e){!0!==w&&(D===e?(k=e,w=!0):new RegExp(e).test(D)&&(k=e))})),x=k,S&&"object"==typeof d[x]&&"object"==typeof d[x].map&&"string"==typeof d[x].map[e]&&(e=d[x].map[e]);else if(S)throw p("conf param tag key missing");if(void 0===b)b="string"==typeof v&&void 0!==d[x]&&"number"==typeof d[x].mode?d[x].mode:0;else if(-1===[0,1,2].indexOf(b))throw p("conf param mode invalid",{given:b,allowed:"[ 0, 1, 2 ]"});if("string"!=typeof e)throw p("no string");if(/^(?:\s*;?)+$/.test(e))throw p("nothing");for(var P=[],T=!1,N=!1,C=!1,F=function e(a){var t=[],n=[],i=!1;for(;""!==a;){var r=a.match(/^([a-z]{2,})\b((?:[.]| before| after)?)/i),o=void 0;if(r&&""===r[2]&&(o=s[r[1].toLowerCase()]),"object"==typeof o)n.push(o.concat([a.length])),a=a.substr(r[1].length);else if(r=a.match(/^\s+/))a=a.substr(r[0].length);else if(r=a.match(/^24\/7/))n.push([r[0],r[0],a.length]),a=a.substr(r[0].length);else if(/^;/.test(a))t.push([n,i,a.length]),a=a.substr(1),n=[],i=!1;else if(/^[:.]/.test(a))"."!==a[0]||T||P.push([-1,a.length-1,p("hour min separator")]),n.push([":","timesep",a.length]),a=a.substr(1);else if(r=a.match(/^(?:PH|SH)/i))n.push([r[0].toUpperCase(),"holiday",a.length]),a=a.substr(2);else if(r=a.match(/^[°\u2070-\u209F\u00B2\u00B3\u00B9]{1,2}/)){var d={176:0,8304:0,185:1,178:2,179:3},f=r[0].split("").map((function(e){var a=e.charCodeAt(0);return"number"==typeof d[a]?d[a]:8308<=a&&a<=8313?a-8304:8320<=a&&a<=8329?a-8320:void 0})).join(""),l="";if(n.length>0&&te(n,n.length-1,"number")&&(l+=":"),l+=f,!T){for(var m=0;m<=r[0].length;m++)176===a.charCodeAt(m)&&P.push([-1,a.length-(1+m),p("rant degree sign used for zero")]);P.push([-1,a.length-r[0].length,p("please use ok for ko",{ko:r[0],ok:l})])}a=l+a.substr(r[0].length)}else if(r=a.match(/^(&|_|→|–|−|—|ー|=|·|öffnungszeit(?:en)?:?|opening_hours\s*=|\?|~|～|：|always (?:open|closed)|24x7|24 hours 7 days a week|24 hours|7 ?days(?:(?: a |\/)week)?|7j?\/7|all days?|every day|(?:bis|till?|-|–)? ?(?:open ?end|late)|(?:(?:one )?day (?:before|after) )?(?:school|public) holidays?|days?\b|до|рм|ам|jours fériés|on work days?|sonntags?|(?:nur |an )?sonn-?(?:(?: und |\/)feiertag(?:s|en?)?)?|(?:an )?feiertag(?:s|en?)?|(?:nach|on|by) (?:appointments?|vereinbarung|absprache)|p\.m\.|a\.m\.|[_a-zäößàáéøčěíúýřПнВсо]+\b|à|á|mo|tu|we|th|fr|sa|su|jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.?)/i)){if("object"==typeof(_=q(r[1].toLowerCase(),a.length)))n.push([_[0],_[1],a.length]),a=a.substr(r[0].length);else if("string"==typeof _){if("am"===_||"pm"===_){var u,h=n.length-1;h>=0&&(h-2>=0&&te(n,h-2,"number","timesep","number")?u=n[h-=2]:te(n,h,"number")&&(u=n[h]),"object"==typeof u&&("pm"===_&&u[0]<12&&(u[0]+=12),"am"===_&&12===u[0]&&(u[0]=0),n[h]=u)),_=""}var c=e(_)[0];if(!0===c[1])throw Z();for(m=0;m<c[0].length;m++)n.push([c[0][m][0],c[0][m][1],a.length]);a=a.substr(r[0].length)}else n.push([a[0].toLowerCase(),a[0].toLowerCase(),a.length-1]),a=a.substr(1);"string"!=typeof r[2]||""===r[2]||T||P.push([-1,a.length,p("omit ko",{ko:r[2]})])}else if(r=a.match(/^(\d+)(?:([.])([^\d]))?/))Number(r[1])>1900?(n.push([Number(r[1]),"year",a.length]),Number(r[1])>=2100&&P.push([-1,a.length-1,p("interpreted as year",{number:Number(r[1])})])):n.push([Number(r[1]),"number",a.length]),a=a.substr(r[1].length+("string"==typeof r[2]?r[2].length:0)),"string"!=typeof r[2]||""===r[2]||T||P.push([-1,a.length,p("omit ko",{ko:r[2]})]);else if(/^\|\|/.test(a)){if(0===n.length)throw U(-1,a.length-2,p("rule before fallback empty"));t.push([n,i,a.length]),n=[],a=a.substr(2),i=!0}else if(r=a.match(/^"([^"]+)"/))n.push([r[1],"comment",a.length]),a=a.substr(r[0].length);else if(r=a.match(/^(["'„“‚‘’«「『])([^"'“”‘’»」』;|]*)(["'”“‘’»」』])/)){for(var y=1;y<=3;y+=2){var _;if("string"!=typeof(_=q(r[y],a.length-(3===y?r[1].length+r[2].length:0)))&&'"'!==r[y])throw Z("A character for error tolerance was allowed in the regular expression but is not covered by word_error_correction which is needed to format a proper message for the user.")}n.push([r[2],"comment",a.length]),a=a.substr(r[0].length)}else/^(?:␣|\s)/.test(a)||n.push([a[0].toLowerCase(),a[0].toLowerCase(),a.length]),a=a.substr(1)}return t.push([n,i]),t}(e),H="",A=!0,j=[],B={},R=[],z=0;z<F.length;z++)if(0!==F[z][0].length){var J=0,I=!1;do{if(J===F[z][0].length)break;var W={time:[],wraptime:[],weekday:[],holiday:[],week:[],month:[],monthday:[],year:[],date:[],fallback:F[z][1],additional:!!J,meaning:!0,unknown:!1,comment:void 0,build_from_token_rule:void 0};W.build_from_token_rule=[z,J,R.length],J="object"==typeof(J=ie(F[z][0],J,W,z))?J[0]:0,R.push([F[z][0].slice(W.build_from_token_rule[1],0===J?F[z][0].length:J),F[z][1],F[z][2]]),I&&R.length>1&&R[R.length-1][0].unshift(R[R.length-2][0].pop()),I=0!==J;if(["year","holiday","month","monthday","week","weekday"].forEach((function(e){W[e].length>0&&(W.date.push(W[e]),W[e]=[])})),j.push(W),W.wraptime.length>0){for(var Y={time:W.wraptime,date:[],meaning:W.meaning,unknown:W.unknown,comment:W.comment,wrapped:!0,build_from_token_rule:W.build_from_token_rule},G=0;G<W.date.length;G++){Y.date.push([]);for(var K=0;K<W.date[G].length;K++)Y.date[Y.date.length-1].push(ne(W.date[G][K],-864e5))}j.push(Y)}}while(J)}else P.push([z,-1,p("nothing useful")+(z===F.length-1&&z>0&&!F[z][1]?" "+p("programmers joke"):"")]);function $(e,a){if(typeof t[e]===a)return!0;if(void 0!==t[e])throw p("conf param unknown type",{key:e,given:typeof t[e],expected:a});return!1}function U(a,t,n,i){if(void 0===i&&(i=F),"number"==typeof a){var r=0;return-1===a?r=e.length-t:void 0===i[a][0][t]?(i[a][0],-1===t?(r=e.length,"object"==typeof i[a+1]&&"number"==typeof i[a+1][2]?r-=i[a+1][2]:"number"==typeof i[a][2]&&(r-=i[a][2])):(Z("Bug in warning generation code which could not determine the exact position of the warning or error in value."),r=e.length,"number"==typeof i[a][2]&&(r-=i[a][2],console.warn("Last token for rule: "+JSON.stringify(i[a])),console.log(e.substring(0,r)+" <--- ("+n+")"),console.log("\n")),console.warn("tokens_to_use[nrule][2] is undefined. This is ok if nrule is the last rule."))):(r=e.length,"object"==typeof i[a][0][t+1]?r-=i[a][0][t+1][2]:"number"==typeof i[a][2]&&(r-=i[a][2])),e.substring(0,r)+" <--- ("+n+")"}if("string"==typeof a)return a.substring(0,t)+" <--- ("+n+")"}function Z(a,t){return"string"!=typeof t&&(t="library bug"),a=p(t,{value:e,url:u,message:a=void 0===a?"":" "+a}),console.error(a),a}function q(e,a){var t,n=s[e];return"object"==typeof n?n:(Object.keys(V).forEach((function(n){t||Object.keys(V[n]).forEach((function(i){if(!t&&new RegExp("^"+i+"$").test(e)){var r=V[n][i];T||P.push([-1,a-e.length,p(n,{ko:e,ok:r})]),t=r}}))})),t)}function Q(e){if(M<4)return[];if(!T&&"object"==typeof e){for(var a=["year","month","week","holiday"],n=["weekday","time","24/7","state","comment"],i=[],r=[],s={},o=0;o<R.length;o++)if(0!==R[o][0].length){var f=[0,0,void 0];i[o]={},r[o]=[];do{f=ee(R[o][0],f[1]);for(var l=0;l<=f[1];l++)"object"==typeof R[o][0][l]&&"PH"===R[o][0][l][0]&&(s.PH=!0);f[0]===f[1]&&"24/7"===R[o][0][f[0]][0]&&(s["24/7"]=!0),"object"!=typeof i[o][f[2]]?i[o][f[2]]=[f[1]]:i[o][f[2]].push(f[1]),r[o].push(f[2]),f[1]++}while(f[1]<R[o][0].length)}for(o=0;o<i.length;o++){Object.keys(i[o]).forEach((function(e){i[o][e].length>1&&(P.push([o,i[o][e][i[o][e].length-1],p("use multi",{count:i[o][e].length,part2:/^(?:comment|state)/.test(e)?p("selector multi 2a",{what:p("state"===e?"selector state":"comments")}):p("selector multi 2b",{what:p(e+(/^(?:month|weekday)$/.test(e)?"s":" ranges"))})})]),N=!0)})),"object"==typeof i[o].state&&1===Object.keys(i[o]).length?0!==o&&P.push([o,R[o][0].length-1,p("default state")]):void 0===i[o].time&&("object"==typeof i[o].state&&"open"===R[o][0][i[o].state[0]][0]&&void 0===i[o].comment||void 0===i[o].comment&&void 0===i[o].state&&void 0===i[o]["24/7"])&&P.push([o,R[o][0].length-1,p("vague")]),"object"==typeof i[o].comment&&0===R[o][0][i[o].comment[0]][0].length&&P.push([o,i[o].comment[0],p("empty comment")]);for(var m=0;m<r[o].length-1;m++){var u=r[o][m],h=r[o][m+1];(-1!==a.indexOf(u)&&-1!==a.indexOf(h)||-1!==n.indexOf(u)&&-1!==n.indexOf(h))&&":"===R[o][0][i[o][u][0]][0]&&P.push([o,i[o][u][0],p("separator_for_readability")])}if("object"==typeof B[o]&&"boolean"==typeof B[o].time_wraps_over_midnight&&!0===B[o].time_wraps_over_midnight&&"object"==typeof i[o+1]&&void 0===i[o+1]["rule separator"]&&!1===R[o+1][1]){var c=[o,o+1].map((function(e){for(var t=0;t<a.length-1;t++)if("object"==typeof i[e][a[t]])return!0;return!1})),y=c.filter((function(e){return e})).length,_=!1;if("object"==typeof B[o]&&"object"==typeof B[o]&&"object"==typeof B[o].week_days&&"object"==typeof B[o+1]&&"object"==typeof B[o+1].week_days)for(m=0;m<B[o].week_days.length;m++){var g=B[o].week_days[m];if(-1!==B[o+1].week_days.indexOf(6===g?0:g+1)){_=!0;break}}else _=!0;var b=!1!==(t||{}).additional_rule_separator;y<2&&_&&b&&P.push([o+1,R[o+1][0].length-1,p("additional_rule_separator not used after time wrapping midnight"),R])}"object"!=typeof R[o][0][0]||","!==R[o][0][0][0]||"rule separator"!==R[o][0][0][1]||"object"!=typeof i[o].state||"closed"!==R[o][0][i[o].state[0]][0]&&"off"!==R[o][0][i[o].state[0]][0]||P.push([o,R[o][0].length-1,p("additional rule which evaluates to closed"),R])}if(!0===e.advance()&&s["24/7"]&&!T&&P.push([-1,0,p("strange 24/7")]),M>=5&&!s.PH&&!s["24/7"]&&!T&&("string"==typeof v&&d[x].warn_for_PH_missing||"string"!=typeof v)){var D=[];Object.keys(d).forEach((function(e){d[e].warn_for_PH_missing&&D.push(e)})),P.push([-1,0,p("public holiday",{part2:"string"!=typeof v?p("public holiday part2",{keys:D.join(", ")}):""})])}r.length>1&&r.filter((function(e){return 1===e.length&&"time"===e[0]})).length===r.length&&P.push([-1,0,p("combine rules",{ok:","})]),ae()}T=!0;var k=[];for(m=0;m<P.length;m++)k.push(U(P[m][0],P[m][1],P[m][2],P[m][3]));return k}function X(e,a){return"string"==typeof e[a][3]?3:("comment"===e[a][1]||"state"===e[a][1]||"24/7"===e[a][1]||"rule separator"===e[a][1])&&1}function ee(e,a){for(var t,n,i=a;i>=0&&!(n=X(e,i));i--);if(t=i,1===n)return t+1<e.length&&":"===e[t+1][0]&&t++,[i,t,e[i][n]];for(t++;t<e.length;t++)if(X(e,t))return[i,t-1,e[i][n]];return[i,t-1,e[i][n]]}function ae(e){var a,t={},n=!1;H="";var s=[];"object"==typeof e&&("object"==typeof e.conf&&(t=e.conf),"number"==typeof e.rule_index&&(a=e.rule_index),!0===e.get_internals&&(n=!0)),Object.keys(o).forEach((function(e){void 0===t[e]&&(t[e]=o[e])}));for(var d="en"===t.locale||"all"===t.locale,f=d?i:[1,2,3,4,5,6,7,8,9,10,11,12].map((function(e){return new Date(2018,e-1,1).toLocaleString(t.locale,{month:"short"})})),l=d?r:[1,2,3,4,5,6,7].map((function(e){return new Date(2017,0,e).toLocaleString(t.locale,{weekday:"short"})})),m=0;m<R.length;m++)if(0!==R[m][0].length){if("number"==typeof a){if(a!==m)continue}else 0!==m&&(H+=R[m][1]?t.rule_sep_string+"|| ":("rule separator"===R[m][0][0][1]?",":t.print_semicolon?";":"")+t.rule_sep_string);var u=[0,0,void 0],h=[],c=0;do{if(u=ee(R[m][0],u[1]),c>50)throw Z("Infinite loop.");"rule separator"!==u[2]&&h.push([u,Fe(R[m][0],u[0],u[1],u[2],t)]),u[1]++,c++}while(u[1]<R[m][0].length);var y=h.slice();N||h.sort((function(e,a){var t=["year","month","week","holiday","weekday","time","24/7","state","comment"];return t.indexOf(e[0][2])-t.indexOf(a[0][2])}));var _=H.length;if("string"==typeof t.locale&&"en"!==t.locale){var g;g=Pe.language!==t.locale?Pe.getFixedT(t.locale):Pe.t;for(var b=0;b<h.length;b++){var v=h[b][0][2];if("weekday"===v)r.forEach((function(e,a){h[b][1]=h[b][1].replace(new RegExp(e,"g"),l[a])}));else if("month"===v)i.forEach((function(e,a){h[b][1]=h[b][1].replace(new RegExp(e,"g"),f[a])}));else{-1===h[b][1].indexOf(":")&&(h[b][1]=g(["opening_hours:pretty."+h[b][1],h[b][1]]))}}}if(H+=h.map((function(e){return e[1]})).join(" "),s.push(h),!C){b=0;for(var x=y.length;b<x;b++)if(y[b]!==h[b]){for(var D=b+_,k=0;k<=b;k++)D+=h[k][1].length;P.push([H,D,p("switched",{first:h[b][0][2],second:y[b][0][2]})])}}}return C=!0,n?[s,R]:H}function te(e,a){if(a+arguments.length-2>e.length)return!1;for(var t=0;t<arguments.length-2;t++)if(e[a+t][1]!==arguments[t+2])return!1;return!0}function ne(e,a){return function(t){var n=e(new Date(t.getTime()+a));return void 0===n[1]?n:[n[0],new Date(n[1].getTime()-a)]}}function ie(e,a,t,n){for(var i=!1,r=[];a<e.length;){if(te(e,a,"weekday"))a=ye(e,a,t,void 0,n);else if(te(e,a,"24/7"))t.time.push((function(){return[!0]})),a++;else if(te(e,a,"holiday"))a=te(e,a+1,",")?ge(e,a,t,!0):ge(e,a,t,!1),A=!1;else if(te(e,a,"month","number")||te(e,a,"month","weekday")||te(e,a,"year","month","number")||te(e,a,"year","event")||te(e,a,"event"))a=Ce(e,a,n),A=!1;else if(te(e,a,"year"))a=ke(e,a),A=!1;else if(te(e,a,"month"))a=Te(e,a);else if(te(e,a,"week"))e[a][3]="week",a=we(e,a);else if(0===a||a===e.length-1||":"!==e[a][0]||"string"==typeof r[1]&&"time"===r[1])if(te(e,a,"number","timesep")||te(e,a,"timevar")||te(e,a,"(","timevar")||te(e,a,"number","-"))r=[a=ue(e,a,t,!1,n),"time"];else if(te(e,a,"state"))"open"===e[a][0]?t.meaning=!0:"closed"===e[a][0]||"off"===e[a][0]?t.meaning=!1:(t.meaning=!1,t.unknown=!0),i=!0,"object"==typeof e[++a]&&","===e[a][0]&&(a=[a+1]);else if(te(e,a,"comment"))t.comment=e[a][0],i||(t.meaning=!1,t.unknown=!0),i=!0,"object"==typeof e[++a]&&","===e[a][0]&&(a=[a+1]);else{if(0!==a&&a!==e.length-1||!te(e,a,"rule separator")){var s=Q();throw U(n,a,p("unexpected token",{token:e[a][1]}))+(s?" "+s.join("; "):"")}a++}else!T&&te(e,a-1,"holiday")&&P.push([n,a,p("no colon after",{token:e[a-1][1]})]),a++;if("object"==typeof a){e[a[0]-1][1]="rule separator";break}"number"==typeof r[0]&&r[0]!==a&&(r=[])}return a}function re(e,a){return new Date(e.getFullYear(),e.getMonth(),e.getDate(),0,a)}function se(e,a){var t=a-e.getDay();return new Date(e.getFullYear(),e.getMonth(),e.getDate()+t+(t<0?7:0))}function oe(e,a,t){for(;a<e.length;a++){if(te(e,a,"number","-","number"))t(e[a][0],e[a+2][0],a),a+=3;else if(te(e,a,"-","number"))t(-e[a+1][0],-e[a+1][0],a),a+=2;else{if(!te(e,a,"number"))throw U(z,a+te(e,a,"-"),"Unexpected token in number range: "+e[a][1]);t(e[a][0],e[a][0],a),a++}if(!te(e,a,","))break}return a}function de(e,a){for(var t=0,n=oe(e,a,(function(e,a,n){if(0===e||e<-5||e>5)throw U(z,n,p("number -5 to 5"));if(e!==a)throw U(z,n+2,p("range constrained weekdays"));if(0!==t)throw U(z,n,p("one weekday constraint"));t=e})),i=a;i<n;i++)e[i][4]="positive_number";if(!te(e,n,"]"))throw U(z,n,p("expected",{symbol:"]"}));return[t,n+1]}function fe(e,a,t,n){if(!T){if(0===a)throw U(z,e,p("range zero",{type:t}));1===a&&("string"==typeof n&&"no_end_year"===n?P.push([z,e,p("period one year+",{type:t})]):P.push([z,e,p("period one",{type:t})]))}}function le(e,a,t,n,i){var r=se(new Date(e,a+(n[0]>0?0:1),1),t);return r.setDate(r.getDate()+7*(n[0]+(n[0]>0?-1:0))),"object"==typeof i&&i[1]&&r.setDate(r.getDate()+i[0]),r}function me(e,a,t,n){if(a<1||a>31)throw U(t,n,p("month 31",{month:i[e]}));if((3===e||5===e||8===e||10===e)&&31===a)throw U(t,n,p("month 30",{month:i[e]}));if(1===e&&30===a)throw U(t,n,p("month feb",{month:i[e]}))}function ue(e,a,t,i,r){for(i||(e[a][3]="time");a<e.length;a++){var s,o,d=[],l=[];if(l[0]=te(e,a,"number","timesep","number"),d[0]=te(e,a,"(","timevar"),l[0]||te(e,a,"timevar")||d[0]){var u,h=!1,c=!1,y=[0,0],v=[];l[0]?s=he(e,r,a+d[0]):(v[0]=e[a+d[0]][0],s=n[v[0]],d[0]&&(y[0]=ce(e,a),s+=y[0]));var x=a+(l[0]?3:d[0]?7:1)+1;if(!te(e,x-1,"-"))if(te(e,x-1,"+"))c=!0;else{if(0===b)throw U(r,a+(l[0]?"object"==typeof e[a+3]?3:2:d[0]?2:"object"==typeof e[a+1]?1:0),p("point in time",{calc:d[0]?p("calculation")+" ":"",libraryname:m}));o=s+1,h=!0}if(c)1===i&&(s+=f),o=s>=1320?s+480:s>=1020?s+600:f;else if(!h){if(l[1]=te(e,x,"number","timesep","number"),d[1]=te(e,x,"(","timevar"),!(l[1]||te(e,x,"timevar")||d[1]))throw U(r,x-("object"==typeof e[x]?0:1),p("time range continue"));l[1]?o=he(e,r,x):(v[1]=e[x+d[1]][0],o=n[v[1]]),d[1]&&(y[1]=ce(e,x),o+=y[1])}if(te(e,a=x+(h?-1:l[1]?3:d[1]?7:!c),"/","number")){if(te(e,a+2,"timesep","number"))u=he(e,r,a+1),a+=4;else if(u=e[a+1][0],te(e,a+=2,"timesep"))throw U(r,a,p("period continue"));if(0===b)throw U(r,a-1,p("time range mode",{libraryname:m}));h=!0}else if(te(e,a,"+"))ue(e,x,t,!(o<s)||1,r),a++;else if(1===b&&!h)throw U(r,x,p("point in time mode",{libraryname:m}));if("string"==typeof _?l[0]&&(l[1]||c||h)||(A=!1):v=[],!i&&s>=f)throw U(r,x-2,p("outside current day"));if((o<s||l[0]&&l[1]&&s===o)&&(o+=f),o>2880)throw U(r,x+(l[1]?4:d[1]?7:1)-2,p("two midnights"));0===s&&o===f?t.time.push((function(){return[!0]})):o>f?(t.time.push(function(e,a,t,n,i,r,s,o){return function(d){var l=60*d.getHours()+d.getMinutes();if(t[0]){var m=E.getTimes(d,_,g)[t[0]];e=60*m.getHours()+m.getMinutes()+n[0]}if(t[1]){var u=E.getTimes(d,_,g)[t[1]];a=60*u.getHours()+u.getMinutes()+n[1],a+=f}else r&&"number"!=typeof s&&(a=e+1);if("number"==typeof s){if(l<e)return[!1,re(d,e)];if(l<=a)for(var h=e;l+s>=h;h+=s){if(h===l)return[!0,re(d,l+1)];if(l<h)return[!1,re(d,h)]}return[!1,re(d,f)]}return l<e?[!1,re(d,e)]:[!0,re(d,a),i,o]}}(s,o,v,y,c,h,u,i)),o-f>0&&(void 0===B[r]&&(B[r]={}),B[r].time_wraps_over_midnight=!0,t.wraptime.push(function(e,a,t,n,i,r){return function(s){var o=60*s.getHours()+s.getMinutes();if(a[1]){var d=E.getTimes(s,_,g)[a[1]];e=60*d.getHours()+d.getMinutes()+t[1]}if("number"==typeof i){if(o<=e)for(var f=0;o+i>=f;f+=i){if(f===o)return[!0,re(s,o+1)];if(o<f)return[!1,re(s,f)]}}else if(o<e)return[!0,re(s,e),n,r];return[!1,void 0]}}(o-f,v,y,c,u,i)))):t.time.push(function(e,a,t,n,i,r,s){return function(o){var d=60*o.getHours()+o.getMinutes();if(t[0]){var l=E.getTimes(o,_,g)[t[0]];e=60*l.getHours()+l.getMinutes()+n[0]}if(t[1]){var m=E.getTimes(o,_,g)[t[1]];a=60*m.getHours()+m.getMinutes()+n[1]}else r&&"number"!=typeof s&&(a=e+1);if("number"==typeof s){if(d<e)return[!1,re(o,e)];if(d<=a)for(var u=e;d+s>=u;u+=s){if(u===d)return[!0,re(o,d+1)];if(d<u)return[!1,re(o,u)]}return[!1,re(o,f)]}return d<e?[!1,re(o,e)]:d<a?[!0,re(o,a),i]:[!1,re(o,e+f)]}}(s,o,v,y,c,h,u))}else{if(!te(e,a,"number","-","number")){if(te(e,a,"("))throw U(r,a,'Missing variable time (e.g. sunrise) after: "'+e[a][1]+'"');if(te(e,a,"number","timesep"))throw U(r,a+1,'Missing minutes in time range after: "'+e[a+1][1]+'"');if(te(e,a,"number"))throw U(r,a+("object"==typeof e[a+1]?1:0),'Missing time separator in time range after: "'+e[a][1]+'"');return[a]}if(s=60*e[a][0],o=60*e[a+2][0],T||P.push([r,a+2,p("without minutes",{syntax:(e[a][0]<10?"0":"")+e[a][0]+":00-"+(e[a+2][0]<10?"0":"")+e[a+2][0]+":00"})]),s>=f)throw U(r,a,p("outside day"));if(o<s&&(o+=f),o>2880)throw U(r,a+2,p("two midnights"));o>f?(t.time.push(function(e,a){return function(t){return 60*t.getHours()+t.getMinutes()<e?[!1,re(t,e)]:[!0,re(t,a)]}}(s,o)),o-f>0&&(void 0===B[r]&&(B[r]={}),B[r].time_wraps_over_midnight=!0,t.wraptime.push(function(e){return function(a){return 60*a.getHours()+a.getMinutes()<e?[!0,re(a,e)]:[!1,void 0]}}(o-f)))):t.time.push(function(e,a){return function(t){var n=60*t.getHours()+t.getMinutes();return n<e?[!1,re(t,e)]:n<a?[!0,re(t,a),c]:[!1,re(t,e+f)]}}(s,o)),a+=3}if(!te(e,a,","))break;void 0!==e[a+1]||T||P.push([r,a,p("value ends with token",{token:e[a][1]})])}return a}function he(e,a,t){if(e[t+2][0]>59)throw U(a,t+2,"Minutes are greater than 59.");return 60*e[t][0]+e[t+2][0]}function ce(e,a){var t;if(te(e,a+2,"+")||te(e,a+2,"-"))if(te(e,a+3,"number","timesep","number")){if(te(e,a+6,")")){var n="+"===e[a+2][0]?"1":"-1",i=he(e,z,a+3)*n;return 0===i&&P.push([z,a+5,p("zero calculation")]),i}t=[a+6,". "+p("missing",{symbol:")"})+"."]}else t=[a+5," "+p("(time)")+"."];else t=[a+2,". "+p("expected",{symbol:'+" or "-'})];if(t)throw U(z,t[0],p("calculation syntax")+t[1])}function ye(e,a,t,n,i){for(n||(n=!0,e[a][3]="weekday");a<e.length;a++){if(te(e,a,"weekday","[")){var r=[],s=oe(e,a+2,(function(e,a,t){if(0===e||e<-5||e>5)throw U(i,t,p("number -5 to 5"));if(e===a)r.push(e);else{if(!(e<a))throw U(i,t+2,p("bad range",{from:e,to:a}));for(var n=e;n<=a;n++){if(0===n||n<-5||n>5)throw U(i,t+2,p("number -5 to 5"));r.push(n)}}}));if(!te(e,s,"]"))throw U(i,s+("object"==typeof e[s]?0:-1),p("] or more numbers"));var o=_e(e,s+1,6,"constrained weekdays");A=!1;for(var d=0;d<r.length;d++)t.weekday.push(function(e,a,t){return function(n){var i,r=pe(n,!1),s=new Date(n.getFullYear(),n.getMonth(),1),o=new Date(n.getFullYear(),n.getMonth()+1,1);i=le(n.getFullYear(),n.getMonth(),e,[a]);var d,l=new Date(i.getFullYear(),i.getMonth(),i.getDate()+t);if(l.getTime()<s.getTime()){if(!(i.getTime()>=s.getTime()))return[!1,o];l=se(new Date(n.getFullYear(),n.getMonth()+(a>0?0:1)+1,1),e),i.setDate(l.getDate()+7*(a+(a>0?-1:0))+t)}else if(l.getTime()>=o.getTime()&&i.getTime()>=o.getTime())return[!1,o];if(t>0){if((d=se(new Date(n.getFullYear(),n.getMonth()+(a>0?0:1)-1,1),e)).setDate(d.getDate()+7*(a+(a>0?-1:0))+t),r===pe(d,!1))return[!0,re(n,f)]}else if(t<0)if((d=se(new Date(n.getFullYear(),n.getMonth()+(a>0?0:1)+1,1),e)).setDate(d.getDate()+7*(a+(a>0?-1:0))+t),d.getTime()>=o.getTime()){if(l.getTime()>=o.getTime())return[!1,d]}else{if(l.getTime()<o.getTime()&&pe(l,!1)===r)return[!0,re(n,f)];l=d}return n.getDate()===l.getDate()?[!0,re(n,f)]:n.getDate()<l.getDate()?[!1,l]:[!1,o]}}(e[a][0],r[d],o[0]));a=s+1+o[1]}else{if(!te(e,a,"weekday")){if(te(e,a,"holiday"))return A=!1,ge(e,a,t,!0,n);throw te(e,a-1,",")?U(i,a-1,p("additional rule no sense")):U(i,a,p("unexpected token weekday range",{token:e[a][1]}))}var l=te(e,a+1,"-","weekday"),m=e[a][0],u=l?e[a+2][0]:m,h=!0;if(u<m){var c=u;u=m-1,m=c+1,h=!1}var y=Array.apply(0,Array(u-m+1)).map((function(e,a){return a+u}));void 0===B[i]&&(B[i]={}),"object"==typeof B[i].week_days?Array.prototype.push.apply(B[i].week_days,y):B[i].week_days=y,u<m?t.weekday.push((function(){return[!0]})):t.weekday.push(function(e,a,t){return function(n){var i=n.getDay();return i<e||i>a?[!t,se(n,e)]:[t,se(n,a+1)]}}(m,u,h)),a+=l?3:1}if(!te(e,a,","))break}return a}function _e(e,a,t,n){var i=[0,0];if(i[0]=te(e,a,"+")||(te(e,a,"-")?-1:0),0!==i[0]&&te(e,a+1,"number","calcday")){if(e[a+1][0]>t)throw U(z,a+2,p("max differ",{maxdiffer:t,name:n}));i[0]*=e[a+1][0],0!==i[0]||T||P.push([z,a+2,p("adding 0")]),i[1]=3}else i[0]=0;return i}function ge(e,a,t,n,i){for(i||(e[a][3]=n?"weekday":"holiday");a<e.length;a++){if(!te(e,a,"holiday")){if(te(e,a,"weekday"))return ye(e,a,t,!0,z);throw te(e,a-1,",")?U(z,a-1,p("additional rule no sense")):U(z,a,p("unexpected token holiday",{token:e[a][1]}))}if("PH"===e[a][0]){var r=ve(e[a][0]),s=_e(e,a+1,1,"public holiday"),o=function(e,a){return function(t){for(var n=De(e,t.getFullYear(),a),i=pe(t,!0),r=0;r<n.length;r++){var s=pe(n[r][0],!0);if(i<s){if(a[0]>0){var o=De(e,t.getFullYear()-1,a),d=o[o.length-1],l=pe(d[0],!0);if(i<l)return[!1,d[0]];if(i===l)return[!0,re(d[0],f),"Day after "+d[1]]}return[!1,n[r][0]]}if(i===s)return[!0,new Date(t.getFullYear(),t.getMonth(),t.getDate()+1),(a[0]>0?"Day after ":a[0]<0?"Day before ":"")+n[r][1]]}if(a[0]<0){var m=De(e,t.getFullYear()+1,a)[0];if(i===pe(m[0],!0))return[!0,re(m[0],f),"Day before "+m[1]]}return[!1,new Date(n[0][0].getFullYear()+1,n[0][0].getMonth(),n[0][0].getDate())]}}(r,s);n?t.weekday.push(o):t.holiday.push(o),a+=1+s[1]}else if("SH"===e[a][0]){o=function(e){return function(a){for(var t=pe(a),n=0;n<e.length;n++){var i=be(e[n],a.getFullYear());if(void 0!==i)for(var r=0;r<i.length;r+=4){var s=new Date(a.getFullYear(),i[2+r]-1,i[3+r]+1),o=100*(i[0+r]-1)+i[1+r],d=100*(i[2+r]-1)+i[3+r];s=pe(s);var f=d<o;if(t<o){var l=be(e[e.length-1],a.getFullYear()-1);if("object"==typeof l){var m=100*(l[l.length-4]-1)+l[l.length-3],u=100*(l[l.length-2]-1)+l[l.length-1];return m>u&&t<=u?[!0,new Date(a.getFullYear(),l[l.length-2]-1,l[l.length-1]+1),e[e.length-1].name]:[!1,new Date(a.getFullYear(),i[0+r]-1,i[1+r])]}return[!1,new Date(a.getFullYear(),i[0+r]-1,i[1+r])]}if(o<=t&&(t<=d||f))return[!0,new Date(a.getFullYear()+f,i[2+r]-1,i[3+r]+1),e[n].name];if(s===t)return r+4<i.length?(r+=4,[!1,new Date(a.getFullYear(),i[0+r]-1,i[1+r])]):[!1,new Date(a.getFullYear(),i[2+r]-1,i[3+r]+2)]}}throw Z(p("no SH definition",{name:"",year:a.getFullYear()}),"library bug PR only")}}(r=ve(e[a][0]));n?t.weekday.push(o):t.holiday.push(o),a+=1}if(!te(e,a,","))break}return a}function pe(e,a){return(a?1e4*e.getFullYear():0)+100*e.getMonth()+e.getDate()}function be(e,a,t){var n=e[a];if(void 0!==n||void 0!==(n=e.default))return n}function ve(e){if("string"!=typeof c)throw p("no country code");if(!L[c])throw Z(p("no holiday definition",{name:e,cc:c}),"library bug PR only");var a=[];if("string"==typeof y&&"object"==typeof L[c][y]&&"object"==typeof L[c][y][e]){var t=L[c][e]||[],n=L[c][y][e];if("PH"===e)a=n;else if(t.length){var i=t.map((function(e){return e.name}));(a=[]).push.apply(a,t),a.push.apply(a,n.filter((function(e){return-1===i.indexOf(e.name)}))),a.sort((function(e,a){var t=Object.keys(e).find((function(e){return"name"!==e})),n=Object.keys(a).find((function(e){return"name"!==e})),i=e[t],r=a[n];return i[0]-r[0]||i[1]-r[1]}))}else a=n}else{if(!L[c][e])throw Z(p("no holiday definition state",{name:e,cc:c,state:y}),"library bug PR only");var r=L[c][e];switch(e){case"PH":r.forEach((function(e){"only_states"in e&&-1===e.only_states.indexOf(y)||a.push(e)}));break;case"SH":a=r}}if(0===a.length)throw Z(p("no holiday definition",{name:e,cc:c}),"library bug PR only");return a}function xe(e){var a=Math.floor(e/100),t=e-19*Math.floor(e/19),n=Math.floor((a-17)/25),i=a-Math.floor(a/4)-Math.floor((a-n)/3)+19*t+15;i-=30*Math.floor(i/30),i-=Math.floor(i/28)*(1-Math.floor(i/28)*Math.floor(29/(i+1))*Math.floor((21-t)/11));var r,s=e+Math.floor(e/4)+i+2-a+Math.floor(a/4),o=i-(s-=7*Math.floor(s/7)),d=3+Math.floor((o+40)/44),f=o+28-31*Math.floor(d/4),l=(19*(e%19)+15)%30,m=l+(2*(e%4)+4*(e%7)-l+34)%7;r=m<9||m+4<31?new Date(e,3,m+4):new Date(e,4,m-26);var u=new Date(e,2,0),h=u.getDate()-u.getDay(),c=24-(6+new Date(e,4,24).getDay())%7,y=0===new Date(e,6,1).getDay()?2:1;function _(a,t){return 1+(7+t-new Date(e,a,1).getDay())%7}function g(a,t){var n=new Date(e,a+1,0),i=(7+n.getDay()-t)%7;return n.getDate()-i}function p(e,a){var t=e-a.getDay();return t<0&&(t+=7),a.setDate(a.getDate()+t),a}function b(e,a,t){if(e>=a)throw Z("Not implemented yet.");if(e<=t.getDay()&&t.getDay()<=a)return t;var n=e-t.getDay();return n<0&&(n+=7),t.setDate(t.getDate()+n),t}return{easter:new Date(e,d-1,f),"orthodox easter":r,victoriaDay:new Date(e,4,c),canadaDay:new Date(e,6,y),firstJanuaryMonday:new Date(e,0,_(0,1)),firstFebruaryMonday:new Date(e,1,_(1,1)),lastFebruarySunday:new Date(e,1,h),firstMarchMonday:new Date(e,2,_(2,1)),firstAprilMonday:new Date(e,3,_(3,1)),firstMayMonday:new Date(e,4,_(4,1)),firstJuneMonday:new Date(e,5,_(5,1)),firstJulyMonday:new Date(e,6,_(6,1)),firstAugustMonday:new Date(e,7,_(7,1)),firstSeptemberMonday:new Date(e,8,_(8,1)),firstSeptemberTuesday:new Date(e,8,_(8,2)),firstSeptemberSunday:new Date(e,8,_(8,0)),firstOctoberMonday:new Date(e,9,_(9,1)),firstNovemberMonday:new Date(e,10,_(10,1)),firstNovemberTuesday:new Date(e,10,_(10,2)),firstMarchTuesday:new Date(e,2,_(2,2)),firstAugustTuesday:new Date(e,7,_(7,2)),firstAugustFriday:new Date(e,7,_(7,5)),firstNovemberThursday:new Date(e,10,_(10,4)),lastMayMonday:new Date(e,4,g(4,1)),lastMarchMonday:new Date(e,2,g(2,1)),lastAprilMonday:new Date(e,3,g(3,1)),lastAprilFriday:new Date(e,3,g(3,5)),lastAugustMonday:new Date(e,7,g(7,1)),lastSeptemberMonday:new Date(e,8,g(8,1)),lastSeptemberFriday:new Date(e,8,g(8,5)),lastOctoberMonday:new Date(e,9,g(9,1)),lastOctoberFriday:new Date(e,9,g(9,5)),nextSaturday20Jun:p(6,new Date(e,5,20)),nextSaturday31Oct:p(6,new Date(e,9,31)),nextWednesday16Nov:p(3,new Date(e,10,16)),"nextMo-Fr17March":b(1,5,new Date(e,2,17)),"nextMo-Sa01May":b(1,6,new Date(e,4,1)),"nextMo-Sa07August":b(1,6,new Date(e,7,7)),"nextMo-Sa25December":b(1,6,new Date(e,11,25)),springEquinox:function(e){return e>=1900&&e<=1923?e%4==3?new Date(e,2,22):new Date(e,2,21):e>=1924&&e<=1959?new Date(e,2,21):e>=1960&&e<=1991?e%4==0?new Date(e,2,20):new Date(e,2,21):e>=1992&&e<=2023?e%4==0||e%4==1?new Date(e,2,20):new Date(e,2,21):e>=2024&&e<=2055?e%4==3?new Date(e,2,21):new Date(e,2,20):e>=2056&&e<=2091?new Date(e,2,20):e>=2092&&e<=2099?e%4==0?new Date(e,2,19):new Date(e,2,20):void 0}(e),autumnalEquinox:function(e){return e>=1900&&e<=1919?e%4==0?new Date(e,8,23):new Date(e,8,24):e>=1920&&e<=1947?e%4==0||e%4==1?new Date(e,8,23):new Date(e,8,24):e>=1948&&e<=1979?e%4==3?new Date(e,8,24):new Date(e,8,23):e>=1980&&e<=2011?new Date(e,8,23):e>=2012&&e<=2043?e%4==0?new Date(e,8,22):new Date(e,8,23):e>=2044&&e<=2075?e%4==0||e%4==1?new Date(e,8,22):new Date(e,8,23):e>=2076&&e<=2099?e%4==3?new Date(e,8,23):new Date(e,8,22):void 0}(e)}}function De(e,a,t){var n,i=xe(a),r=[];return e.forEach((function(e){if("fixed_date"in e)n=new Date(a,e.fixed_date[0]-1,e.fixed_date[1]);else{if(!("variable_date"in e))throw Z("Unexpected object: "+JSON.stringify(e,null,"    "));var s=i[e.variable_date];if(!s)throw p("movable no formula",{name:e.name});var o=0;if("offset"in e&&(o=e.offset),n=new Date(s.getFullYear(),s.getMonth(),s.getDate()+o),a!==n.getFullYear())throw p("movable not in year",{name:e.variable_date,days:o})}t[0]&&n.setDate(n.getDate()+t[0]),r.push([n,e.name])})),r=r.sort((function(e,a){return e[0].getTime()<a[0].getTime()?-1:e[0].getTime()>a[0].getTime()?1:0}))}function ke(e,a){for(e[a][3]="year";a<e.length;a++){if(!te(e,a,"year"))throw te(e,a-1,",")?U(z,a-1,p("additional rule no sense")):U(z,a,p("unexpected token year range",{token:e[a][1]}));var t,n,i=!1;te(e,a+1,"-","year","/","number")?(i=!0,t=!0,fe(a+4,n=parseInt(e[a+4][0]),"year")):(i=te(e,a+1,"-","year"),(t=te(e,a+1,"/","number"))?fe(a+2,n=parseInt(e[a+2][0]),"year","no_end_year"):te(e,a+1,"+")&&(n=1,t=2));var r=parseInt(e[a][0]);if(i&&e[a+2][0]<=r)throw e[a+2][0]===r?U(z,a,p("year range one year",{year:r})):U(z,a,p("year range reverse"));if(!i&&r<(new Date).getFullYear()&&P.push([z,a,p("year past")]),i&&e[a+2][0]<(new Date).getFullYear()&&P.push([z,a+2,p("year past")]),W.year.push(function(e,a,t,n,i,r){return function(s){var o=s.getFullYear(),d=n?parseInt(e[a+2][0]):t;if(o<t)return[!1,new Date(t,0,1)];if(i){if(t<=o){if(n&&o>d)return[!1];if(r>0)return(o-t)%r==0?[!0,new Date(o+1,0,1)]:[!1,new Date(o+r-1,0,1)]}}else if(n){if(o<=d)return[!0,new Date(d+1,0,1)]}else if(o===t)return[!0];return[!1]}}(e,a,r,i,t,n)),!te(e,a+=1+(i?2:0)+(t?2===t?1:2:0),","))break}return a}function we(e,a){for(;a<e.length;a++){if(te(e,a,"week")&&a++,!te(e,a,"number"))throw te(e,a-1,",")?U(z,a-1,p("additional rule no sense")):U(z,a,p("unexpected token week range",{token:e[a][1]}));var t=te(e,a+1,"-","number"),n=0,i=e[a][0],r=t?e[a+2][0]:i;if(i>r)throw U(z,a+2,p("week range reverse"));if(i<1)throw U(z,a,p("week negative"));if(r>53)throw U(z,t?a+2:a,p("week exceed"));if(t&&(n=te(e,a+3,"/","number"))){if(n=e[a+4][0],e[a+4][4]="positive_number",n<2)throw U(z,a+4,p("week period less than 2",{weekfrom:i,weekto:r,period:n}));if(n>26)throw U(z,a+4,p("week period greater than 26",{weekfrom:i}))}if(!A||i<=1&&r>=53&&!n||(A=!1),n||1!==i||53!==r?W.week.push(function(e,a,t){return function(n){var i=Me(n);return i<e||i>a?[!1,Se(e,n)]:t?(i-e)%t==0?[!0,Se(i+1,n)]:[!1,Se(i+t-1,n)]:[!0,Se(53===a?1:a+1,n)]}}(i,r,n)):W.week.push((function(){return[!0]})),!te(e,a+=1+(t?2:0)+(n?2:0),","))break}return a}function Me(e){(e=new Date(+e)).setHours(0,0,0,0),e.setDate(e.getDate()+4-(e.getDay()||7));var a=new Date(e.getFullYear(),0,1);return Math.ceil(((e-a)/864e5+1)/7)}function Se(e,a){for(var t,n,i,r,s,o,d=-1;d<=1;d++)if(n=e,i=a.getFullYear()+d,r=void 0,s=void 0,o=void 0,r=new Date(i,0,1+7*(n-1)),s=r.getDay(),o=r,s<=4?o.setDate(r.getDate()-r.getDay()+1):o.setDate(r.getDate()+8-r.getDay()),(t=o).getTime()>a.getTime())return t;throw Z()}function Te(e,a,t,n){for(n||(e[a][3]="month");a<e.length;a++){if(te(e,a,"month","number")&&!te(e,a+2,"timesep","number"))return Ce(e,a,z,!0);if(!te(e,a,"month"))throw U(z,a,p("unexpected token month range",{token:e[a][1]}));var i=te(e,a+1,"-","month"),r=e[a][0],s=i?e[a+2][0]:r;i&&A?r!==(s+1)%12&&(A=!1):A=!1;var o=!0;if(s<r){var d=s;s=r-1,r=d+1,o=!1}var f=function(e,a,t){return function(n){var i=n.getMonth();return a<e?[!t]:i<e||i>a?[!t,Ne(n,e)]:[t,Ne(n,a+1)]}}(r,s,o);if(!0===t?W.monthday.push(f):W.month.push(f),!te(e,a+=i?3:1,","))break}return a}function Ne(e,a){return new Date(e.getFullYear(),a<e.getMonth()?a+12:a)}function Ce(e,a,t,n){for(n||(e[a][3]="month");a<e.length;a++){var i,r,s=[],o=[],d=[],f=[],m=[];if(s[0]=te(e,a,"year"),o[0]=te(e,a+s[0],"month","number"),d[0]=te(e,a+s[0],"event"),d[0]&&(f[0]=_e(e,a+s[0]+1,200,"event like easter")),te(e,a+s[0],"month","weekday","[")?(m[0]=de(e,a+s[0]+3),f[0]=_e(e,m[0][1],6,"constrained weekdays"),i=m[0][1]+("object"==typeof f[0]&&f[0][1]?3:0)):i=a+s[0]+(d[0]?"object"==typeof f[0]&&f[0][1]?4:1:2),(o[0]||d[0]||m[0])&&te(e,i,"-")&&(s[1]=te(e,i+1,"year"),r=i+1+s[1],o[1]=te(e,r,"month","number"),o[1]||(d[1]=te(e,r,"event"),d[1]?f[1]=_e(e,r+1,366,"event like easter"):te(e,r,"month","weekday","[")&&(m[1]=de(e,r+3),f[1]=_e(e,m[1][1],6,"constrained weekdays")))),s[0]===s[1]&&(o[1]||d[1]||m[1])){o[0]&&me(e[a+s[0]][0],e[a+s[0]+1][0],t,a+s[0]+1),o[1]&&me(e[r][0],e[r+1][0],t,r+1);var u=function(e,a,t,n,i,r,s,o){return function(d){var f,l,m=new Date(d.getFullYear()+1,0,1);if(i[0]){if(f=xe(n[0]?parseInt(e[a][0]):d.getFullYear())[e[a+n[0]][0]],"object"==typeof r[0]&&r[0][1]){var u=f.getFullYear();if(f.setDate(f.getDate()+r[0][0]),u!==f.getFullYear())throw U(t,a+n[0]+3*r[0][1],p("movable not in year",{name:e[a+n[0]][0],days:r[0][0]}))}}else f=o[0]?le(n[0]?e[a][0]:d.getFullYear(),e[a+n[0]][0],e[a+n[0]+1][0],o[0],r[0]):new Date(n[0]?e[a][0]:d.getFullYear(),e[a+n[0]][0],e[a+n[0]+1][0]);if(i[1]){if(l=xe(n[1]?parseInt(e[s-1][0]):d.getFullYear())[e[s][0]],"object"==typeof r[1]&&r[1][1]){var h=l.getFullYear();if(l.setDate(l.getDate()+r[1][0]),h!==l.getFullYear())throw U(t,s+r[1][1],p("movable not in year",{name:e[s][0],days:r[1][0]}))}}else l=o[1]?le(n[1]?e[s-1][0]:d.getFullYear(),e[s][0],e[s+1][0],o[1],r[1]):new Date(n[1]?e[s-1][0]:d.getFullYear(),e[s][0],e[s+1][0]+1);var c=!0;if(l<f){var y=l;l=f,f=y,c=!1}return d.getTime()<f.getTime()?[!c,f]:d.getTime()<l.getTime()?[c,l]:n[0]?[!c]:[!c,m]}}(e,a,t,s,d,f,r,m);!0===n?W.month.push(u):W.monthday.push(u),a=(m[1]?m[1][1]:r+(d[1]?1:2))+("object"==typeof f[1]?f[1][1]:0)}else if(o[0]){s=s[0];var h=e[a][0],c=e[a+s][0],y=!0;do{var _=e[a+1+s][0],g=te(e,a+2+s,"-","number"),v=void 0,x=e[a+s+(g?3:1)][0]+1;if(g&&te(e,a+s+4,"/","number")&&(v=e[a+s+5][0],e[a+s+5][4]="positive_number",fe(a+s+5,v,"day")),y){var D=a+s+1+(g?2:0)+(v?2:0)+!(g||v);if(te(e,D,"timesep","number")&&(te(e,D+2,"+")||te(e,D+2,"-")||0!==b))return Te(e,a,!0,!0)}if(x<_)throw U(t,a+s+3,p("day range reverse"));me(c,_,t,a+1+s),me(c,x-1,t,a+s+(g?3:1));u=function(e,a,t,n,i,r){return function(s){var o=new Date(s.getFullYear()+1,0,1),d=new Date(a?e:s.getFullYear(),t,n);if(1===t&&n!==d.getDate())return[!1];var f=new Date(d.getFullYear(),t,i);if(1===t&&g&&i!==f.getDate())return[!1];if(s.getTime()<d.getTime())return[!1,d];if(s.getTime()>=f.getTime())return[!1,o];if(!r)return[!0,f];var m=Math.floor((s.getTime()-d.getTime())/l)%r;return 0===m?[!0,new Date(s.getFullYear(),s.getMonth(),s.getDate()+1)]:[!1,new Date(s.getFullYear(),s.getMonth(),s.getDate()+r-m)]}}(h,s,c,_,x,v);!0===n?W.month.push(u):W.monthday.push(u),a+=2+s+(g?2:0)+(v?2:0),y=!1}while(te(e,a,",","number"))}else if(d[0]){u=function(e,a,t,n,i){return function(r){var s=xe(n?e[a][0]:r.getFullYear())[e[a+n][0]];if(!s)throw p("movable no formula",{name:e[a+n][0]});if(i[0]&&(s.setDate(s.getDate()+i[0]),r.getFullYear()!==s.getFullYear()))throw U(t,a+n+i[1],p("movable not in year",{name:e[a+n][0],days:i[0]}));return r.getTime()<s.getTime()?[!1,s]:100*s.getMonth()+s.getDate()===100*r.getMonth()+r.getDate()?[!0,new Date(r.getFullYear(),r.getMonth(),r.getDate()+1)]:[!1,new Date(r.getFullYear()+1,0,1)]}}(e,a,t,s[0],f[0]);!0===n?W.month.push(u):W.monthday.push(u),a+=s[0]+d[0]+("number"==typeof f[0][1]&&f[0][1]?3:0)}else{if(!m[0])return te(e,a,"month")?Te(e,a,!0,!0):a;a=Te(e,a)}if(!te(e,a,","))break}return a}function Fe(e,a,t,n,s){for(var o="",d=a;d<=t;)te(e,d,"weekday")?(!s.leave_weekday_sep_one_day_betw&&d-a>1&&(te(e,d-1,",")||te(e,d-1,"-"))&&te(e,d-2,"weekday")&&e[d][0]===(e[d-2][0]+1)%7&&(o=o.substring(0,o.length-1)+s.sep_one_day_between),o+=r[e[d][0]]):d-a>0&&"time"===n&&te(e,d-1,"timesep")&&te(e,d,"number")?o+=(e[d][0]<10?"0":"")+e[d][0].toString():"time"===n&&s.zero_pad_hour&&d!==e.length&&te(e,d,"number")&&te(e,d+1,"timesep")?o+=(e[d][0]<10?0===e[d][0]&&s.one_zero_if_hour_zero?"":"0":"")+e[d][0].toString():"time"===n&&d+2<=t&&te(e,d,"number")&&te(e,d+1,"-")&&te(e,d+2,"number")?(o+=(e[d][0]<10?0===e[d][0]&&s.one_zero_if_hour_zero?"":"0":"")+e[d][0].toString(),o+=":00-"+(e[d+2][0]<10?"0":"")+e[d+2][0].toString()+":00",d+=2):te(e,d,"comment")?o+='"'+e[d][0].toString()+'"':te(e,d,"closed")?o+=s.leave_off_closed?e[d][0]:s.keyword_for_off_closed:d-a>0&&te(e,d,"number")&&("month"===n||"week"===n)?o+=(te(e,d-1,"month")||te(e,d-1,"week")?" ":"")+(s.zero_pad_month_and_week_numbers&&"positive_number"!==e[d][4]&&e[d][0]<10?"0":"")+e[d][0]:d-a>0&&te(e,d,"month")&&te(e,d-1,"year")?o+=" "+i[[e[d][0]]]:d-a>0&&te(e,d,"event")&&te(e,d-1,"year")?o+=" "+e[d][0]:te(e,d,"month")?(o+=i[[e[d][0]]],d+1<=t&&te(e,d+1,"weekday")&&(o+=" ")):d+2<=t&&(te(e,d,"-")||te(e,d,"+"))&&te(e,d+1,"number","calcday")?(o+=" "+e[d][0]+e[d+1][0]+" day"+(1===Math.abs(e[d+1][0])?"":"s"),d+=2):d===t&&"weekday"===n&&":"===e[d][0]||d===t&&"time"===n&&","===e[d][0]||(o+=e[d][0].toString()),d++;return o}this.getStatePair=function(e){for(var a,t,n,i=!1,r=!1,s=[],o=0;o<j.length;o++){for(var d=!0,f=0;f<j[o].date.length;f++){for(var l=j[o].date[f],m=!1,u=0;u<l.length;u++){(y=l[u](e))[0]&&(m=!0,"string"==typeof y[2]&&(t=[y[2],o])),(void 0===a||"object"==typeof y[1]&&y[1].getTime()<a.getTime())&&(a=y[1])}if(!m){d=!1;break}}d&&(!(j[o].date.length>0||o>0&&j[o].meaning&&0===j[o-1].date.length)||!j[o].meaning&&!j[o].unknown||j[o].wrapped||j[o].additional||j[o].fallback||(s=[]),s.push(o))}for(o=0;o<s.length;o++){var h=s[o];0===j[h].time.length&&(j[h].fallback&&(!j[h].fallback||i||r)||(i=j[h].meaning,r=j[h].unknown,n=h));for(var c=0;c<j[h].time.length;c++){var y;if((y=j[h].time[c](e))[0]&&(!j[h].fallback||j[h].fallback&&!i&&!r)){if(i=j[h].meaning,r=j[h].unknown,n=h,"object"==typeof t&&t[0]===p("open end")&&(t=void 0),!0===y[2]&&(i||r)&&(t=[p("open end"),n],i=!1,r=!0,"function"==typeof j[h].time[c+1])){var _=j[h].time[c+1](e);!_[0]&&"object"==typeof _[1]&&j[h].time[c](new Date(e.getTime()-1))[0]&&(i=!1,r=!1)}j[h].fallback&&(void 0===a||void 0!==y[1]&&y[1]<a)&&(a=y[1])}(void 0===a||"object"==typeof y[1]&&y[1]<a)&&(a=y[1])}}return"object"==typeof j[n]&&"string"==typeof j[n].comment?t=j[n].comment:"object"==typeof t&&(t=t[1]===n?t[0]:void 0),[i,a,r,t,n]},this.getState=function(e){return this.getIterator(e).getState()},this.getUnknown=function(e){return this.getIterator(e).getUnknown()},this.getStateString=function(e,a){return this.getIterator(e).getStateString(a)},this.getComment=function(e){return this.getIterator(e).getComment()},this.getMatchingRule=function(e){return this.getIterator(e).getMatchingRule()},this.getWarnings=function(){return Q(this.getIterator())},this.prettifyValue=function(e){return this.getWarnings(),ae(e)},this.getNextChange=function(e,a){var t=this.getIterator(e);if(t.advance(a))return t.getDate()},this.isWeekStable=function(){return A},this.isEqualTo=function(e,a){if(void 0===a)a=new Date;var t;t=this.isWeekStable()&&e.isWeekStable()?new Date(a.getTime()+864e6):new Date(a.getTime()+158112e6);for(var n=this.getIterator(a),i=e.getIterator(a);n.advance(t);){i.advance(t);var r=[];if(n.getDate().getTime()!==i.getDate().getTime()&&r.push("getDate"),n.getState()!==i.getState()&&r.push("getState"),n.getUnknown()!==i.getUnknown()&&r.push("getUnknown"),n.getComment()!==i.getComment()&&r.push("getComment"),r.length){var s={};return s[n.getDate().getTime()]=r,[!1,{matching_rule:n.getMatchingRule(),matching_rule_other:i.getMatchingRule(),deviation_for_time:s}]}}return[!0]},this.getOpenIntervals=function(e,a){var t=[],n=this.getIterator(e);for((n.getState()||n.getUnknown())&&t.push([e,void 0,n.getUnknown(),n.getComment()]);n.advance(a);)n.getState()||n.getUnknown()?(0!==t.length&&void 0===t[t.length-1][1]&&(t[t.length-1][1]=n.getDate()),t.push([n.getDate(),void 0,n.getUnknown(),n.getComment()])):0!==t.length&&void 0===t[t.length-1][1]&&(t[t.length-1][1]=n.getDate());return t.length>0&&void 0===t[t.length-1][1]&&(t[t.length-1][1]=a),t},this.getOpenDuration=function(e,a){for(var t=0,n=0,i=this.getIterator(e),r=i.getState()||i.getUnknown()?e:void 0,s=i.getState(),o=i.getUnknown();i.advance(a);)i.getState()||i.getUnknown()?("object"==typeof r&&(o?n+=i.getDate().getTime()-r.getTime():s&&(t+=i.getDate().getTime()-r.getTime())),r=i.getDate(),s=i.getState(),o=i.getUnknown()):"object"==typeof r&&(o?n+=i.getDate().getTime()-r.getTime():t+=i.getDate().getTime()-r.getTime(),r=void 0);return"object"==typeof r&&(o?n+=a.getTime()-r.getTime():t+=a.getTime()-r.getTime()),[t,n]},this.getIterator=function(e){return new function(a){void 0===e&&(e=new Date);var t=[void 0,e,void 0,void 0,void 0],n=a.getStatePair(e);this.getDate=function(){return t[1]},this.setDate=function(e){if("object"!=typeof e)throw p("date parameter needed");t=[void 0,e,void 0,void 0,void 0],n=a.getStatePair(e)},this.getState=function(){return n[0]},this.getUnknown=function(){return n[2]},this.getStateString=function(e){return n[0]?"open":n[2]?"unknown":e?"closed":"close"},this.getComment=function(){return n[3]},this.getMatchingRule=function(){if(void 0!==n[4])return j[n[4]].build_from_token_rule[2]},this.advance=function(e){if(void 0===e)e=new Date(t[1].getTime()+158112e6);else if(e.getTime()<=t[1].getTime())return!1;do{if(void 0===n[1])return!1;if(n[1].getTime()<=t[1].getTime())throw"Fatal: infinite loop in nextChange";if(n[1].getTime()>=e.getTime())return!1;t=n,n=a.getStatePair(t[1])}while(n[0]===t[0]&&n[2]===t[2]&&n[3]===t[3]);return!0}}(this)}}}));
